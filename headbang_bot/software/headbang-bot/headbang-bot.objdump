
headbang-bot.elf:     file format elf32-littlenios2
headbang-bot.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08020230

Program Header:
    LOAD off    0x00001000 vaddr 0x08020000 paddr 0x08020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x08020020 paddr 0x08020020 align 2**12
         filesz 0x0000f7fc memsz 0x0000f7fc flags r-x
    LOAD off    0x00011000 vaddr 0x00000000 paddr 0x0802f81c align 2**12
         filesz 0x00001dec memsz 0x00001f4c flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  08020000  08020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000210  08020020  08020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f5ec  08020230  08020230  00001230  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000300  00000000  0802f81c  00011000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  00000300  0802fb1c  00011300  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000160  00001dec  08031608  00012dec  2**2
                  ALLOC, SMALL_DATA
  6 .sdram        00000000  00001f4c  00001f4c  00012dec  2**0
                  CONTENTS
  7 .onchip_memory2 00000000  08031608  08031608  00012dec  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012dec  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000e70  00000000  00000000  00012e10  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   0002281e  00000000  00000000  00013c80  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008bfd  00000000  00000000  0003649e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b119  00000000  00000000  0003f09b  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  00001fe8  00000000  00000000  0004a1b4  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000382b  00000000  00000000  0004c19c  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017755  00000000  00000000  0004f9c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000010  00000000  00000000  0006711c  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000018a0  00000000  00000000  00067130  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006b996  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000a  00000000  00000000  0006b999  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006b9a3  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006b9a4  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   00000009  00000000  00000000  0006b9a5  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    00000009  00000000  00000000  0006b9ae  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   00000009  00000000  00000000  0006b9b7  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000009  00000000  00000000  0006b9c0  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 00000039  00000000  00000000  0006b9c9  2**0
                  CONTENTS, READONLY
 27 .jdi          00005078  00000000  00000000  0006ba02  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     00052472  00000000  00000000  00070a7a  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
08020000 l    d  .entry	00000000 .entry
08020020 l    d  .exceptions	00000000 .exceptions
08020230 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
00000300 l    d  .rwdata	00000000 .rwdata
00001dec l    d  .bss	00000000 .bss
00001f4c l    d  .sdram	00000000 .sdram
08031608 l    d  .onchip_memory2	00000000 .onchip_memory2
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../headbang-bot_bsp//obj/HAL/src/crt0.o
08020268 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
0000004e l     O .rodata	00000010 zeroes.4404
08022680 l     F .text	000000bc __sbprintf
0000005e l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
08022890 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
080243e8 l     F .text	00000008 __fp_unlock
080243fc l     F .text	0000019c __sinit.part.1
08024598 l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
00000300 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000744 l     O .rwdata	00000020 lc_ctype_charset
00000724 l     O .rwdata	00000020 lc_message_charset
00000764 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00000090 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
08026f7c l     F .text	000000fc __sprint_r.part.0
000001b4 l     O .rodata	00000010 zeroes.4349
080285b8 l     F .text	000000bc __sbprintf
000001c4 l     O .rodata	00000010 blanks.4348
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0802d188 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0802d29c l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0802d2c8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
0802d3bc l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0802d4a4 l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0802d590 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0802d76c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00001ddc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
0802d9e0 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0802db1c l     F .text	00000034 alt_dev_reg
00000d4c l     O .rwdata	00001060 jtag_uart
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0802ddf4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0802e000 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0802e784 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0802ebe4 l     F .text	000000e4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
0802ed44 l     F .text	0000003c alt_get_errno
0802ed80 l     F .text	000000ec alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00001e20 g     O .bss	00000004 alt_instruction_exception_handler
08026a8c g     F .text	00000074 _mprec_log10
08026b78 g     F .text	0000008c __any_on
08029034 g     F .text	00000054 _isatty_r
0000009c g     O .rodata	00000028 __mprec_tinytens
0802d6a8 g     F .text	0000007c alt_main
00001e4c g     O .bss	00000100 alt_irq
08029088 g     F .text	00000060 _lseek_r
0802fb1c g       *ABS*	00000000 __flash_rwdata_start
0802bb60 g     F .text	00000088 .hidden __eqdf2
00001f4c g       *ABS*	00000000 __alt_heap_start
0802034c g     F .text	0000003c printf
08029960 g     F .text	0000009c _wcrtomb_r
08026da4 g     F .text	0000005c __sseek
08024748 g     F .text	00000010 __sinit
08029808 g     F .text	00000140 __swbuf_r
08024d54 g     F .text	0000007c _setlocale_r
080245a0 g     F .text	00000078 __sfmoreglue
0802d748 g     F .text	00000024 __malloc_unlock
080290e8 g     F .text	0000015c memmove
08024730 g     F .text	00000018 _cleanup
08025b4c g     F .text	000000a8 _Balloc
0802bbe8 g     F .text	000000dc .hidden __gtdf2
0802f16c g     F .text	00000024 altera_nios2_gen2_irq_init
08020000 g     F .entry	0000000c __reset
08020020 g       *ABS*	00000000 __flash_exceptions_start
08028b10 g     F .text	0000005c _fstat_r
00001e04 g     O .bss	00000004 errno
08026d20 g     F .text	00000008 __seofread
00001e0c g     O .bss	00000004 alt_argv
00009dac g       *ABS*	00000000 _gp
00000bcc g     O .rwdata	00000180 alt_fd_list
0802f190 g     F .text	00000090 alt_find_dev
080258dc g     F .text	00000148 memcpy
080243f0 g     F .text	0000000c _cleanup_r
0802cfa0 g     F .text	000000dc .hidden __floatsidf
0802ecc8 g     F .text	0000007c alt_io_redirect
0802bcc4 g     F .text	000000f4 .hidden __ltdf2
0802f81c g       *ABS*	00000000 __DTOR_END__
0802f3ec g     F .text	0000009c alt_exception_cause_generated_bad_addr
08026c04 g     F .text	00000074 __fpclassifyd
080269e8 g     F .text	000000a4 __ratio
0802859c g     F .text	0000001c __vfiprintf_internal
0802e1f8 g     F .text	0000021c altera_avalon_jtag_uart_read
0802031c g     F .text	00000030 _printf_r
0802a800 g     F .text	00000064 .hidden __udivsi3
0802d3f8 g     F .text	000000ac isatty
000000ec g     O .rodata	000000c8 __mprec_tens
08024dd0 g     F .text	0000000c __locale_charset
00001e00 g     O .bss	00000004 __malloc_top_pad
00001db4 g     O .rwdata	00000004 __mb_cur_max
08024e00 g     F .text	0000000c _localeconv_r
08028b6c g     F .text	000004c8 __sfvwrite_r
08025f80 g     F .text	0000003c __i2b
08026c78 g     F .text	00000054 _sbrk_r
08029244 g     F .text	00000060 _read_r
00001dd4 g     O .rwdata	00000004 alt_max_fd
08028804 g     F .text	000000f0 _fclose_r
080243b8 g     F .text	00000030 fflush
00001dfc g     O .bss	00000004 __malloc_max_sbrked_mem
0802a8e4 g     F .text	000008ac .hidden __adddf3
08026790 g     F .text	0000010c __b2d
0802a144 g     F .text	000005c4 .hidden __umoddi3
0802d5cc g     F .text	000000dc lseek
00001dac g     O .rwdata	00000004 _global_impure_ptr
080292a4 g     F .text	00000564 _realloc_r
00001f4c g       *ABS*	00000000 __bss_end
0802eaf4 g     F .text	000000f0 alt_iic_isr_register
0802f064 g     F .text	00000108 alt_tick
08029b48 g     F .text	000005fc .hidden __udivdi3
08028a6c g     F .text	00000024 _fputwc_r
000000c4 g     O .rodata	00000028 __mprec_bigtens
08025d64 g     F .text	00000104 __s2b
0802d07c g     F .text	000000a8 .hidden __floatunsidf
080264d0 g     F .text	00000060 __mcmp
08024768 g     F .text	00000018 __fp_lock_all
0802eaa8 g     F .text	0000004c alt_ic_irq_enabled
0802efc8 g     F .text	0000009c alt_alarm_stop
00001e14 g     O .bss	00000004 alt_irq_active
080200fc g     F .exceptions	000000d4 alt_irq_handler
00000ba4 g     O .rwdata	00000028 alt_dev_null
0802e764 g     F .text	00000020 alt_dcache_flush_all
08025e68 g     F .text	00000068 __hi0bits
0802cf20 g     F .text	00000080 .hidden __fixdfsi
00001dec g       *ABS*	00000000 __ram_rwdata_end
00001dcc g     O .rwdata	00000008 alt_dev_list
0802da1c g     F .text	00000100 write
00000300 g       *ABS*	00000000 __ram_rodata_end
0802d304 g     F .text	000000b8 fstat
0802bcc4 g     F .text	000000f4 .hidden __ledf2
08026248 g     F .text	00000140 __pow5mult
08027090 g     F .text	0000150c ___vfiprintf_internal_r
00001df4 g     O .bss	00000004 __nlocale_changed
0802a864 g     F .text	00000058 .hidden __umodsi3
00001f4c g       *ABS*	00000000 end
0802dd34 g     F .text	000000c0 altera_avalon_jtag_uart_init
080201d0 g     F .exceptions	00000060 alt_instruction_exception_entry
0802f81c g       *ABS*	00000000 __CTOR_LIST__
08000000 g       *ABS*	00000000 __alt_stack_pointer
0802d124 g     F .text	00000064 .hidden __clzsi2
0802e414 g     F .text	00000224 altera_avalon_jtag_uart_write
08024758 g     F .text	00000004 __sfp_lock_acquire
080257f8 g     F .text	000000e4 memchr
08020388 g     F .text	000022dc ___vfprintf_internal_r
080248bc g     F .text	00000310 _free_r
08024ddc g     F .text	00000010 __locale_mb_cur_max
0802f668 g     F .text	00000180 __call_exitprocs
00001df0 g     O .bss	00000004 __mlocale_changed
00001db8 g     O .rwdata	00000004 __malloc_sbrk_base
08020230 g     F .text	0000003c _start
00001e18 g     O .bss	00000004 _alt_tick_rate
08026388 g     F .text	00000148 __lshift
00001e1c g     O .bss	00000004 _alt_nticks
0802d7a8 g     F .text	00000104 read
0802db88 g     F .text	00000048 alt_sys_init
0802f550 g     F .text	00000118 __register_exitproc
08025fbc g     F .text	0000028c __multiply
0802e0a0 g     F .text	00000068 altera_avalon_jtag_uart_close
0802a8bc g     F .text	00000028 .hidden __mulsi3
00000300 g       *ABS*	00000000 __ram_rwdata_start
00000000 g       *ABS*	00000000 __ram_rodata_start
00001e24 g     O .bss	00000028 __malloc_current_mallinfo
0802689c g     F .text	0000014c __d2b
0802dbd0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0802f328 g     F .text	000000c4 alt_get_fd
080286d4 g     F .text	00000054 _close_r
0802f4d4 g     F .text	0000007c memcmp
0802dc90 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00001f4c g       *ABS*	00000000 __alt_stack_base
0802dce0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
0802273c g     F .text	00000154 __swsetup_r
0802b190 g     F .text	000009d0 .hidden __divdf3
08024618 g     F .text	00000118 __sfp
08026b00 g     F .text	00000078 __copybits
0000079c g     O .rwdata	00000408 __malloc_av_
08024764 g     F .text	00000004 __sinit_lock_release
0802bdb8 g     F .text	0000086c .hidden __muldf3
08026ccc g     F .text	00000054 __sread
0802f220 g     F .text	00000108 alt_find_file
0802e7c0 g     F .text	000000a4 alt_dev_llist_insert
0802d724 g     F .text	00000024 __malloc_lock
0802d930 g     F .text	000000b0 sbrk
0802435c g     F .text	0000005c _fflush_r
08028728 g     F .text	000000dc _calloc_r
00001dec g       *ABS*	00000000 __bss_start
08025a24 g     F .text	00000128 memset
0802026c g     F .text	000000b0 main
00001e10 g     O .bss	00000004 alt_envp
00001df8 g     O .bss	00000004 __malloc_max_total_mem
0802dc30 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
08029948 g     F .text	00000018 __swbuf
08026e00 g     F .text	00000008 __sclose
08000000 g       *ABS*	00000000 __alt_heap_limit
080288f4 g     F .text	00000014 fclose
08022ab8 g     F .text	00001688 _dtoa_r
08024fec g     F .text	0000080c _malloc_r
08029abc g     F .text	00000030 __ascii_wctomb
00001dd8 g     O .rwdata	00000004 alt_errno
08024bcc g     F .text	000000c4 _fwalk
0802a708 g     F .text	00000084 .hidden __divsi3
08024798 g     F .text	00000124 _malloc_trim_r
0802f81c g       *ABS*	00000000 __CTOR_END__
08026e08 g     F .text	000000dc strcmp
0802f81c g       *ABS*	00000000 __flash_rodata_start
0802f81c g       *ABS*	00000000 __DTOR_LIST__
0802bb60 g     F .text	00000088 .hidden __nedf2
0802db50 g     F .text	00000038 alt_irq_init
0802d8ac g     F .text	00000084 alt_release_fd
000001d4 g     O .rodata	00000100 .hidden __clz_tab
00001dec g     O .bss	00000004 _PathLocale
0802f488 g     F .text	00000014 atexit
08028674 g     F .text	00000060 _write_r
08024e0c g     F .text	00000018 setlocale
00001db0 g     O .rwdata	00000004 _impure_ptr
00001e08 g     O .bss	00000004 alt_argc
08024140 g     F .text	0000021c __sflush_r
0802e8c4 g     F .text	00000060 _do_dtors
08024df8 g     F .text	00000008 __locale_cjk_lang
08020020 g       .exceptions	00000000 alt_irq_entry
0802672c g     F .text	00000064 __ulp
08024780 g     F .text	00000018 __fp_unlock_all
00001dc4 g     O .rwdata	00000008 alt_fs_list
08020020 g       *ABS*	00000000 __ram_exceptions_start
08024e24 g     F .text	0000000c localeconv
08020000 g       *ABS*	00000000 __alt_mem_onchip_memory2
0802e944 g     F .text	00000050 alt_ic_isr_register
00001dec g       *ABS*	00000000 _edata
00001f4c g       *ABS*	00000000 _end
08028908 g     F .text	00000164 __fputwc
08020230 g       *ABS*	00000000 __ram_exceptions_end
0802e108 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0802ea1c g     F .text	0000008c alt_ic_irq_disable
08026d28 g     F .text	0000007c __swrite
00001dbc g     O .rwdata	00000004 __malloc_trim_threshold
08024dec g     F .text	0000000c __locale_msgcharset
0802f49c g     F .text	00000038 exit
08024c90 g     F .text	000000c4 _fwalk_reent
08026530 g     F .text	000001fc __mdiff
0802a78c g     F .text	00000074 .hidden __modsi3
08000000 g       *ABS*	00000000 __alt_data_end
08020020 g     F .exceptions	00000000 alt_exception
0802475c g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_sdram
0802f7e8 g     F .text	00000034 _exit
0802e638 g     F .text	0000012c alt_alarm_start
08024e30 g     F .text	000001bc __smakebuf_r
08026ee4 g     F .text	00000098 strlen
0802ee6c g     F .text	0000015c open
0802bbe8 g     F .text	000000dc .hidden __gedf2
00001dc0 g     O .rwdata	00000004 __wctomb
08027078 g     F .text	00000018 __sprint_r
0802e924 g     F .text	00000020 alt_icache_flush_all
00001de0 g     O .rwdata	00000004 alt_priority_mask
0802e994 g     F .text	00000088 alt_ic_irq_enable
08022664 g     F .text	0000001c __vfprintf_internal
08029aec g     F .text	0000005c _wctomb_r
0802c624 g     F .text	000008fc .hidden __subdf3
08025ed0 g     F .text	000000b0 __lo0bits
00001de4 g     O .rwdata	00000008 alt_alarm_list
0802e864 g     F .text	00000060 _do_ctors
080299fc g     F .text	000000c0 wcrtomb
0802d1c4 g     F .text	000000d8 close
0802d50c g     F .text	00000084 alt_load
08028a90 g     F .text	00000080 fputwc
08024760 g     F .text	00000004 __sinit_lock_acquire
08025c1c g     F .text	00000148 __multadd
08025bf4 g     F .text	00000028 _Bfree



Disassembly of section .entry:

08020000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
 8020000:	004200b4 	movhi	at,2050
    ori r1, r1, %lo(_start)
 8020004:	08408c14 	ori	at,at,560
    jmp r1
 8020008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

08020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
 8020020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
 8020024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
 8020028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
 802002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
 8020030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
 8020034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
 8020038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
 802003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
 8020040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
 8020044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
 8020048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
 802004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
 8020050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
 8020054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
 8020058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
 802005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
 8020060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
 8020064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
 8020068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
 802006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 8020070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
 8020074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
 8020078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
 802007c:	10000326 	beq	r2,zero,802008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
 8020080:	20000226 	beq	r4,zero,802008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
 8020084:	80200fc0 	call	80200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
 8020088:	00000706 	br	80200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
 802008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
 8020090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
 8020094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
 8020098:	80201d00 	call	80201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
 802009c:	1000021e 	bne	r2,zero,80200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
 80200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
 80200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
 80200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
 80200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
 80200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
 80200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
 80200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
 80200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
 80200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
 80200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
 80200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
 80200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
 80200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
 80200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
 80200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
 80200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
 80200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
 80200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
 80200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
 80200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
 80200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
 80200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
 80200f8:	ef80083a 	eret

080200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
 80200fc:	defff904 	addi	sp,sp,-28
 8020100:	dfc00615 	stw	ra,24(sp)
 8020104:	df000515 	stw	fp,20(sp)
 8020108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
 802010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 8020110:	0005313a 	rdctl	r2,ipending
 8020114:	e0bffe15 	stw	r2,-8(fp)

  return active;
 8020118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
 802011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
 8020120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
 8020124:	00800044 	movi	r2,1
 8020128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
 802012c:	e0fffb17 	ldw	r3,-20(fp)
 8020130:	e0bffc17 	ldw	r2,-16(fp)
 8020134:	1884703a 	and	r2,r3,r2
 8020138:	10001426 	beq	r2,zero,802018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
 802013c:	00800034 	movhi	r2,0
 8020140:	10879304 	addi	r2,r2,7756
 8020144:	e0fffd17 	ldw	r3,-12(fp)
 8020148:	180690fa 	slli	r3,r3,3
 802014c:	10c5883a 	add	r2,r2,r3
 8020150:	10c00017 	ldw	r3,0(r2)
 8020154:	00800034 	movhi	r2,0
 8020158:	10879304 	addi	r2,r2,7756
 802015c:	e13ffd17 	ldw	r4,-12(fp)
 8020160:	200890fa 	slli	r4,r4,3
 8020164:	1105883a 	add	r2,r2,r4
 8020168:	10800104 	addi	r2,r2,4
 802016c:	10800017 	ldw	r2,0(r2)
 8020170:	1009883a 	mov	r4,r2
 8020174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
 8020178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
 802017c:	0005313a 	rdctl	r2,ipending
 8020180:	e0bfff15 	stw	r2,-4(fp)

  return active;
 8020184:	e0bfff17 	ldw	r2,-4(fp)
 8020188:	00000706 	br	80201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
 802018c:	e0bffc17 	ldw	r2,-16(fp)
 8020190:	1085883a 	add	r2,r2,r2
 8020194:	e0bffc15 	stw	r2,-16(fp)
      i++;
 8020198:	e0bffd17 	ldw	r2,-12(fp)
 802019c:	10800044 	addi	r2,r2,1
 80201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
 80201a4:	003fe106 	br	802012c <__flash_rwdata_start+0xffff0610>

    active = alt_irq_pending ();
 80201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
 80201ac:	e0bffb17 	ldw	r2,-20(fp)
 80201b0:	103fdb1e 	bne	r2,zero,8020120 <__flash_rwdata_start+0xffff0604>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
 80201b4:	0001883a 	nop
}
 80201b8:	0001883a 	nop
 80201bc:	e037883a 	mov	sp,fp
 80201c0:	dfc00117 	ldw	ra,4(sp)
 80201c4:	df000017 	ldw	fp,0(sp)
 80201c8:	dec00204 	addi	sp,sp,8
 80201cc:	f800283a 	ret

080201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
 80201d0:	defffb04 	addi	sp,sp,-20
 80201d4:	dfc00415 	stw	ra,16(sp)
 80201d8:	df000315 	stw	fp,12(sp)
 80201dc:	df000304 	addi	fp,sp,12
 80201e0:	e13fff15 	stw	r4,-4(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
 80201e4:	00bfffc4 	movi	r2,-1
 80201e8:	e0bffd15 	stw	r2,-12(fp)
  badaddr = 0;
 80201ec:	e03ffe15 	stw	zero,-8(fp)
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
 80201f0:	d0a01d17 	ldw	r2,-32652(gp)
 80201f4:	10000726 	beq	r2,zero,8020214 <alt_instruction_exception_entry+0x44>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
 80201f8:	d0a01d17 	ldw	r2,-32652(gp)
 80201fc:	e0fffd17 	ldw	r3,-12(fp)
 8020200:	e1bffe17 	ldw	r6,-8(fp)
 8020204:	e17fff17 	ldw	r5,-4(fp)
 8020208:	1809883a 	mov	r4,r3
 802020c:	103ee83a 	callr	r2
 8020210:	00000206 	br	802021c <alt_instruction_exception_entry+0x4c>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
 8020214:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
 8020218:	0005883a 	mov	r2,zero
}
 802021c:	e037883a 	mov	sp,fp
 8020220:	dfc00117 	ldw	ra,4(sp)
 8020224:	df000017 	ldw	fp,0(sp)
 8020228:	dec00204 	addi	sp,sp,8
 802022c:	f800283a 	ret

Disassembly of section .text:

08020230 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
 8020230:	06c20034 	movhi	sp,2048
    ori sp, sp, %lo(__alt_stack_pointer)
 8020234:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
 8020238:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
 802023c:	d6a76b14 	ori	gp,gp,40364
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
 8020240:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
 8020244:	10877b14 	ori	r2,r2,7660

    movhi r3, %hi(__bss_end)
 8020248:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
 802024c:	18c7d314 	ori	r3,r3,8012

    beq r2, r3, 1f
 8020250:	10c00326 	beq	r2,r3,8020260 <_start+0x30>

0:
    stw zero, (r2)
 8020254:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
 8020258:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
 802025c:	10fffd36 	bltu	r2,r3,8020254 <__flash_rwdata_start+0xffff0738>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
 8020260:	802d50c0 	call	802d50c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
 8020264:	802d6a80 	call	802d6a8 <alt_main>

08020268 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
 8020268:	003fff06 	br	8020268 <__flash_rwdata_start+0xffff074c>

0802026c <main>:
#include <io.h>
#include <unistd.h>
#include <string.h>

int main(void)
{
 802026c:	defff804 	addi	sp,sp,-32
 8020270:	dfc00715 	stw	ra,28(sp)
 8020274:	df000615 	stw	fp,24(sp)
 8020278:	df000604 	addi	fp,sp,24
	int bclk = 0;
 802027c:	e03ffe15 	stw	zero,-8(fp)
	int bclk_save = 0;
 8020280:	e03ffa15 	stw	zero,-24(fp)
	int countbclk = 0;
 8020284:	e03ffb15 	stw	zero,-20(fp)

	int ADC_LR_CLK = 0;
 8020288:	e03fff15 	stw	zero,-4(fp)
	int ADC_LR_CLK_save = 0;
 802028c:	e03ffc15 	stw	zero,-16(fp)
	int countADC_LR_CLK = 0;
 8020290:	e03ffd15 	stw	zero,-12(fp)
	/* read and echo audio data */
	while(1)
	{
//		for(int i = 0; i <= 31; i++)
//		{
		bclk = IORD(BCLK_BASE, 0);
 8020294:	00820134 	movhi	r2,2052
 8020298:	10840004 	addi	r2,r2,4096
 802029c:	10800037 	ldwio	r2,0(r2)
 80202a0:	e0bffe15 	stw	r2,-8(fp)
		ADC_LR_CLK = IORD(ADC_LR_CLK_BASE, 0);
 80202a4:	00820134 	movhi	r2,2052
 80202a8:	10840804 	addi	r2,r2,4128
 80202ac:	10800037 	ldwio	r2,0(r2)
 80202b0:	e0bfff15 	stw	r2,-4(fp)

			if(bclk_save != bclk)
 80202b4:	e0fffa17 	ldw	r3,-24(fp)
 80202b8:	e0bffe17 	ldw	r2,-8(fp)
 80202bc:	18800726 	beq	r3,r2,80202dc <main+0x70>
			{
				//printf("%i \r\n", checking1);
				bclk_save = bclk;
 80202c0:	e0bffe17 	ldw	r2,-8(fp)
 80202c4:	e0bffa15 	stw	r2,-24(fp)
				//IOWR(LEDS_BASE, 0, checking2);
				if(bclk_save)
 80202c8:	e0bffa17 	ldw	r2,-24(fp)
 80202cc:	10000326 	beq	r2,zero,80202dc <main+0x70>
				{
					countbclk++;
 80202d0:	e0bffb17 	ldw	r2,-20(fp)
 80202d4:	10800044 	addi	r2,r2,1
 80202d8:	e0bffb15 	stw	r2,-20(fp)
				}
			}

			if(ADC_LR_CLK_save != ADC_LR_CLK)
 80202dc:	e0fffc17 	ldw	r3,-16(fp)
 80202e0:	e0bfff17 	ldw	r2,-4(fp)
 80202e4:	18bfeb26 	beq	r3,r2,8020294 <__flash_rwdata_start+0xffff0778>
			{
				//printf("%i \r\n", checking1);
				ADC_LR_CLK_save = ADC_LR_CLK;
 80202e8:	e0bfff17 	ldw	r2,-4(fp)
 80202ec:	e0bffc15 	stw	r2,-16(fp)
				//IOWR(LEDS_BASE, 0, checking2);
				if(ADC_LR_CLK_save)
 80202f0:	e0bffc17 	ldw	r2,-16(fp)
 80202f4:	103fe726 	beq	r2,zero,8020294 <__flash_rwdata_start+0xffff0778>
				{
					countADC_LR_CLK++;
 80202f8:	e0bffd17 	ldw	r2,-12(fp)
 80202fc:	10800044 	addi	r2,r2,1
 8020300:	e0bffd15 	stw	r2,-12(fp)
					printf("%d: %i \r\n", countADC_LR_CLK, countbclk);
 8020304:	e1bffb17 	ldw	r6,-20(fp)
 8020308:	e17ffd17 	ldw	r5,-12(fp)
 802030c:	01000034 	movhi	r4,0
 8020310:	21000004 	addi	r4,r4,0
 8020314:	802034c0 	call	802034c <printf>
//			alt_up_audio_read_fifo (audio_dev, &(l_buf), 1, ALT_UP_AUDIO_LEFT);
//			// write audio buffer
//			alt_up_audio_write_fifo (audio_dev, &(r_buf), 1, ALT_UP_AUDIO_RIGHT);
//			alt_up_audio_write_fifo (audio_dev, &(l_buf), 1, ALT_UP_AUDIO_LEFT);
//		}
	}
 8020318:	003fde06 	br	8020294 <__flash_rwdata_start+0xffff0778>

0802031c <_printf_r>:
 802031c:	defffd04 	addi	sp,sp,-12
 8020320:	2805883a 	mov	r2,r5
 8020324:	dfc00015 	stw	ra,0(sp)
 8020328:	d9800115 	stw	r6,4(sp)
 802032c:	d9c00215 	stw	r7,8(sp)
 8020330:	21400217 	ldw	r5,8(r4)
 8020334:	d9c00104 	addi	r7,sp,4
 8020338:	100d883a 	mov	r6,r2
 802033c:	80203880 	call	8020388 <___vfprintf_internal_r>
 8020340:	dfc00017 	ldw	ra,0(sp)
 8020344:	dec00304 	addi	sp,sp,12
 8020348:	f800283a 	ret

0802034c <printf>:
 802034c:	defffc04 	addi	sp,sp,-16
 8020350:	dfc00015 	stw	ra,0(sp)
 8020354:	d9400115 	stw	r5,4(sp)
 8020358:	d9800215 	stw	r6,8(sp)
 802035c:	d9c00315 	stw	r7,12(sp)
 8020360:	00800034 	movhi	r2,0
 8020364:	10876c04 	addi	r2,r2,7600
 8020368:	10800017 	ldw	r2,0(r2)
 802036c:	200b883a 	mov	r5,r4
 8020370:	d9800104 	addi	r6,sp,4
 8020374:	11000217 	ldw	r4,8(r2)
 8020378:	80226640 	call	8022664 <__vfprintf_internal>
 802037c:	dfc00017 	ldw	ra,0(sp)
 8020380:	dec00404 	addi	sp,sp,16
 8020384:	f800283a 	ret

08020388 <___vfprintf_internal_r>:
 8020388:	deffb804 	addi	sp,sp,-288
 802038c:	dfc04715 	stw	ra,284(sp)
 8020390:	ddc04515 	stw	r23,276(sp)
 8020394:	dd404315 	stw	r21,268(sp)
 8020398:	d9002d15 	stw	r4,180(sp)
 802039c:	282f883a 	mov	r23,r5
 80203a0:	302b883a 	mov	r21,r6
 80203a4:	d9c02e15 	stw	r7,184(sp)
 80203a8:	df004615 	stw	fp,280(sp)
 80203ac:	dd804415 	stw	r22,272(sp)
 80203b0:	dd004215 	stw	r20,264(sp)
 80203b4:	dcc04115 	stw	r19,260(sp)
 80203b8:	dc804015 	stw	r18,256(sp)
 80203bc:	dc403f15 	stw	r17,252(sp)
 80203c0:	dc003e15 	stw	r16,248(sp)
 80203c4:	8024e000 	call	8024e00 <_localeconv_r>
 80203c8:	10800017 	ldw	r2,0(r2)
 80203cc:	1009883a 	mov	r4,r2
 80203d0:	d8803415 	stw	r2,208(sp)
 80203d4:	8026ee40 	call	8026ee4 <strlen>
 80203d8:	d8803715 	stw	r2,220(sp)
 80203dc:	d8802d17 	ldw	r2,180(sp)
 80203e0:	10000226 	beq	r2,zero,80203ec <___vfprintf_internal_r+0x64>
 80203e4:	10800e17 	ldw	r2,56(r2)
 80203e8:	1000fb26 	beq	r2,zero,80207d8 <___vfprintf_internal_r+0x450>
 80203ec:	b880030b 	ldhu	r2,12(r23)
 80203f0:	10c8000c 	andi	r3,r2,8192
 80203f4:	1800061e 	bne	r3,zero,8020410 <___vfprintf_internal_r+0x88>
 80203f8:	b9001917 	ldw	r4,100(r23)
 80203fc:	00f7ffc4 	movi	r3,-8193
 8020400:	10880014 	ori	r2,r2,8192
 8020404:	20c6703a 	and	r3,r4,r3
 8020408:	b880030d 	sth	r2,12(r23)
 802040c:	b8c01915 	stw	r3,100(r23)
 8020410:	10c0020c 	andi	r3,r2,8
 8020414:	1800c326 	beq	r3,zero,8020724 <___vfprintf_internal_r+0x39c>
 8020418:	b8c00417 	ldw	r3,16(r23)
 802041c:	1800c126 	beq	r3,zero,8020724 <___vfprintf_internal_r+0x39c>
 8020420:	1080068c 	andi	r2,r2,26
 8020424:	00c00284 	movi	r3,10
 8020428:	10c0c626 	beq	r2,r3,8020744 <___vfprintf_internal_r+0x3bc>
 802042c:	d8c00404 	addi	r3,sp,16
 8020430:	05000034 	movhi	r20,0
 8020434:	d9001e04 	addi	r4,sp,120
 8020438:	a5001384 	addi	r20,r20,78
 802043c:	d8c01e15 	stw	r3,120(sp)
 8020440:	d8002015 	stw	zero,128(sp)
 8020444:	d8001f15 	stw	zero,124(sp)
 8020448:	d8003315 	stw	zero,204(sp)
 802044c:	d8003615 	stw	zero,216(sp)
 8020450:	d8003815 	stw	zero,224(sp)
 8020454:	1811883a 	mov	r8,r3
 8020458:	d8003915 	stw	zero,228(sp)
 802045c:	d8003a15 	stw	zero,232(sp)
 8020460:	d8002f15 	stw	zero,188(sp)
 8020464:	d9002815 	stw	r4,160(sp)
 8020468:	a8800007 	ldb	r2,0(r21)
 802046c:	10028b26 	beq	r2,zero,8020e9c <___vfprintf_internal_r+0xb14>
 8020470:	00c00944 	movi	r3,37
 8020474:	a823883a 	mov	r17,r21
 8020478:	10c0021e 	bne	r2,r3,8020484 <___vfprintf_internal_r+0xfc>
 802047c:	00001406 	br	80204d0 <___vfprintf_internal_r+0x148>
 8020480:	10c00326 	beq	r2,r3,8020490 <___vfprintf_internal_r+0x108>
 8020484:	8c400044 	addi	r17,r17,1
 8020488:	88800007 	ldb	r2,0(r17)
 802048c:	103ffc1e 	bne	r2,zero,8020480 <__flash_rwdata_start+0xffff0964>
 8020490:	8d61c83a 	sub	r16,r17,r21
 8020494:	80000e26 	beq	r16,zero,80204d0 <___vfprintf_internal_r+0x148>
 8020498:	d8c02017 	ldw	r3,128(sp)
 802049c:	d8801f17 	ldw	r2,124(sp)
 80204a0:	45400015 	stw	r21,0(r8)
 80204a4:	1c07883a 	add	r3,r3,r16
 80204a8:	10800044 	addi	r2,r2,1
 80204ac:	d8c02015 	stw	r3,128(sp)
 80204b0:	44000115 	stw	r16,4(r8)
 80204b4:	d8801f15 	stw	r2,124(sp)
 80204b8:	00c001c4 	movi	r3,7
 80204bc:	1880a916 	blt	r3,r2,8020764 <___vfprintf_internal_r+0x3dc>
 80204c0:	42000204 	addi	r8,r8,8
 80204c4:	d9402f17 	ldw	r5,188(sp)
 80204c8:	2c0b883a 	add	r5,r5,r16
 80204cc:	d9402f15 	stw	r5,188(sp)
 80204d0:	88800007 	ldb	r2,0(r17)
 80204d4:	1000aa26 	beq	r2,zero,8020780 <___vfprintf_internal_r+0x3f8>
 80204d8:	8d400044 	addi	r21,r17,1
 80204dc:	8c400047 	ldb	r17,1(r17)
 80204e0:	0021883a 	mov	r16,zero
 80204e4:	00bfffc4 	movi	r2,-1
 80204e8:	0025883a 	mov	r18,zero
 80204ec:	dc002905 	stb	r16,164(sp)
 80204f0:	d8002785 	stb	zero,158(sp)
 80204f4:	d8002b05 	stb	zero,172(sp)
 80204f8:	d8802a15 	stw	r2,168(sp)
 80204fc:	d8003115 	stw	zero,196(sp)
 8020500:	04c01604 	movi	r19,88
 8020504:	05800244 	movi	r22,9
 8020508:	9021883a 	mov	r16,r18
 802050c:	4039883a 	mov	fp,r8
 8020510:	ad400044 	addi	r21,r21,1
 8020514:	88bff804 	addi	r2,r17,-32
 8020518:	98833236 	bltu	r19,r2,80211e4 <___vfprintf_internal_r+0xe5c>
 802051c:	100490ba 	slli	r2,r2,2
 8020520:	00c200b4 	movhi	r3,2050
 8020524:	18c14d04 	addi	r3,r3,1332
 8020528:	10c5883a 	add	r2,r2,r3
 802052c:	10800017 	ldw	r2,0(r2)
 8020530:	1000683a 	jmp	r2
 8020534:	080210dc 	xori	zero,at,2115
 8020538:	080211e4 	muli	zero,at,2119
 802053c:	080211e4 	muli	zero,at,2119
 8020540:	080210fc 	xorhi	zero,at,2115
 8020544:	080211e4 	muli	zero,at,2119
 8020548:	080211e4 	muli	zero,at,2119
 802054c:	080211e4 	muli	zero,at,2119
 8020550:	080211e4 	muli	zero,at,2119
 8020554:	080211e4 	muli	zero,at,2119
 8020558:	080211e4 	muli	zero,at,2119
 802055c:	080207e4 	muli	zero,at,2079
 8020560:	08020fec 	andhi	zero,at,2111
 8020564:	080211e4 	muli	zero,at,2119
 8020568:	080206a8 	cmpgeui	zero,at,2074
 802056c:	08020808 	cmpgei	zero,at,2080
 8020570:	080211e4 	muli	zero,at,2119
 8020574:	08020858 	cmpnei	zero,at,2081
 8020578:	08020864 	muli	zero,at,2081
 802057c:	08020864 	muli	zero,at,2081
 8020580:	08020864 	muli	zero,at,2081
 8020584:	08020864 	muli	zero,at,2081
 8020588:	08020864 	muli	zero,at,2081
 802058c:	08020864 	muli	zero,at,2081
 8020590:	08020864 	muli	zero,at,2081
 8020594:	08020864 	muli	zero,at,2081
 8020598:	08020864 	muli	zero,at,2081
 802059c:	080211e4 	muli	zero,at,2119
 80205a0:	080211e4 	muli	zero,at,2119
 80205a4:	080211e4 	muli	zero,at,2119
 80205a8:	080211e4 	muli	zero,at,2119
 80205ac:	080211e4 	muli	zero,at,2119
 80205b0:	080211e4 	muli	zero,at,2119
 80205b4:	080211e4 	muli	zero,at,2119
 80205b8:	080211e4 	muli	zero,at,2119
 80205bc:	080211e4 	muli	zero,at,2119
 80205c0:	080211e4 	muli	zero,at,2119
 80205c4:	080208a0 	cmpeqi	zero,at,2082
 80205c8:	08020968 	cmpgeui	zero,at,2085
 80205cc:	080211e4 	muli	zero,at,2119
 80205d0:	08020968 	cmpgeui	zero,at,2085
 80205d4:	080211e4 	muli	zero,at,2119
 80205d8:	080211e4 	muli	zero,at,2119
 80205dc:	080211e4 	muli	zero,at,2119
 80205e0:	080211e4 	muli	zero,at,2119
 80205e4:	08020a14 	ori	zero,at,2088
 80205e8:	080211e4 	muli	zero,at,2119
 80205ec:	080211e4 	muli	zero,at,2119
 80205f0:	08020a20 	cmpeqi	zero,at,2088
 80205f4:	080211e4 	muli	zero,at,2119
 80205f8:	080211e4 	muli	zero,at,2119
 80205fc:	080211e4 	muli	zero,at,2119
 8020600:	080211e4 	muli	zero,at,2119
 8020604:	080211e4 	muli	zero,at,2119
 8020608:	08020ea4 	muli	zero,at,2106
 802060c:	080211e4 	muli	zero,at,2119
 8020610:	080211e4 	muli	zero,at,2119
 8020614:	08020f10 	cmplti	zero,at,2108
 8020618:	080211e4 	muli	zero,at,2119
 802061c:	080211e4 	muli	zero,at,2119
 8020620:	080211e4 	muli	zero,at,2119
 8020624:	080211e4 	muli	zero,at,2119
 8020628:	080211e4 	muli	zero,at,2119
 802062c:	080211e4 	muli	zero,at,2119
 8020630:	080211e4 	muli	zero,at,2119
 8020634:	080211e4 	muli	zero,at,2119
 8020638:	080211e4 	muli	zero,at,2119
 802063c:	080211e4 	muli	zero,at,2119
 8020640:	08021188 	cmpgei	zero,at,2118
 8020644:	08021108 	cmpgei	zero,at,2116
 8020648:	08020968 	cmpgeui	zero,at,2085
 802064c:	08020968 	cmpgeui	zero,at,2085
 8020650:	08020968 	cmpgeui	zero,at,2085
 8020654:	08021128 	cmpgeui	zero,at,2116
 8020658:	08021108 	cmpgei	zero,at,2116
 802065c:	080211e4 	muli	zero,at,2119
 8020660:	080211e4 	muli	zero,at,2119
 8020664:	08021134 	orhi	zero,at,2116
 8020668:	080211e4 	muli	zero,at,2119
 802066c:	08021148 	cmpgei	zero,at,2117
 8020670:	08020fcc 	andi	zero,at,2111
 8020674:	080206b4 	orhi	zero,at,2074
 8020678:	08021004 	addi	zero,at,2112
 802067c:	080211e4 	muli	zero,at,2119
 8020680:	08021010 	cmplti	zero,at,2112
 8020684:	080211e4 	muli	zero,at,2119
 8020688:	08021074 	orhi	zero,at,2113
 802068c:	080211e4 	muli	zero,at,2119
 8020690:	080211e4 	muli	zero,at,2119
 8020694:	08021094 	ori	zero,at,2114
 8020698:	d8c03117 	ldw	r3,196(sp)
 802069c:	d8802e15 	stw	r2,184(sp)
 80206a0:	00c7c83a 	sub	r3,zero,r3
 80206a4:	d8c03115 	stw	r3,196(sp)
 80206a8:	84000114 	ori	r16,r16,4
 80206ac:	ac400007 	ldb	r17,0(r21)
 80206b0:	003f9706 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 80206b4:	00800c04 	movi	r2,48
 80206b8:	d8802705 	stb	r2,156(sp)
 80206bc:	00801e04 	movi	r2,120
 80206c0:	d8802745 	stb	r2,157(sp)
 80206c4:	d9002a17 	ldw	r4,168(sp)
 80206c8:	d8802e17 	ldw	r2,184(sp)
 80206cc:	d8002785 	stb	zero,158(sp)
 80206d0:	e011883a 	mov	r8,fp
 80206d4:	10c00104 	addi	r3,r2,4
 80206d8:	14c00017 	ldw	r19,0(r2)
 80206dc:	002d883a 	mov	r22,zero
 80206e0:	80800094 	ori	r2,r16,2
 80206e4:	2002ca16 	blt	r4,zero,8021210 <___vfprintf_internal_r+0xe88>
 80206e8:	00bfdfc4 	movi	r2,-129
 80206ec:	80a4703a 	and	r18,r16,r2
 80206f0:	d8c02e15 	stw	r3,184(sp)
 80206f4:	94800094 	ori	r18,r18,2
 80206f8:	9802b41e 	bne	r19,zero,80211cc <___vfprintf_internal_r+0xe44>
 80206fc:	01400034 	movhi	r5,0
 8020700:	29400c04 	addi	r5,r5,48
 8020704:	d9403915 	stw	r5,228(sp)
 8020708:	04401e04 	movi	r17,120
 802070c:	d8802a17 	ldw	r2,168(sp)
 8020710:	0039883a 	mov	fp,zero
 8020714:	1001fa26 	beq	r2,zero,8020f00 <___vfprintf_internal_r+0xb78>
 8020718:	0027883a 	mov	r19,zero
 802071c:	002d883a 	mov	r22,zero
 8020720:	00021906 	br	8020f88 <___vfprintf_internal_r+0xc00>
 8020724:	d9002d17 	ldw	r4,180(sp)
 8020728:	b80b883a 	mov	r5,r23
 802072c:	802273c0 	call	802273c <__swsetup_r>
 8020730:	1005dc1e 	bne	r2,zero,8021ea4 <___vfprintf_internal_r+0x1b1c>
 8020734:	b880030b 	ldhu	r2,12(r23)
 8020738:	00c00284 	movi	r3,10
 802073c:	1080068c 	andi	r2,r2,26
 8020740:	10ff3a1e 	bne	r2,r3,802042c <__flash_rwdata_start+0xffff0910>
 8020744:	b880038f 	ldh	r2,14(r23)
 8020748:	103f3816 	blt	r2,zero,802042c <__flash_rwdata_start+0xffff0910>
 802074c:	d9c02e17 	ldw	r7,184(sp)
 8020750:	d9002d17 	ldw	r4,180(sp)
 8020754:	a80d883a 	mov	r6,r21
 8020758:	b80b883a 	mov	r5,r23
 802075c:	80226800 	call	8022680 <__sbprintf>
 8020760:	00001106 	br	80207a8 <___vfprintf_internal_r+0x420>
 8020764:	d9002d17 	ldw	r4,180(sp)
 8020768:	d9801e04 	addi	r6,sp,120
 802076c:	b80b883a 	mov	r5,r23
 8020770:	80270780 	call	8027078 <__sprint_r>
 8020774:	1000081e 	bne	r2,zero,8020798 <___vfprintf_internal_r+0x410>
 8020778:	da000404 	addi	r8,sp,16
 802077c:	003f5106 	br	80204c4 <__flash_rwdata_start+0xffff09a8>
 8020780:	d8802017 	ldw	r2,128(sp)
 8020784:	10000426 	beq	r2,zero,8020798 <___vfprintf_internal_r+0x410>
 8020788:	d9002d17 	ldw	r4,180(sp)
 802078c:	d9801e04 	addi	r6,sp,120
 8020790:	b80b883a 	mov	r5,r23
 8020794:	80270780 	call	8027078 <__sprint_r>
 8020798:	b880030b 	ldhu	r2,12(r23)
 802079c:	1080100c 	andi	r2,r2,64
 80207a0:	1005c01e 	bne	r2,zero,8021ea4 <___vfprintf_internal_r+0x1b1c>
 80207a4:	d8802f17 	ldw	r2,188(sp)
 80207a8:	dfc04717 	ldw	ra,284(sp)
 80207ac:	df004617 	ldw	fp,280(sp)
 80207b0:	ddc04517 	ldw	r23,276(sp)
 80207b4:	dd804417 	ldw	r22,272(sp)
 80207b8:	dd404317 	ldw	r21,268(sp)
 80207bc:	dd004217 	ldw	r20,264(sp)
 80207c0:	dcc04117 	ldw	r19,260(sp)
 80207c4:	dc804017 	ldw	r18,256(sp)
 80207c8:	dc403f17 	ldw	r17,252(sp)
 80207cc:	dc003e17 	ldw	r16,248(sp)
 80207d0:	dec04804 	addi	sp,sp,288
 80207d4:	f800283a 	ret
 80207d8:	d9002d17 	ldw	r4,180(sp)
 80207dc:	80247480 	call	8024748 <__sinit>
 80207e0:	003f0206 	br	80203ec <__flash_rwdata_start+0xffff08d0>
 80207e4:	d9002e17 	ldw	r4,184(sp)
 80207e8:	d9402e17 	ldw	r5,184(sp)
 80207ec:	21000017 	ldw	r4,0(r4)
 80207f0:	28800104 	addi	r2,r5,4
 80207f4:	d9003115 	stw	r4,196(sp)
 80207f8:	203fa716 	blt	r4,zero,8020698 <__flash_rwdata_start+0xffff0b7c>
 80207fc:	d8802e15 	stw	r2,184(sp)
 8020800:	ac400007 	ldb	r17,0(r21)
 8020804:	003f4206 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8020808:	ac400007 	ldb	r17,0(r21)
 802080c:	01000a84 	movi	r4,42
 8020810:	a8c00044 	addi	r3,r21,1
 8020814:	89075826 	beq	r17,r4,8022578 <___vfprintf_internal_r+0x21f0>
 8020818:	8cbff404 	addi	r18,r17,-48
 802081c:	b486ae36 	bltu	r22,r18,80222d8 <___vfprintf_internal_r+0x1f50>
 8020820:	0009883a 	mov	r4,zero
 8020824:	1823883a 	mov	r17,r3
 8020828:	01400284 	movi	r5,10
 802082c:	802a8bc0 	call	802a8bc <__mulsi3>
 8020830:	88c00007 	ldb	r3,0(r17)
 8020834:	1489883a 	add	r4,r2,r18
 8020838:	8d400044 	addi	r21,r17,1
 802083c:	1cbff404 	addi	r18,r3,-48
 8020840:	a823883a 	mov	r17,r21
 8020844:	b4bff82e 	bgeu	r22,r18,8020828 <__flash_rwdata_start+0xffff0d0c>
 8020848:	1823883a 	mov	r17,r3
 802084c:	2005f616 	blt	r4,zero,8022028 <___vfprintf_internal_r+0x1ca0>
 8020850:	d9002a15 	stw	r4,168(sp)
 8020854:	003f2f06 	br	8020514 <__flash_rwdata_start+0xffff09f8>
 8020858:	84002014 	ori	r16,r16,128
 802085c:	ac400007 	ldb	r17,0(r21)
 8020860:	003f2b06 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8020864:	8cbff404 	addi	r18,r17,-48
 8020868:	d8003115 	stw	zero,196(sp)
 802086c:	0009883a 	mov	r4,zero
 8020870:	a823883a 	mov	r17,r21
 8020874:	01400284 	movi	r5,10
 8020878:	802a8bc0 	call	802a8bc <__mulsi3>
 802087c:	88c00007 	ldb	r3,0(r17)
 8020880:	9089883a 	add	r4,r18,r2
 8020884:	ad400044 	addi	r21,r21,1
 8020888:	1cbff404 	addi	r18,r3,-48
 802088c:	a823883a 	mov	r17,r21
 8020890:	b4bff82e 	bgeu	r22,r18,8020874 <__flash_rwdata_start+0xffff0d58>
 8020894:	1823883a 	mov	r17,r3
 8020898:	d9003115 	stw	r4,196(sp)
 802089c:	003f1d06 	br	8020514 <__flash_rwdata_start+0xffff09f8>
 80208a0:	8025883a 	mov	r18,r16
 80208a4:	dc002903 	ldbu	r16,164(sp)
 80208a8:	e011883a 	mov	r8,fp
 80208ac:	84003fcc 	andi	r16,r16,255
 80208b0:	8007531e 	bne	r16,zero,8022600 <___vfprintf_internal_r+0x2278>
 80208b4:	94800414 	ori	r18,r18,16
 80208b8:	9080080c 	andi	r2,r18,32
 80208bc:	1003a326 	beq	r2,zero,802174c <___vfprintf_internal_r+0x13c4>
 80208c0:	d9002e17 	ldw	r4,184(sp)
 80208c4:	20800117 	ldw	r2,4(r4)
 80208c8:	24c00017 	ldw	r19,0(r4)
 80208cc:	21000204 	addi	r4,r4,8
 80208d0:	d9002e15 	stw	r4,184(sp)
 80208d4:	102d883a 	mov	r22,r2
 80208d8:	10047316 	blt	r2,zero,8021aa8 <___vfprintf_internal_r+0x1720>
 80208dc:	d9002a17 	ldw	r4,168(sp)
 80208e0:	df002783 	ldbu	fp,158(sp)
 80208e4:	2003e416 	blt	r4,zero,8021878 <___vfprintf_internal_r+0x14f0>
 80208e8:	00ffdfc4 	movi	r3,-129
 80208ec:	9d84b03a 	or	r2,r19,r22
 80208f0:	90e4703a 	and	r18,r18,r3
 80208f4:	10018026 	beq	r2,zero,8020ef8 <___vfprintf_internal_r+0xb70>
 80208f8:	b003ab26 	beq	r22,zero,80217a8 <___vfprintf_internal_r+0x1420>
 80208fc:	dc402915 	stw	r17,164(sp)
 8020900:	dc001e04 	addi	r16,sp,120
 8020904:	b023883a 	mov	r17,r22
 8020908:	402d883a 	mov	r22,r8
 802090c:	9809883a 	mov	r4,r19
 8020910:	880b883a 	mov	r5,r17
 8020914:	01800284 	movi	r6,10
 8020918:	000f883a 	mov	r7,zero
 802091c:	802a1440 	call	802a144 <__umoddi3>
 8020920:	10800c04 	addi	r2,r2,48
 8020924:	843fffc4 	addi	r16,r16,-1
 8020928:	9809883a 	mov	r4,r19
 802092c:	880b883a 	mov	r5,r17
 8020930:	80800005 	stb	r2,0(r16)
 8020934:	01800284 	movi	r6,10
 8020938:	000f883a 	mov	r7,zero
 802093c:	8029b480 	call	8029b48 <__udivdi3>
 8020940:	1027883a 	mov	r19,r2
 8020944:	10c4b03a 	or	r2,r2,r3
 8020948:	1823883a 	mov	r17,r3
 802094c:	103fef1e 	bne	r2,zero,802090c <__flash_rwdata_start+0xffff0df0>
 8020950:	d8c02817 	ldw	r3,160(sp)
 8020954:	dc402917 	ldw	r17,164(sp)
 8020958:	b011883a 	mov	r8,r22
 802095c:	1c07c83a 	sub	r3,r3,r16
 8020960:	d8c02b15 	stw	r3,172(sp)
 8020964:	00005f06 	br	8020ae4 <___vfprintf_internal_r+0x75c>
 8020968:	8025883a 	mov	r18,r16
 802096c:	dc002903 	ldbu	r16,164(sp)
 8020970:	e011883a 	mov	r8,fp
 8020974:	84003fcc 	andi	r16,r16,255
 8020978:	80071e1e 	bne	r16,zero,80225f4 <___vfprintf_internal_r+0x226c>
 802097c:	9080020c 	andi	r2,r18,8
 8020980:	1004af26 	beq	r2,zero,8021c40 <___vfprintf_internal_r+0x18b8>
 8020984:	d9002e17 	ldw	r4,184(sp)
 8020988:	d9402e17 	ldw	r5,184(sp)
 802098c:	d8802e17 	ldw	r2,184(sp)
 8020990:	21000017 	ldw	r4,0(r4)
 8020994:	29400117 	ldw	r5,4(r5)
 8020998:	10800204 	addi	r2,r2,8
 802099c:	d9003615 	stw	r4,216(sp)
 80209a0:	d9403815 	stw	r5,224(sp)
 80209a4:	d8802e15 	stw	r2,184(sp)
 80209a8:	d9003617 	ldw	r4,216(sp)
 80209ac:	d9403817 	ldw	r5,224(sp)
 80209b0:	da003d15 	stw	r8,244(sp)
 80209b4:	04000044 	movi	r16,1
 80209b8:	8026c040 	call	8026c04 <__fpclassifyd>
 80209bc:	da003d17 	ldw	r8,244(sp)
 80209c0:	1404441e 	bne	r2,r16,8021ad4 <___vfprintf_internal_r+0x174c>
 80209c4:	d9003617 	ldw	r4,216(sp)
 80209c8:	d9403817 	ldw	r5,224(sp)
 80209cc:	000d883a 	mov	r6,zero
 80209d0:	000f883a 	mov	r7,zero
 80209d4:	802bcc40 	call	802bcc4 <__ledf2>
 80209d8:	da003d17 	ldw	r8,244(sp)
 80209dc:	1005e316 	blt	r2,zero,802216c <___vfprintf_internal_r+0x1de4>
 80209e0:	df002783 	ldbu	fp,158(sp)
 80209e4:	008011c4 	movi	r2,71
 80209e8:	1445580e 	bge	r2,r17,8021f4c <___vfprintf_internal_r+0x1bc4>
 80209ec:	04000034 	movhi	r16,0
 80209f0:	84000404 	addi	r16,r16,16
 80209f4:	00c000c4 	movi	r3,3
 80209f8:	00bfdfc4 	movi	r2,-129
 80209fc:	d8c02915 	stw	r3,164(sp)
 8020a00:	90a4703a 	and	r18,r18,r2
 8020a04:	d8c02b15 	stw	r3,172(sp)
 8020a08:	d8002a15 	stw	zero,168(sp)
 8020a0c:	d8003215 	stw	zero,200(sp)
 8020a10:	00003a06 	br	8020afc <___vfprintf_internal_r+0x774>
 8020a14:	84000214 	ori	r16,r16,8
 8020a18:	ac400007 	ldb	r17,0(r21)
 8020a1c:	003ebc06 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8020a20:	8025883a 	mov	r18,r16
 8020a24:	dc002903 	ldbu	r16,164(sp)
 8020a28:	e011883a 	mov	r8,fp
 8020a2c:	84003fcc 	andi	r16,r16,255
 8020a30:	8007001e 	bne	r16,zero,8022634 <___vfprintf_internal_r+0x22ac>
 8020a34:	94800414 	ori	r18,r18,16
 8020a38:	9080080c 	andi	r2,r18,32
 8020a3c:	1002fa26 	beq	r2,zero,8021628 <___vfprintf_internal_r+0x12a0>
 8020a40:	d9002e17 	ldw	r4,184(sp)
 8020a44:	d9402a17 	ldw	r5,168(sp)
 8020a48:	d8002785 	stb	zero,158(sp)
 8020a4c:	20800204 	addi	r2,r4,8
 8020a50:	24c00017 	ldw	r19,0(r4)
 8020a54:	25800117 	ldw	r22,4(r4)
 8020a58:	2804b116 	blt	r5,zero,8021d20 <___vfprintf_internal_r+0x1998>
 8020a5c:	013fdfc4 	movi	r4,-129
 8020a60:	9d86b03a 	or	r3,r19,r22
 8020a64:	d8802e15 	stw	r2,184(sp)
 8020a68:	9124703a 	and	r18,r18,r4
 8020a6c:	1802fb1e 	bne	r3,zero,802165c <___vfprintf_internal_r+0x12d4>
 8020a70:	d8c02a17 	ldw	r3,168(sp)
 8020a74:	0039883a 	mov	fp,zero
 8020a78:	1805e526 	beq	r3,zero,8022210 <___vfprintf_internal_r+0x1e88>
 8020a7c:	0027883a 	mov	r19,zero
 8020a80:	002d883a 	mov	r22,zero
 8020a84:	dc001e04 	addi	r16,sp,120
 8020a88:	9806d0fa 	srli	r3,r19,3
 8020a8c:	b008977a 	slli	r4,r22,29
 8020a90:	b02cd0fa 	srli	r22,r22,3
 8020a94:	9cc001cc 	andi	r19,r19,7
 8020a98:	98800c04 	addi	r2,r19,48
 8020a9c:	843fffc4 	addi	r16,r16,-1
 8020aa0:	20e6b03a 	or	r19,r4,r3
 8020aa4:	80800005 	stb	r2,0(r16)
 8020aa8:	9d86b03a 	or	r3,r19,r22
 8020aac:	183ff61e 	bne	r3,zero,8020a88 <__flash_rwdata_start+0xffff0f6c>
 8020ab0:	90c0004c 	andi	r3,r18,1
 8020ab4:	18014126 	beq	r3,zero,8020fbc <___vfprintf_internal_r+0xc34>
 8020ab8:	10803fcc 	andi	r2,r2,255
 8020abc:	1080201c 	xori	r2,r2,128
 8020ac0:	10bfe004 	addi	r2,r2,-128
 8020ac4:	00c00c04 	movi	r3,48
 8020ac8:	10c13c26 	beq	r2,r3,8020fbc <___vfprintf_internal_r+0xc34>
 8020acc:	80ffffc5 	stb	r3,-1(r16)
 8020ad0:	d8c02817 	ldw	r3,160(sp)
 8020ad4:	80bfffc4 	addi	r2,r16,-1
 8020ad8:	1021883a 	mov	r16,r2
 8020adc:	1887c83a 	sub	r3,r3,r2
 8020ae0:	d8c02b15 	stw	r3,172(sp)
 8020ae4:	d8802b17 	ldw	r2,172(sp)
 8020ae8:	d9002a17 	ldw	r4,168(sp)
 8020aec:	1100010e 	bge	r2,r4,8020af4 <___vfprintf_internal_r+0x76c>
 8020af0:	2005883a 	mov	r2,r4
 8020af4:	d8802915 	stw	r2,164(sp)
 8020af8:	d8003215 	stw	zero,200(sp)
 8020afc:	e7003fcc 	andi	fp,fp,255
 8020b00:	e700201c 	xori	fp,fp,128
 8020b04:	e73fe004 	addi	fp,fp,-128
 8020b08:	e0000326 	beq	fp,zero,8020b18 <___vfprintf_internal_r+0x790>
 8020b0c:	d8c02917 	ldw	r3,164(sp)
 8020b10:	18c00044 	addi	r3,r3,1
 8020b14:	d8c02915 	stw	r3,164(sp)
 8020b18:	90c0008c 	andi	r3,r18,2
 8020b1c:	d8c02c15 	stw	r3,176(sp)
 8020b20:	18000326 	beq	r3,zero,8020b30 <___vfprintf_internal_r+0x7a8>
 8020b24:	d8c02917 	ldw	r3,164(sp)
 8020b28:	18c00084 	addi	r3,r3,2
 8020b2c:	d8c02915 	stw	r3,164(sp)
 8020b30:	90c0210c 	andi	r3,r18,132
 8020b34:	d8c03015 	stw	r3,192(sp)
 8020b38:	1801c51e 	bne	r3,zero,8021250 <___vfprintf_internal_r+0xec8>
 8020b3c:	d9003117 	ldw	r4,196(sp)
 8020b40:	d8c02917 	ldw	r3,164(sp)
 8020b44:	20e7c83a 	sub	r19,r4,r3
 8020b48:	04c1c10e 	bge	zero,r19,8021250 <___vfprintf_internal_r+0xec8>
 8020b4c:	02400404 	movi	r9,16
 8020b50:	d8c02017 	ldw	r3,128(sp)
 8020b54:	d8801f17 	ldw	r2,124(sp)
 8020b58:	4cc52f0e 	bge	r9,r19,8022018 <___vfprintf_internal_r+0x1c90>
 8020b5c:	01400034 	movhi	r5,0
 8020b60:	29401784 	addi	r5,r5,94
 8020b64:	dc403b15 	stw	r17,236(sp)
 8020b68:	d9403515 	stw	r5,212(sp)
 8020b6c:	9823883a 	mov	r17,r19
 8020b70:	482d883a 	mov	r22,r9
 8020b74:	9027883a 	mov	r19,r18
 8020b78:	070001c4 	movi	fp,7
 8020b7c:	8025883a 	mov	r18,r16
 8020b80:	dc002d17 	ldw	r16,180(sp)
 8020b84:	00000306 	br	8020b94 <___vfprintf_internal_r+0x80c>
 8020b88:	8c7ffc04 	addi	r17,r17,-16
 8020b8c:	42000204 	addi	r8,r8,8
 8020b90:	b440130e 	bge	r22,r17,8020be0 <___vfprintf_internal_r+0x858>
 8020b94:	01000034 	movhi	r4,0
 8020b98:	18c00404 	addi	r3,r3,16
 8020b9c:	10800044 	addi	r2,r2,1
 8020ba0:	21001784 	addi	r4,r4,94
 8020ba4:	41000015 	stw	r4,0(r8)
 8020ba8:	45800115 	stw	r22,4(r8)
 8020bac:	d8c02015 	stw	r3,128(sp)
 8020bb0:	d8801f15 	stw	r2,124(sp)
 8020bb4:	e0bff40e 	bge	fp,r2,8020b88 <__flash_rwdata_start+0xffff106c>
 8020bb8:	d9801e04 	addi	r6,sp,120
 8020bbc:	b80b883a 	mov	r5,r23
 8020bc0:	8009883a 	mov	r4,r16
 8020bc4:	80270780 	call	8027078 <__sprint_r>
 8020bc8:	103ef31e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8020bcc:	8c7ffc04 	addi	r17,r17,-16
 8020bd0:	d8c02017 	ldw	r3,128(sp)
 8020bd4:	d8801f17 	ldw	r2,124(sp)
 8020bd8:	da000404 	addi	r8,sp,16
 8020bdc:	b47fed16 	blt	r22,r17,8020b94 <__flash_rwdata_start+0xffff1078>
 8020be0:	9021883a 	mov	r16,r18
 8020be4:	9825883a 	mov	r18,r19
 8020be8:	8827883a 	mov	r19,r17
 8020bec:	dc403b17 	ldw	r17,236(sp)
 8020bf0:	d9403517 	ldw	r5,212(sp)
 8020bf4:	98c7883a 	add	r3,r19,r3
 8020bf8:	10800044 	addi	r2,r2,1
 8020bfc:	41400015 	stw	r5,0(r8)
 8020c00:	44c00115 	stw	r19,4(r8)
 8020c04:	d8c02015 	stw	r3,128(sp)
 8020c08:	d8801f15 	stw	r2,124(sp)
 8020c0c:	010001c4 	movi	r4,7
 8020c10:	2082c516 	blt	r4,r2,8021728 <___vfprintf_internal_r+0x13a0>
 8020c14:	df002787 	ldb	fp,158(sp)
 8020c18:	42000204 	addi	r8,r8,8
 8020c1c:	e0000c26 	beq	fp,zero,8020c50 <___vfprintf_internal_r+0x8c8>
 8020c20:	d8801f17 	ldw	r2,124(sp)
 8020c24:	d9002784 	addi	r4,sp,158
 8020c28:	18c00044 	addi	r3,r3,1
 8020c2c:	10800044 	addi	r2,r2,1
 8020c30:	41000015 	stw	r4,0(r8)
 8020c34:	01000044 	movi	r4,1
 8020c38:	41000115 	stw	r4,4(r8)
 8020c3c:	d8c02015 	stw	r3,128(sp)
 8020c40:	d8801f15 	stw	r2,124(sp)
 8020c44:	010001c4 	movi	r4,7
 8020c48:	20825e16 	blt	r4,r2,80215c4 <___vfprintf_internal_r+0x123c>
 8020c4c:	42000204 	addi	r8,r8,8
 8020c50:	d8802c17 	ldw	r2,176(sp)
 8020c54:	10000c26 	beq	r2,zero,8020c88 <___vfprintf_internal_r+0x900>
 8020c58:	d8801f17 	ldw	r2,124(sp)
 8020c5c:	d9002704 	addi	r4,sp,156
 8020c60:	18c00084 	addi	r3,r3,2
 8020c64:	10800044 	addi	r2,r2,1
 8020c68:	41000015 	stw	r4,0(r8)
 8020c6c:	01000084 	movi	r4,2
 8020c70:	41000115 	stw	r4,4(r8)
 8020c74:	d8c02015 	stw	r3,128(sp)
 8020c78:	d8801f15 	stw	r2,124(sp)
 8020c7c:	010001c4 	movi	r4,7
 8020c80:	20825816 	blt	r4,r2,80215e4 <___vfprintf_internal_r+0x125c>
 8020c84:	42000204 	addi	r8,r8,8
 8020c88:	d9003017 	ldw	r4,192(sp)
 8020c8c:	00802004 	movi	r2,128
 8020c90:	2081bb26 	beq	r4,r2,8021380 <___vfprintf_internal_r+0xff8>
 8020c94:	d9402a17 	ldw	r5,168(sp)
 8020c98:	d8802b17 	ldw	r2,172(sp)
 8020c9c:	28adc83a 	sub	r22,r5,r2
 8020ca0:	0580310e 	bge	zero,r22,8020d68 <___vfprintf_internal_r+0x9e0>
 8020ca4:	07000404 	movi	fp,16
 8020ca8:	d8801f17 	ldw	r2,124(sp)
 8020cac:	e584360e 	bge	fp,r22,8021d88 <___vfprintf_internal_r+0x1a00>
 8020cb0:	01400034 	movhi	r5,0
 8020cb4:	29401384 	addi	r5,r5,78
 8020cb8:	dc402a15 	stw	r17,168(sp)
 8020cbc:	d9402c15 	stw	r5,176(sp)
 8020cc0:	b023883a 	mov	r17,r22
 8020cc4:	04c001c4 	movi	r19,7
 8020cc8:	a82d883a 	mov	r22,r21
 8020ccc:	902b883a 	mov	r21,r18
 8020cd0:	8025883a 	mov	r18,r16
 8020cd4:	dc002d17 	ldw	r16,180(sp)
 8020cd8:	00000306 	br	8020ce8 <___vfprintf_internal_r+0x960>
 8020cdc:	8c7ffc04 	addi	r17,r17,-16
 8020ce0:	42000204 	addi	r8,r8,8
 8020ce4:	e440110e 	bge	fp,r17,8020d2c <___vfprintf_internal_r+0x9a4>
 8020ce8:	18c00404 	addi	r3,r3,16
 8020cec:	10800044 	addi	r2,r2,1
 8020cf0:	45000015 	stw	r20,0(r8)
 8020cf4:	47000115 	stw	fp,4(r8)
 8020cf8:	d8c02015 	stw	r3,128(sp)
 8020cfc:	d8801f15 	stw	r2,124(sp)
 8020d00:	98bff60e 	bge	r19,r2,8020cdc <__flash_rwdata_start+0xffff11c0>
 8020d04:	d9801e04 	addi	r6,sp,120
 8020d08:	b80b883a 	mov	r5,r23
 8020d0c:	8009883a 	mov	r4,r16
 8020d10:	80270780 	call	8027078 <__sprint_r>
 8020d14:	103ea01e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8020d18:	8c7ffc04 	addi	r17,r17,-16
 8020d1c:	d8c02017 	ldw	r3,128(sp)
 8020d20:	d8801f17 	ldw	r2,124(sp)
 8020d24:	da000404 	addi	r8,sp,16
 8020d28:	e47fef16 	blt	fp,r17,8020ce8 <__flash_rwdata_start+0xffff11cc>
 8020d2c:	9021883a 	mov	r16,r18
 8020d30:	a825883a 	mov	r18,r21
 8020d34:	b02b883a 	mov	r21,r22
 8020d38:	882d883a 	mov	r22,r17
 8020d3c:	dc402a17 	ldw	r17,168(sp)
 8020d40:	d9002c17 	ldw	r4,176(sp)
 8020d44:	1d87883a 	add	r3,r3,r22
 8020d48:	10800044 	addi	r2,r2,1
 8020d4c:	41000015 	stw	r4,0(r8)
 8020d50:	45800115 	stw	r22,4(r8)
 8020d54:	d8c02015 	stw	r3,128(sp)
 8020d58:	d8801f15 	stw	r2,124(sp)
 8020d5c:	010001c4 	movi	r4,7
 8020d60:	20821016 	blt	r4,r2,80215a4 <___vfprintf_internal_r+0x121c>
 8020d64:	42000204 	addi	r8,r8,8
 8020d68:	9080400c 	andi	r2,r18,256
 8020d6c:	10013a1e 	bne	r2,zero,8021258 <___vfprintf_internal_r+0xed0>
 8020d70:	d9402b17 	ldw	r5,172(sp)
 8020d74:	d8801f17 	ldw	r2,124(sp)
 8020d78:	44000015 	stw	r16,0(r8)
 8020d7c:	1947883a 	add	r3,r3,r5
 8020d80:	10800044 	addi	r2,r2,1
 8020d84:	41400115 	stw	r5,4(r8)
 8020d88:	d8c02015 	stw	r3,128(sp)
 8020d8c:	d8801f15 	stw	r2,124(sp)
 8020d90:	010001c4 	movi	r4,7
 8020d94:	2081f516 	blt	r4,r2,802156c <___vfprintf_internal_r+0x11e4>
 8020d98:	42000204 	addi	r8,r8,8
 8020d9c:	9480010c 	andi	r18,r18,4
 8020da0:	90003226 	beq	r18,zero,8020e6c <___vfprintf_internal_r+0xae4>
 8020da4:	d9403117 	ldw	r5,196(sp)
 8020da8:	d8802917 	ldw	r2,164(sp)
 8020dac:	28a1c83a 	sub	r16,r5,r2
 8020db0:	04002e0e 	bge	zero,r16,8020e6c <___vfprintf_internal_r+0xae4>
 8020db4:	04400404 	movi	r17,16
 8020db8:	d8801f17 	ldw	r2,124(sp)
 8020dbc:	8c04c40e 	bge	r17,r16,80220d0 <___vfprintf_internal_r+0x1d48>
 8020dc0:	01400034 	movhi	r5,0
 8020dc4:	29401784 	addi	r5,r5,94
 8020dc8:	d9403515 	stw	r5,212(sp)
 8020dcc:	048001c4 	movi	r18,7
 8020dd0:	dcc02d17 	ldw	r19,180(sp)
 8020dd4:	00000306 	br	8020de4 <___vfprintf_internal_r+0xa5c>
 8020dd8:	843ffc04 	addi	r16,r16,-16
 8020ddc:	42000204 	addi	r8,r8,8
 8020de0:	8c00130e 	bge	r17,r16,8020e30 <___vfprintf_internal_r+0xaa8>
 8020de4:	01000034 	movhi	r4,0
 8020de8:	18c00404 	addi	r3,r3,16
 8020dec:	10800044 	addi	r2,r2,1
 8020df0:	21001784 	addi	r4,r4,94
 8020df4:	41000015 	stw	r4,0(r8)
 8020df8:	44400115 	stw	r17,4(r8)
 8020dfc:	d8c02015 	stw	r3,128(sp)
 8020e00:	d8801f15 	stw	r2,124(sp)
 8020e04:	90bff40e 	bge	r18,r2,8020dd8 <__flash_rwdata_start+0xffff12bc>
 8020e08:	d9801e04 	addi	r6,sp,120
 8020e0c:	b80b883a 	mov	r5,r23
 8020e10:	9809883a 	mov	r4,r19
 8020e14:	80270780 	call	8027078 <__sprint_r>
 8020e18:	103e5f1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8020e1c:	843ffc04 	addi	r16,r16,-16
 8020e20:	d8c02017 	ldw	r3,128(sp)
 8020e24:	d8801f17 	ldw	r2,124(sp)
 8020e28:	da000404 	addi	r8,sp,16
 8020e2c:	8c3fed16 	blt	r17,r16,8020de4 <__flash_rwdata_start+0xffff12c8>
 8020e30:	d9403517 	ldw	r5,212(sp)
 8020e34:	1c07883a 	add	r3,r3,r16
 8020e38:	10800044 	addi	r2,r2,1
 8020e3c:	41400015 	stw	r5,0(r8)
 8020e40:	44000115 	stw	r16,4(r8)
 8020e44:	d8c02015 	stw	r3,128(sp)
 8020e48:	d8801f15 	stw	r2,124(sp)
 8020e4c:	010001c4 	movi	r4,7
 8020e50:	2080060e 	bge	r4,r2,8020e6c <___vfprintf_internal_r+0xae4>
 8020e54:	d9002d17 	ldw	r4,180(sp)
 8020e58:	d9801e04 	addi	r6,sp,120
 8020e5c:	b80b883a 	mov	r5,r23
 8020e60:	80270780 	call	8027078 <__sprint_r>
 8020e64:	103e4c1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8020e68:	d8c02017 	ldw	r3,128(sp)
 8020e6c:	d8803117 	ldw	r2,196(sp)
 8020e70:	d9002917 	ldw	r4,164(sp)
 8020e74:	1100010e 	bge	r2,r4,8020e7c <___vfprintf_internal_r+0xaf4>
 8020e78:	2005883a 	mov	r2,r4
 8020e7c:	d9402f17 	ldw	r5,188(sp)
 8020e80:	288b883a 	add	r5,r5,r2
 8020e84:	d9402f15 	stw	r5,188(sp)
 8020e88:	1801c01e 	bne	r3,zero,802158c <___vfprintf_internal_r+0x1204>
 8020e8c:	a8800007 	ldb	r2,0(r21)
 8020e90:	d8001f15 	stw	zero,124(sp)
 8020e94:	da000404 	addi	r8,sp,16
 8020e98:	103d751e 	bne	r2,zero,8020470 <__flash_rwdata_start+0xffff0954>
 8020e9c:	a823883a 	mov	r17,r21
 8020ea0:	003d8b06 	br	80204d0 <__flash_rwdata_start+0xffff09b4>
 8020ea4:	8025883a 	mov	r18,r16
 8020ea8:	dc002903 	ldbu	r16,164(sp)
 8020eac:	e011883a 	mov	r8,fp
 8020eb0:	84003fcc 	andi	r16,r16,255
 8020eb4:	8005e51e 	bne	r16,zero,802264c <___vfprintf_internal_r+0x22c4>
 8020eb8:	94800414 	ori	r18,r18,16
 8020ebc:	9080080c 	andi	r2,r18,32
 8020ec0:	10022b26 	beq	r2,zero,8021770 <___vfprintf_internal_r+0x13e8>
 8020ec4:	d9002e17 	ldw	r4,184(sp)
 8020ec8:	d9402a17 	ldw	r5,168(sp)
 8020ecc:	d8002785 	stb	zero,158(sp)
 8020ed0:	20c00204 	addi	r3,r4,8
 8020ed4:	24c00017 	ldw	r19,0(r4)
 8020ed8:	25800117 	ldw	r22,4(r4)
 8020edc:	28042e16 	blt	r5,zero,8021f98 <___vfprintf_internal_r+0x1c10>
 8020ee0:	013fdfc4 	movi	r4,-129
 8020ee4:	9d84b03a 	or	r2,r19,r22
 8020ee8:	d8c02e15 	stw	r3,184(sp)
 8020eec:	9124703a 	and	r18,r18,r4
 8020ef0:	0039883a 	mov	fp,zero
 8020ef4:	103e801e 	bne	r2,zero,80208f8 <__flash_rwdata_start+0xffff0ddc>
 8020ef8:	d9002a17 	ldw	r4,168(sp)
 8020efc:	2002e01e 	bne	r4,zero,8021a80 <___vfprintf_internal_r+0x16f8>
 8020f00:	d8002a15 	stw	zero,168(sp)
 8020f04:	d8002b15 	stw	zero,172(sp)
 8020f08:	dc001e04 	addi	r16,sp,120
 8020f0c:	003ef506 	br	8020ae4 <__flash_rwdata_start+0xffff0fc8>
 8020f10:	8025883a 	mov	r18,r16
 8020f14:	dc002903 	ldbu	r16,164(sp)
 8020f18:	e011883a 	mov	r8,fp
 8020f1c:	84003fcc 	andi	r16,r16,255
 8020f20:	8005ba1e 	bne	r16,zero,802260c <___vfprintf_internal_r+0x2284>
 8020f24:	01000034 	movhi	r4,0
 8020f28:	21000704 	addi	r4,r4,28
 8020f2c:	d9003915 	stw	r4,228(sp)
 8020f30:	9080080c 	andi	r2,r18,32
 8020f34:	10006126 	beq	r2,zero,80210bc <___vfprintf_internal_r+0xd34>
 8020f38:	d9402e17 	ldw	r5,184(sp)
 8020f3c:	2cc00017 	ldw	r19,0(r5)
 8020f40:	2d800117 	ldw	r22,4(r5)
 8020f44:	29400204 	addi	r5,r5,8
 8020f48:	d9402e15 	stw	r5,184(sp)
 8020f4c:	9080004c 	andi	r2,r18,1
 8020f50:	1001ac26 	beq	r2,zero,8021604 <___vfprintf_internal_r+0x127c>
 8020f54:	9d84b03a 	or	r2,r19,r22
 8020f58:	10038526 	beq	r2,zero,8021d70 <___vfprintf_internal_r+0x19e8>
 8020f5c:	d8c02a17 	ldw	r3,168(sp)
 8020f60:	00800c04 	movi	r2,48
 8020f64:	d8802705 	stb	r2,156(sp)
 8020f68:	dc402745 	stb	r17,157(sp)
 8020f6c:	d8002785 	stb	zero,158(sp)
 8020f70:	90800094 	ori	r2,r18,2
 8020f74:	18047916 	blt	r3,zero,802215c <___vfprintf_internal_r+0x1dd4>
 8020f78:	00bfdfc4 	movi	r2,-129
 8020f7c:	90a4703a 	and	r18,r18,r2
 8020f80:	94800094 	ori	r18,r18,2
 8020f84:	0039883a 	mov	fp,zero
 8020f88:	d9003917 	ldw	r4,228(sp)
 8020f8c:	dc001e04 	addi	r16,sp,120
 8020f90:	988003cc 	andi	r2,r19,15
 8020f94:	b006973a 	slli	r3,r22,28
 8020f98:	2085883a 	add	r2,r4,r2
 8020f9c:	9826d13a 	srli	r19,r19,4
 8020fa0:	10800003 	ldbu	r2,0(r2)
 8020fa4:	b02cd13a 	srli	r22,r22,4
 8020fa8:	843fffc4 	addi	r16,r16,-1
 8020fac:	1ce6b03a 	or	r19,r3,r19
 8020fb0:	80800005 	stb	r2,0(r16)
 8020fb4:	9d84b03a 	or	r2,r19,r22
 8020fb8:	103ff51e 	bne	r2,zero,8020f90 <__flash_rwdata_start+0xffff1474>
 8020fbc:	d8c02817 	ldw	r3,160(sp)
 8020fc0:	1c07c83a 	sub	r3,r3,r16
 8020fc4:	d8c02b15 	stw	r3,172(sp)
 8020fc8:	003ec606 	br	8020ae4 <__flash_rwdata_start+0xffff0fc8>
 8020fcc:	8025883a 	mov	r18,r16
 8020fd0:	dc002903 	ldbu	r16,164(sp)
 8020fd4:	e011883a 	mov	r8,fp
 8020fd8:	84003fcc 	andi	r16,r16,255
 8020fdc:	803e9626 	beq	r16,zero,8020a38 <__flash_rwdata_start+0xffff0f1c>
 8020fe0:	d8c02b03 	ldbu	r3,172(sp)
 8020fe4:	d8c02785 	stb	r3,158(sp)
 8020fe8:	003e9306 	br	8020a38 <__flash_rwdata_start+0xffff0f1c>
 8020fec:	00c00044 	movi	r3,1
 8020ff0:	d8c02905 	stb	r3,164(sp)
 8020ff4:	00c00ac4 	movi	r3,43
 8020ff8:	d8c02b05 	stb	r3,172(sp)
 8020ffc:	ac400007 	ldb	r17,0(r21)
 8021000:	003d4306 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021004:	84000814 	ori	r16,r16,32
 8021008:	ac400007 	ldb	r17,0(r21)
 802100c:	003d4006 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021010:	d8802e17 	ldw	r2,184(sp)
 8021014:	8025883a 	mov	r18,r16
 8021018:	d8002785 	stb	zero,158(sp)
 802101c:	14000017 	ldw	r16,0(r2)
 8021020:	e011883a 	mov	r8,fp
 8021024:	14c00104 	addi	r19,r2,4
 8021028:	80042d26 	beq	r16,zero,80220e0 <___vfprintf_internal_r+0x1d58>
 802102c:	d8c02a17 	ldw	r3,168(sp)
 8021030:	1803e416 	blt	r3,zero,8021fc4 <___vfprintf_internal_r+0x1c3c>
 8021034:	180d883a 	mov	r6,r3
 8021038:	000b883a 	mov	r5,zero
 802103c:	8009883a 	mov	r4,r16
 8021040:	df003d15 	stw	fp,244(sp)
 8021044:	80257f80 	call	80257f8 <memchr>
 8021048:	da003d17 	ldw	r8,244(sp)
 802104c:	10046826 	beq	r2,zero,80221f0 <___vfprintf_internal_r+0x1e68>
 8021050:	1405c83a 	sub	r2,r2,r16
 8021054:	d8802b15 	stw	r2,172(sp)
 8021058:	1003e016 	blt	r2,zero,8021fdc <___vfprintf_internal_r+0x1c54>
 802105c:	df002783 	ldbu	fp,158(sp)
 8021060:	d8802915 	stw	r2,164(sp)
 8021064:	dcc02e15 	stw	r19,184(sp)
 8021068:	d8002a15 	stw	zero,168(sp)
 802106c:	d8003215 	stw	zero,200(sp)
 8021070:	003ea206 	br	8020afc <__flash_rwdata_start+0xffff0fe0>
 8021074:	8025883a 	mov	r18,r16
 8021078:	dc002903 	ldbu	r16,164(sp)
 802107c:	e011883a 	mov	r8,fp
 8021080:	84003fcc 	andi	r16,r16,255
 8021084:	803f8d26 	beq	r16,zero,8020ebc <__flash_rwdata_start+0xffff13a0>
 8021088:	d8c02b03 	ldbu	r3,172(sp)
 802108c:	d8c02785 	stb	r3,158(sp)
 8021090:	003f8a06 	br	8020ebc <__flash_rwdata_start+0xffff13a0>
 8021094:	8025883a 	mov	r18,r16
 8021098:	dc002903 	ldbu	r16,164(sp)
 802109c:	e011883a 	mov	r8,fp
 80210a0:	84003fcc 	andi	r16,r16,255
 80210a4:	8005661e 	bne	r16,zero,8022640 <___vfprintf_internal_r+0x22b8>
 80210a8:	01000034 	movhi	r4,0
 80210ac:	21000c04 	addi	r4,r4,48
 80210b0:	d9003915 	stw	r4,228(sp)
 80210b4:	9080080c 	andi	r2,r18,32
 80210b8:	103f9f1e 	bne	r2,zero,8020f38 <__flash_rwdata_start+0xffff141c>
 80210bc:	9080040c 	andi	r2,r18,16
 80210c0:	1002eb26 	beq	r2,zero,8021c70 <___vfprintf_internal_r+0x18e8>
 80210c4:	d8802e17 	ldw	r2,184(sp)
 80210c8:	002d883a 	mov	r22,zero
 80210cc:	14c00017 	ldw	r19,0(r2)
 80210d0:	10800104 	addi	r2,r2,4
 80210d4:	d8802e15 	stw	r2,184(sp)
 80210d8:	003f9c06 	br	8020f4c <__flash_rwdata_start+0xffff1430>
 80210dc:	d8802b07 	ldb	r2,172(sp)
 80210e0:	1002e11e 	bne	r2,zero,8021c68 <___vfprintf_internal_r+0x18e0>
 80210e4:	00c00044 	movi	r3,1
 80210e8:	d8c02905 	stb	r3,164(sp)
 80210ec:	00c00804 	movi	r3,32
 80210f0:	d8c02b05 	stb	r3,172(sp)
 80210f4:	ac400007 	ldb	r17,0(r21)
 80210f8:	003d0506 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 80210fc:	84000054 	ori	r16,r16,1
 8021100:	ac400007 	ldb	r17,0(r21)
 8021104:	003d0206 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021108:	8025883a 	mov	r18,r16
 802110c:	dc002903 	ldbu	r16,164(sp)
 8021110:	e011883a 	mov	r8,fp
 8021114:	84003fcc 	andi	r16,r16,255
 8021118:	803de726 	beq	r16,zero,80208b8 <__flash_rwdata_start+0xffff0d9c>
 802111c:	d8c02b03 	ldbu	r3,172(sp)
 8021120:	d8c02785 	stb	r3,158(sp)
 8021124:	003de406 	br	80208b8 <__flash_rwdata_start+0xffff0d9c>
 8021128:	84001014 	ori	r16,r16,64
 802112c:	ac400007 	ldb	r17,0(r21)
 8021130:	003cf706 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021134:	ac400007 	ldb	r17,0(r21)
 8021138:	00801b04 	movi	r2,108
 802113c:	88838f26 	beq	r17,r2,8021f7c <___vfprintf_internal_r+0x1bf4>
 8021140:	84000414 	ori	r16,r16,16
 8021144:	003cf206 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021148:	8025883a 	mov	r18,r16
 802114c:	dc002903 	ldbu	r16,164(sp)
 8021150:	e011883a 	mov	r8,fp
 8021154:	84003fcc 	andi	r16,r16,255
 8021158:	80053f1e 	bne	r16,zero,8022658 <___vfprintf_internal_r+0x22d0>
 802115c:	9080080c 	andi	r2,r18,32
 8021160:	1002d226 	beq	r2,zero,8021cac <___vfprintf_internal_r+0x1924>
 8021164:	d9002e17 	ldw	r4,184(sp)
 8021168:	d9402f17 	ldw	r5,188(sp)
 802116c:	20800017 	ldw	r2,0(r4)
 8021170:	2807d7fa 	srai	r3,r5,31
 8021174:	21000104 	addi	r4,r4,4
 8021178:	d9002e15 	stw	r4,184(sp)
 802117c:	11400015 	stw	r5,0(r2)
 8021180:	10c00115 	stw	r3,4(r2)
 8021184:	003cb806 	br	8020468 <__flash_rwdata_start+0xffff094c>
 8021188:	d8c02e17 	ldw	r3,184(sp)
 802118c:	d9002e17 	ldw	r4,184(sp)
 8021190:	8025883a 	mov	r18,r16
 8021194:	18800017 	ldw	r2,0(r3)
 8021198:	21000104 	addi	r4,r4,4
 802119c:	00c00044 	movi	r3,1
 80211a0:	e011883a 	mov	r8,fp
 80211a4:	d8c02915 	stw	r3,164(sp)
 80211a8:	d8002785 	stb	zero,158(sp)
 80211ac:	d8801405 	stb	r2,80(sp)
 80211b0:	d9002e15 	stw	r4,184(sp)
 80211b4:	d8c02b15 	stw	r3,172(sp)
 80211b8:	d8002a15 	stw	zero,168(sp)
 80211bc:	d8003215 	stw	zero,200(sp)
 80211c0:	dc001404 	addi	r16,sp,80
 80211c4:	0039883a 	mov	fp,zero
 80211c8:	003e5306 	br	8020b18 <__flash_rwdata_start+0xffff0ffc>
 80211cc:	01000034 	movhi	r4,0
 80211d0:	21000c04 	addi	r4,r4,48
 80211d4:	0039883a 	mov	fp,zero
 80211d8:	d9003915 	stw	r4,228(sp)
 80211dc:	04401e04 	movi	r17,120
 80211e0:	003f6906 	br	8020f88 <__flash_rwdata_start+0xffff146c>
 80211e4:	8025883a 	mov	r18,r16
 80211e8:	dc002903 	ldbu	r16,164(sp)
 80211ec:	e011883a 	mov	r8,fp
 80211f0:	84003fcc 	andi	r16,r16,255
 80211f4:	8005081e 	bne	r16,zero,8022618 <___vfprintf_internal_r+0x2290>
 80211f8:	883d6126 	beq	r17,zero,8020780 <__flash_rwdata_start+0xffff0c64>
 80211fc:	00c00044 	movi	r3,1
 8021200:	d8c02915 	stw	r3,164(sp)
 8021204:	dc401405 	stb	r17,80(sp)
 8021208:	d8002785 	stb	zero,158(sp)
 802120c:	003fe906 	br	80211b4 <__flash_rwdata_start+0xffff1698>
 8021210:	01400034 	movhi	r5,0
 8021214:	29400c04 	addi	r5,r5,48
 8021218:	d9403915 	stw	r5,228(sp)
 802121c:	d8c02e15 	stw	r3,184(sp)
 8021220:	1025883a 	mov	r18,r2
 8021224:	04401e04 	movi	r17,120
 8021228:	9d84b03a 	or	r2,r19,r22
 802122c:	1000fc1e 	bne	r2,zero,8021620 <___vfprintf_internal_r+0x1298>
 8021230:	0039883a 	mov	fp,zero
 8021234:	00800084 	movi	r2,2
 8021238:	10803fcc 	andi	r2,r2,255
 802123c:	00c00044 	movi	r3,1
 8021240:	10c20f26 	beq	r2,r3,8021a80 <___vfprintf_internal_r+0x16f8>
 8021244:	00c00084 	movi	r3,2
 8021248:	10fd3326 	beq	r2,r3,8020718 <__flash_rwdata_start+0xffff0bfc>
 802124c:	003e0b06 	br	8020a7c <__flash_rwdata_start+0xffff0f60>
 8021250:	d8c02017 	ldw	r3,128(sp)
 8021254:	003e7106 	br	8020c1c <__flash_rwdata_start+0xffff1100>
 8021258:	00801944 	movi	r2,101
 802125c:	14407e0e 	bge	r2,r17,8021458 <___vfprintf_internal_r+0x10d0>
 8021260:	d9003617 	ldw	r4,216(sp)
 8021264:	d9403817 	ldw	r5,224(sp)
 8021268:	000d883a 	mov	r6,zero
 802126c:	000f883a 	mov	r7,zero
 8021270:	d8c03c15 	stw	r3,240(sp)
 8021274:	da003d15 	stw	r8,244(sp)
 8021278:	802bb600 	call	802bb60 <__eqdf2>
 802127c:	d8c03c17 	ldw	r3,240(sp)
 8021280:	da003d17 	ldw	r8,244(sp)
 8021284:	1000f71e 	bne	r2,zero,8021664 <___vfprintf_internal_r+0x12dc>
 8021288:	d8801f17 	ldw	r2,124(sp)
 802128c:	01000034 	movhi	r4,0
 8021290:	21001304 	addi	r4,r4,76
 8021294:	18c00044 	addi	r3,r3,1
 8021298:	10800044 	addi	r2,r2,1
 802129c:	41000015 	stw	r4,0(r8)
 80212a0:	01000044 	movi	r4,1
 80212a4:	41000115 	stw	r4,4(r8)
 80212a8:	d8c02015 	stw	r3,128(sp)
 80212ac:	d8801f15 	stw	r2,124(sp)
 80212b0:	010001c4 	movi	r4,7
 80212b4:	2082b816 	blt	r4,r2,8021d98 <___vfprintf_internal_r+0x1a10>
 80212b8:	42000204 	addi	r8,r8,8
 80212bc:	d8802617 	ldw	r2,152(sp)
 80212c0:	d9403317 	ldw	r5,204(sp)
 80212c4:	11400216 	blt	r2,r5,80212d0 <___vfprintf_internal_r+0xf48>
 80212c8:	9080004c 	andi	r2,r18,1
 80212cc:	103eb326 	beq	r2,zero,8020d9c <__flash_rwdata_start+0xffff1280>
 80212d0:	d8803717 	ldw	r2,220(sp)
 80212d4:	d9003417 	ldw	r4,208(sp)
 80212d8:	d9403717 	ldw	r5,220(sp)
 80212dc:	1887883a 	add	r3,r3,r2
 80212e0:	d8801f17 	ldw	r2,124(sp)
 80212e4:	41000015 	stw	r4,0(r8)
 80212e8:	41400115 	stw	r5,4(r8)
 80212ec:	10800044 	addi	r2,r2,1
 80212f0:	d8c02015 	stw	r3,128(sp)
 80212f4:	d8801f15 	stw	r2,124(sp)
 80212f8:	010001c4 	movi	r4,7
 80212fc:	20832916 	blt	r4,r2,8021fa4 <___vfprintf_internal_r+0x1c1c>
 8021300:	42000204 	addi	r8,r8,8
 8021304:	d8803317 	ldw	r2,204(sp)
 8021308:	143fffc4 	addi	r16,r2,-1
 802130c:	043ea30e 	bge	zero,r16,8020d9c <__flash_rwdata_start+0xffff1280>
 8021310:	04400404 	movi	r17,16
 8021314:	d8801f17 	ldw	r2,124(sp)
 8021318:	8c00880e 	bge	r17,r16,802153c <___vfprintf_internal_r+0x11b4>
 802131c:	01400034 	movhi	r5,0
 8021320:	29401384 	addi	r5,r5,78
 8021324:	d9402c15 	stw	r5,176(sp)
 8021328:	058001c4 	movi	r22,7
 802132c:	dcc02d17 	ldw	r19,180(sp)
 8021330:	00000306 	br	8021340 <___vfprintf_internal_r+0xfb8>
 8021334:	42000204 	addi	r8,r8,8
 8021338:	843ffc04 	addi	r16,r16,-16
 802133c:	8c00820e 	bge	r17,r16,8021548 <___vfprintf_internal_r+0x11c0>
 8021340:	18c00404 	addi	r3,r3,16
 8021344:	10800044 	addi	r2,r2,1
 8021348:	45000015 	stw	r20,0(r8)
 802134c:	44400115 	stw	r17,4(r8)
 8021350:	d8c02015 	stw	r3,128(sp)
 8021354:	d8801f15 	stw	r2,124(sp)
 8021358:	b0bff60e 	bge	r22,r2,8021334 <__flash_rwdata_start+0xffff1818>
 802135c:	d9801e04 	addi	r6,sp,120
 8021360:	b80b883a 	mov	r5,r23
 8021364:	9809883a 	mov	r4,r19
 8021368:	80270780 	call	8027078 <__sprint_r>
 802136c:	103d0a1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021370:	d8c02017 	ldw	r3,128(sp)
 8021374:	d8801f17 	ldw	r2,124(sp)
 8021378:	da000404 	addi	r8,sp,16
 802137c:	003fee06 	br	8021338 <__flash_rwdata_start+0xffff181c>
 8021380:	d9403117 	ldw	r5,196(sp)
 8021384:	d8802917 	ldw	r2,164(sp)
 8021388:	28adc83a 	sub	r22,r5,r2
 802138c:	05be410e 	bge	zero,r22,8020c94 <__flash_rwdata_start+0xffff1178>
 8021390:	07000404 	movi	fp,16
 8021394:	d8801f17 	ldw	r2,124(sp)
 8021398:	e5838f0e 	bge	fp,r22,80221d8 <___vfprintf_internal_r+0x1e50>
 802139c:	01400034 	movhi	r5,0
 80213a0:	29401384 	addi	r5,r5,78
 80213a4:	dc403015 	stw	r17,192(sp)
 80213a8:	d9402c15 	stw	r5,176(sp)
 80213ac:	b023883a 	mov	r17,r22
 80213b0:	04c001c4 	movi	r19,7
 80213b4:	a82d883a 	mov	r22,r21
 80213b8:	902b883a 	mov	r21,r18
 80213bc:	8025883a 	mov	r18,r16
 80213c0:	dc002d17 	ldw	r16,180(sp)
 80213c4:	00000306 	br	80213d4 <___vfprintf_internal_r+0x104c>
 80213c8:	8c7ffc04 	addi	r17,r17,-16
 80213cc:	42000204 	addi	r8,r8,8
 80213d0:	e440110e 	bge	fp,r17,8021418 <___vfprintf_internal_r+0x1090>
 80213d4:	18c00404 	addi	r3,r3,16
 80213d8:	10800044 	addi	r2,r2,1
 80213dc:	45000015 	stw	r20,0(r8)
 80213e0:	47000115 	stw	fp,4(r8)
 80213e4:	d8c02015 	stw	r3,128(sp)
 80213e8:	d8801f15 	stw	r2,124(sp)
 80213ec:	98bff60e 	bge	r19,r2,80213c8 <__flash_rwdata_start+0xffff18ac>
 80213f0:	d9801e04 	addi	r6,sp,120
 80213f4:	b80b883a 	mov	r5,r23
 80213f8:	8009883a 	mov	r4,r16
 80213fc:	80270780 	call	8027078 <__sprint_r>
 8021400:	103ce51e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021404:	8c7ffc04 	addi	r17,r17,-16
 8021408:	d8c02017 	ldw	r3,128(sp)
 802140c:	d8801f17 	ldw	r2,124(sp)
 8021410:	da000404 	addi	r8,sp,16
 8021414:	e47fef16 	blt	fp,r17,80213d4 <__flash_rwdata_start+0xffff18b8>
 8021418:	9021883a 	mov	r16,r18
 802141c:	a825883a 	mov	r18,r21
 8021420:	b02b883a 	mov	r21,r22
 8021424:	882d883a 	mov	r22,r17
 8021428:	dc403017 	ldw	r17,192(sp)
 802142c:	d9002c17 	ldw	r4,176(sp)
 8021430:	1d87883a 	add	r3,r3,r22
 8021434:	10800044 	addi	r2,r2,1
 8021438:	41000015 	stw	r4,0(r8)
 802143c:	45800115 	stw	r22,4(r8)
 8021440:	d8c02015 	stw	r3,128(sp)
 8021444:	d8801f15 	stw	r2,124(sp)
 8021448:	010001c4 	movi	r4,7
 802144c:	20818e16 	blt	r4,r2,8021a88 <___vfprintf_internal_r+0x1700>
 8021450:	42000204 	addi	r8,r8,8
 8021454:	003e0f06 	br	8020c94 <__flash_rwdata_start+0xffff1178>
 8021458:	d9403317 	ldw	r5,204(sp)
 802145c:	00800044 	movi	r2,1
 8021460:	18c00044 	addi	r3,r3,1
 8021464:	1141530e 	bge	r2,r5,80219b4 <___vfprintf_internal_r+0x162c>
 8021468:	dc401f17 	ldw	r17,124(sp)
 802146c:	00800044 	movi	r2,1
 8021470:	40800115 	stw	r2,4(r8)
 8021474:	8c400044 	addi	r17,r17,1
 8021478:	44000015 	stw	r16,0(r8)
 802147c:	d8c02015 	stw	r3,128(sp)
 8021480:	dc401f15 	stw	r17,124(sp)
 8021484:	008001c4 	movi	r2,7
 8021488:	14416b16 	blt	r2,r17,8021a38 <___vfprintf_internal_r+0x16b0>
 802148c:	42000204 	addi	r8,r8,8
 8021490:	d8803717 	ldw	r2,220(sp)
 8021494:	d9003417 	ldw	r4,208(sp)
 8021498:	8c400044 	addi	r17,r17,1
 802149c:	10c7883a 	add	r3,r2,r3
 80214a0:	40800115 	stw	r2,4(r8)
 80214a4:	41000015 	stw	r4,0(r8)
 80214a8:	d8c02015 	stw	r3,128(sp)
 80214ac:	dc401f15 	stw	r17,124(sp)
 80214b0:	008001c4 	movi	r2,7
 80214b4:	14416916 	blt	r2,r17,8021a5c <___vfprintf_internal_r+0x16d4>
 80214b8:	45800204 	addi	r22,r8,8
 80214bc:	d9003617 	ldw	r4,216(sp)
 80214c0:	d9403817 	ldw	r5,224(sp)
 80214c4:	000d883a 	mov	r6,zero
 80214c8:	000f883a 	mov	r7,zero
 80214cc:	d8c03c15 	stw	r3,240(sp)
 80214d0:	802bb600 	call	802bb60 <__eqdf2>
 80214d4:	d8c03c17 	ldw	r3,240(sp)
 80214d8:	1000bc26 	beq	r2,zero,80217cc <___vfprintf_internal_r+0x1444>
 80214dc:	d9403317 	ldw	r5,204(sp)
 80214e0:	84000044 	addi	r16,r16,1
 80214e4:	8c400044 	addi	r17,r17,1
 80214e8:	28bfffc4 	addi	r2,r5,-1
 80214ec:	1887883a 	add	r3,r3,r2
 80214f0:	b0800115 	stw	r2,4(r22)
 80214f4:	b4000015 	stw	r16,0(r22)
 80214f8:	d8c02015 	stw	r3,128(sp)
 80214fc:	dc401f15 	stw	r17,124(sp)
 8021500:	008001c4 	movi	r2,7
 8021504:	14414316 	blt	r2,r17,8021a14 <___vfprintf_internal_r+0x168c>
 8021508:	b5800204 	addi	r22,r22,8
 802150c:	d9003a17 	ldw	r4,232(sp)
 8021510:	df0022c4 	addi	fp,sp,139
 8021514:	8c400044 	addi	r17,r17,1
 8021518:	20c7883a 	add	r3,r4,r3
 802151c:	b7000015 	stw	fp,0(r22)
 8021520:	b1000115 	stw	r4,4(r22)
 8021524:	d8c02015 	stw	r3,128(sp)
 8021528:	dc401f15 	stw	r17,124(sp)
 802152c:	008001c4 	movi	r2,7
 8021530:	14400e16 	blt	r2,r17,802156c <___vfprintf_internal_r+0x11e4>
 8021534:	b2000204 	addi	r8,r22,8
 8021538:	003e1806 	br	8020d9c <__flash_rwdata_start+0xffff1280>
 802153c:	01000034 	movhi	r4,0
 8021540:	21001384 	addi	r4,r4,78
 8021544:	d9002c15 	stw	r4,176(sp)
 8021548:	d9002c17 	ldw	r4,176(sp)
 802154c:	1c07883a 	add	r3,r3,r16
 8021550:	44000115 	stw	r16,4(r8)
 8021554:	41000015 	stw	r4,0(r8)
 8021558:	10800044 	addi	r2,r2,1
 802155c:	d8c02015 	stw	r3,128(sp)
 8021560:	d8801f15 	stw	r2,124(sp)
 8021564:	010001c4 	movi	r4,7
 8021568:	20be0b0e 	bge	r4,r2,8020d98 <__flash_rwdata_start+0xffff127c>
 802156c:	d9002d17 	ldw	r4,180(sp)
 8021570:	d9801e04 	addi	r6,sp,120
 8021574:	b80b883a 	mov	r5,r23
 8021578:	80270780 	call	8027078 <__sprint_r>
 802157c:	103c861e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021580:	d8c02017 	ldw	r3,128(sp)
 8021584:	da000404 	addi	r8,sp,16
 8021588:	003e0406 	br	8020d9c <__flash_rwdata_start+0xffff1280>
 802158c:	d9002d17 	ldw	r4,180(sp)
 8021590:	d9801e04 	addi	r6,sp,120
 8021594:	b80b883a 	mov	r5,r23
 8021598:	80270780 	call	8027078 <__sprint_r>
 802159c:	103e3b26 	beq	r2,zero,8020e8c <__flash_rwdata_start+0xffff1370>
 80215a0:	003c7d06 	br	8020798 <__flash_rwdata_start+0xffff0c7c>
 80215a4:	d9002d17 	ldw	r4,180(sp)
 80215a8:	d9801e04 	addi	r6,sp,120
 80215ac:	b80b883a 	mov	r5,r23
 80215b0:	80270780 	call	8027078 <__sprint_r>
 80215b4:	103c781e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 80215b8:	d8c02017 	ldw	r3,128(sp)
 80215bc:	da000404 	addi	r8,sp,16
 80215c0:	003de906 	br	8020d68 <__flash_rwdata_start+0xffff124c>
 80215c4:	d9002d17 	ldw	r4,180(sp)
 80215c8:	d9801e04 	addi	r6,sp,120
 80215cc:	b80b883a 	mov	r5,r23
 80215d0:	80270780 	call	8027078 <__sprint_r>
 80215d4:	103c701e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 80215d8:	d8c02017 	ldw	r3,128(sp)
 80215dc:	da000404 	addi	r8,sp,16
 80215e0:	003d9b06 	br	8020c50 <__flash_rwdata_start+0xffff1134>
 80215e4:	d9002d17 	ldw	r4,180(sp)
 80215e8:	d9801e04 	addi	r6,sp,120
 80215ec:	b80b883a 	mov	r5,r23
 80215f0:	80270780 	call	8027078 <__sprint_r>
 80215f4:	103c681e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 80215f8:	d8c02017 	ldw	r3,128(sp)
 80215fc:	da000404 	addi	r8,sp,16
 8021600:	003da106 	br	8020c88 <__flash_rwdata_start+0xffff116c>
 8021604:	d9402a17 	ldw	r5,168(sp)
 8021608:	d8002785 	stb	zero,158(sp)
 802160c:	283f0616 	blt	r5,zero,8021228 <__flash_rwdata_start+0xffff170c>
 8021610:	00ffdfc4 	movi	r3,-129
 8021614:	9d84b03a 	or	r2,r19,r22
 8021618:	90e4703a 	and	r18,r18,r3
 802161c:	103c3b26 	beq	r2,zero,802070c <__flash_rwdata_start+0xffff0bf0>
 8021620:	0039883a 	mov	fp,zero
 8021624:	003e5806 	br	8020f88 <__flash_rwdata_start+0xffff146c>
 8021628:	9080040c 	andi	r2,r18,16
 802162c:	1001b326 	beq	r2,zero,8021cfc <___vfprintf_internal_r+0x1974>
 8021630:	d8c02e17 	ldw	r3,184(sp)
 8021634:	d9002a17 	ldw	r4,168(sp)
 8021638:	d8002785 	stb	zero,158(sp)
 802163c:	18800104 	addi	r2,r3,4
 8021640:	1cc00017 	ldw	r19,0(r3)
 8021644:	002d883a 	mov	r22,zero
 8021648:	2001b516 	blt	r4,zero,8021d20 <___vfprintf_internal_r+0x1998>
 802164c:	00ffdfc4 	movi	r3,-129
 8021650:	d8802e15 	stw	r2,184(sp)
 8021654:	90e4703a 	and	r18,r18,r3
 8021658:	983d0526 	beq	r19,zero,8020a70 <__flash_rwdata_start+0xffff0f54>
 802165c:	0039883a 	mov	fp,zero
 8021660:	003d0806 	br	8020a84 <__flash_rwdata_start+0xffff0f68>
 8021664:	dc402617 	ldw	r17,152(sp)
 8021668:	0441d30e 	bge	zero,r17,8021db8 <___vfprintf_internal_r+0x1a30>
 802166c:	dc403217 	ldw	r17,200(sp)
 8021670:	d8803317 	ldw	r2,204(sp)
 8021674:	1440010e 	bge	r2,r17,802167c <___vfprintf_internal_r+0x12f4>
 8021678:	1023883a 	mov	r17,r2
 802167c:	04400a0e 	bge	zero,r17,80216a8 <___vfprintf_internal_r+0x1320>
 8021680:	d8801f17 	ldw	r2,124(sp)
 8021684:	1c47883a 	add	r3,r3,r17
 8021688:	44000015 	stw	r16,0(r8)
 802168c:	10800044 	addi	r2,r2,1
 8021690:	44400115 	stw	r17,4(r8)
 8021694:	d8c02015 	stw	r3,128(sp)
 8021698:	d8801f15 	stw	r2,124(sp)
 802169c:	010001c4 	movi	r4,7
 80216a0:	20826516 	blt	r4,r2,8022038 <___vfprintf_internal_r+0x1cb0>
 80216a4:	42000204 	addi	r8,r8,8
 80216a8:	88026116 	blt	r17,zero,8022030 <___vfprintf_internal_r+0x1ca8>
 80216ac:	d9003217 	ldw	r4,200(sp)
 80216b0:	2463c83a 	sub	r17,r4,r17
 80216b4:	04407b0e 	bge	zero,r17,80218a4 <___vfprintf_internal_r+0x151c>
 80216b8:	05800404 	movi	r22,16
 80216bc:	d8801f17 	ldw	r2,124(sp)
 80216c0:	b4419d0e 	bge	r22,r17,8021d38 <___vfprintf_internal_r+0x19b0>
 80216c4:	01000034 	movhi	r4,0
 80216c8:	21001384 	addi	r4,r4,78
 80216cc:	d9002c15 	stw	r4,176(sp)
 80216d0:	070001c4 	movi	fp,7
 80216d4:	dcc02d17 	ldw	r19,180(sp)
 80216d8:	00000306 	br	80216e8 <___vfprintf_internal_r+0x1360>
 80216dc:	42000204 	addi	r8,r8,8
 80216e0:	8c7ffc04 	addi	r17,r17,-16
 80216e4:	b441970e 	bge	r22,r17,8021d44 <___vfprintf_internal_r+0x19bc>
 80216e8:	18c00404 	addi	r3,r3,16
 80216ec:	10800044 	addi	r2,r2,1
 80216f0:	45000015 	stw	r20,0(r8)
 80216f4:	45800115 	stw	r22,4(r8)
 80216f8:	d8c02015 	stw	r3,128(sp)
 80216fc:	d8801f15 	stw	r2,124(sp)
 8021700:	e0bff60e 	bge	fp,r2,80216dc <__flash_rwdata_start+0xffff1bc0>
 8021704:	d9801e04 	addi	r6,sp,120
 8021708:	b80b883a 	mov	r5,r23
 802170c:	9809883a 	mov	r4,r19
 8021710:	80270780 	call	8027078 <__sprint_r>
 8021714:	103c201e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021718:	d8c02017 	ldw	r3,128(sp)
 802171c:	d8801f17 	ldw	r2,124(sp)
 8021720:	da000404 	addi	r8,sp,16
 8021724:	003fee06 	br	80216e0 <__flash_rwdata_start+0xffff1bc4>
 8021728:	d9002d17 	ldw	r4,180(sp)
 802172c:	d9801e04 	addi	r6,sp,120
 8021730:	b80b883a 	mov	r5,r23
 8021734:	80270780 	call	8027078 <__sprint_r>
 8021738:	103c171e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 802173c:	d8c02017 	ldw	r3,128(sp)
 8021740:	df002787 	ldb	fp,158(sp)
 8021744:	da000404 	addi	r8,sp,16
 8021748:	003d3406 	br	8020c1c <__flash_rwdata_start+0xffff1100>
 802174c:	9080040c 	andi	r2,r18,16
 8021750:	10016126 	beq	r2,zero,8021cd8 <___vfprintf_internal_r+0x1950>
 8021754:	d9402e17 	ldw	r5,184(sp)
 8021758:	2cc00017 	ldw	r19,0(r5)
 802175c:	29400104 	addi	r5,r5,4
 8021760:	d9402e15 	stw	r5,184(sp)
 8021764:	982dd7fa 	srai	r22,r19,31
 8021768:	b005883a 	mov	r2,r22
 802176c:	003c5a06 	br	80208d8 <__flash_rwdata_start+0xffff0dbc>
 8021770:	9080040c 	andi	r2,r18,16
 8021774:	10003526 	beq	r2,zero,802184c <___vfprintf_internal_r+0x14c4>
 8021778:	d8c02e17 	ldw	r3,184(sp)
 802177c:	d9002a17 	ldw	r4,168(sp)
 8021780:	d8002785 	stb	zero,158(sp)
 8021784:	18800104 	addi	r2,r3,4
 8021788:	1cc00017 	ldw	r19,0(r3)
 802178c:	002d883a 	mov	r22,zero
 8021790:	20003716 	blt	r4,zero,8021870 <___vfprintf_internal_r+0x14e8>
 8021794:	00ffdfc4 	movi	r3,-129
 8021798:	d8802e15 	stw	r2,184(sp)
 802179c:	90e4703a 	and	r18,r18,r3
 80217a0:	0039883a 	mov	fp,zero
 80217a4:	983dd426 	beq	r19,zero,8020ef8 <__flash_rwdata_start+0xffff13dc>
 80217a8:	00800244 	movi	r2,9
 80217ac:	14fc5336 	bltu	r2,r19,80208fc <__flash_rwdata_start+0xffff0de0>
 80217b0:	d8c02817 	ldw	r3,160(sp)
 80217b4:	dc001dc4 	addi	r16,sp,119
 80217b8:	9cc00c04 	addi	r19,r19,48
 80217bc:	1c07c83a 	sub	r3,r3,r16
 80217c0:	dcc01dc5 	stb	r19,119(sp)
 80217c4:	d8c02b15 	stw	r3,172(sp)
 80217c8:	003cc606 	br	8020ae4 <__flash_rwdata_start+0xffff0fc8>
 80217cc:	d8803317 	ldw	r2,204(sp)
 80217d0:	143fffc4 	addi	r16,r2,-1
 80217d4:	043f4d0e 	bge	zero,r16,802150c <__flash_rwdata_start+0xffff19f0>
 80217d8:	07000404 	movi	fp,16
 80217dc:	e400810e 	bge	fp,r16,80219e4 <___vfprintf_internal_r+0x165c>
 80217e0:	01400034 	movhi	r5,0
 80217e4:	29401384 	addi	r5,r5,78
 80217e8:	d9402c15 	stw	r5,176(sp)
 80217ec:	01c001c4 	movi	r7,7
 80217f0:	dcc02d17 	ldw	r19,180(sp)
 80217f4:	00000306 	br	8021804 <___vfprintf_internal_r+0x147c>
 80217f8:	b5800204 	addi	r22,r22,8
 80217fc:	843ffc04 	addi	r16,r16,-16
 8021800:	e4007b0e 	bge	fp,r16,80219f0 <___vfprintf_internal_r+0x1668>
 8021804:	18c00404 	addi	r3,r3,16
 8021808:	8c400044 	addi	r17,r17,1
 802180c:	b5000015 	stw	r20,0(r22)
 8021810:	b7000115 	stw	fp,4(r22)
 8021814:	d8c02015 	stw	r3,128(sp)
 8021818:	dc401f15 	stw	r17,124(sp)
 802181c:	3c7ff60e 	bge	r7,r17,80217f8 <__flash_rwdata_start+0xffff1cdc>
 8021820:	d9801e04 	addi	r6,sp,120
 8021824:	b80b883a 	mov	r5,r23
 8021828:	9809883a 	mov	r4,r19
 802182c:	d9c03c15 	stw	r7,240(sp)
 8021830:	80270780 	call	8027078 <__sprint_r>
 8021834:	d9c03c17 	ldw	r7,240(sp)
 8021838:	103bd71e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 802183c:	d8c02017 	ldw	r3,128(sp)
 8021840:	dc401f17 	ldw	r17,124(sp)
 8021844:	dd800404 	addi	r22,sp,16
 8021848:	003fec06 	br	80217fc <__flash_rwdata_start+0xffff1ce0>
 802184c:	9080100c 	andi	r2,r18,64
 8021850:	d8002785 	stb	zero,158(sp)
 8021854:	10010e26 	beq	r2,zero,8021c90 <___vfprintf_internal_r+0x1908>
 8021858:	d9402e17 	ldw	r5,184(sp)
 802185c:	d8c02a17 	ldw	r3,168(sp)
 8021860:	002d883a 	mov	r22,zero
 8021864:	28800104 	addi	r2,r5,4
 8021868:	2cc0000b 	ldhu	r19,0(r5)
 802186c:	183fc90e 	bge	r3,zero,8021794 <__flash_rwdata_start+0xffff1c78>
 8021870:	d8802e15 	stw	r2,184(sp)
 8021874:	0039883a 	mov	fp,zero
 8021878:	9d84b03a 	or	r2,r19,r22
 802187c:	103c1e1e 	bne	r2,zero,80208f8 <__flash_rwdata_start+0xffff0ddc>
 8021880:	00800044 	movi	r2,1
 8021884:	003e6c06 	br	8021238 <__flash_rwdata_start+0xffff171c>
 8021888:	d9002d17 	ldw	r4,180(sp)
 802188c:	d9801e04 	addi	r6,sp,120
 8021890:	b80b883a 	mov	r5,r23
 8021894:	80270780 	call	8027078 <__sprint_r>
 8021898:	103bbf1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 802189c:	d8c02017 	ldw	r3,128(sp)
 80218a0:	da000404 	addi	r8,sp,16
 80218a4:	d9003217 	ldw	r4,200(sp)
 80218a8:	d8802617 	ldw	r2,152(sp)
 80218ac:	d9403317 	ldw	r5,204(sp)
 80218b0:	8123883a 	add	r17,r16,r4
 80218b4:	11400216 	blt	r2,r5,80218c0 <___vfprintf_internal_r+0x1538>
 80218b8:	9100004c 	andi	r4,r18,1
 80218bc:	20000d26 	beq	r4,zero,80218f4 <___vfprintf_internal_r+0x156c>
 80218c0:	d9003717 	ldw	r4,220(sp)
 80218c4:	d9403417 	ldw	r5,208(sp)
 80218c8:	1907883a 	add	r3,r3,r4
 80218cc:	d9001f17 	ldw	r4,124(sp)
 80218d0:	41400015 	stw	r5,0(r8)
 80218d4:	d9403717 	ldw	r5,220(sp)
 80218d8:	21000044 	addi	r4,r4,1
 80218dc:	d8c02015 	stw	r3,128(sp)
 80218e0:	41400115 	stw	r5,4(r8)
 80218e4:	d9001f15 	stw	r4,124(sp)
 80218e8:	014001c4 	movi	r5,7
 80218ec:	2901e816 	blt	r5,r4,8022090 <___vfprintf_internal_r+0x1d08>
 80218f0:	42000204 	addi	r8,r8,8
 80218f4:	d9003317 	ldw	r4,204(sp)
 80218f8:	8121883a 	add	r16,r16,r4
 80218fc:	2085c83a 	sub	r2,r4,r2
 8021900:	8461c83a 	sub	r16,r16,r17
 8021904:	1400010e 	bge	r2,r16,802190c <___vfprintf_internal_r+0x1584>
 8021908:	1021883a 	mov	r16,r2
 802190c:	04000a0e 	bge	zero,r16,8021938 <___vfprintf_internal_r+0x15b0>
 8021910:	d9001f17 	ldw	r4,124(sp)
 8021914:	1c07883a 	add	r3,r3,r16
 8021918:	44400015 	stw	r17,0(r8)
 802191c:	21000044 	addi	r4,r4,1
 8021920:	44000115 	stw	r16,4(r8)
 8021924:	d8c02015 	stw	r3,128(sp)
 8021928:	d9001f15 	stw	r4,124(sp)
 802192c:	014001c4 	movi	r5,7
 8021930:	2901fb16 	blt	r5,r4,8022120 <___vfprintf_internal_r+0x1d98>
 8021934:	42000204 	addi	r8,r8,8
 8021938:	8001f716 	blt	r16,zero,8022118 <___vfprintf_internal_r+0x1d90>
 802193c:	1421c83a 	sub	r16,r2,r16
 8021940:	043d160e 	bge	zero,r16,8020d9c <__flash_rwdata_start+0xffff1280>
 8021944:	04400404 	movi	r17,16
 8021948:	d8801f17 	ldw	r2,124(sp)
 802194c:	8c3efb0e 	bge	r17,r16,802153c <__flash_rwdata_start+0xffff1a20>
 8021950:	01400034 	movhi	r5,0
 8021954:	29401384 	addi	r5,r5,78
 8021958:	d9402c15 	stw	r5,176(sp)
 802195c:	058001c4 	movi	r22,7
 8021960:	dcc02d17 	ldw	r19,180(sp)
 8021964:	00000306 	br	8021974 <___vfprintf_internal_r+0x15ec>
 8021968:	42000204 	addi	r8,r8,8
 802196c:	843ffc04 	addi	r16,r16,-16
 8021970:	8c3ef50e 	bge	r17,r16,8021548 <__flash_rwdata_start+0xffff1a2c>
 8021974:	18c00404 	addi	r3,r3,16
 8021978:	10800044 	addi	r2,r2,1
 802197c:	45000015 	stw	r20,0(r8)
 8021980:	44400115 	stw	r17,4(r8)
 8021984:	d8c02015 	stw	r3,128(sp)
 8021988:	d8801f15 	stw	r2,124(sp)
 802198c:	b0bff60e 	bge	r22,r2,8021968 <__flash_rwdata_start+0xffff1e4c>
 8021990:	d9801e04 	addi	r6,sp,120
 8021994:	b80b883a 	mov	r5,r23
 8021998:	9809883a 	mov	r4,r19
 802199c:	80270780 	call	8027078 <__sprint_r>
 80219a0:	103b7d1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 80219a4:	d8c02017 	ldw	r3,128(sp)
 80219a8:	d8801f17 	ldw	r2,124(sp)
 80219ac:	da000404 	addi	r8,sp,16
 80219b0:	003fee06 	br	802196c <__flash_rwdata_start+0xffff1e50>
 80219b4:	9088703a 	and	r4,r18,r2
 80219b8:	203eab1e 	bne	r4,zero,8021468 <__flash_rwdata_start+0xffff194c>
 80219bc:	dc401f17 	ldw	r17,124(sp)
 80219c0:	40800115 	stw	r2,4(r8)
 80219c4:	44000015 	stw	r16,0(r8)
 80219c8:	8c400044 	addi	r17,r17,1
 80219cc:	d8c02015 	stw	r3,128(sp)
 80219d0:	dc401f15 	stw	r17,124(sp)
 80219d4:	008001c4 	movi	r2,7
 80219d8:	14400e16 	blt	r2,r17,8021a14 <___vfprintf_internal_r+0x168c>
 80219dc:	45800204 	addi	r22,r8,8
 80219e0:	003eca06 	br	802150c <__flash_rwdata_start+0xffff19f0>
 80219e4:	01000034 	movhi	r4,0
 80219e8:	21001384 	addi	r4,r4,78
 80219ec:	d9002c15 	stw	r4,176(sp)
 80219f0:	d8802c17 	ldw	r2,176(sp)
 80219f4:	1c07883a 	add	r3,r3,r16
 80219f8:	8c400044 	addi	r17,r17,1
 80219fc:	b0800015 	stw	r2,0(r22)
 8021a00:	b4000115 	stw	r16,4(r22)
 8021a04:	d8c02015 	stw	r3,128(sp)
 8021a08:	dc401f15 	stw	r17,124(sp)
 8021a0c:	008001c4 	movi	r2,7
 8021a10:	147ebd0e 	bge	r2,r17,8021508 <__flash_rwdata_start+0xffff19ec>
 8021a14:	d9002d17 	ldw	r4,180(sp)
 8021a18:	d9801e04 	addi	r6,sp,120
 8021a1c:	b80b883a 	mov	r5,r23
 8021a20:	80270780 	call	8027078 <__sprint_r>
 8021a24:	103b5c1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021a28:	d8c02017 	ldw	r3,128(sp)
 8021a2c:	dc401f17 	ldw	r17,124(sp)
 8021a30:	dd800404 	addi	r22,sp,16
 8021a34:	003eb506 	br	802150c <__flash_rwdata_start+0xffff19f0>
 8021a38:	d9002d17 	ldw	r4,180(sp)
 8021a3c:	d9801e04 	addi	r6,sp,120
 8021a40:	b80b883a 	mov	r5,r23
 8021a44:	80270780 	call	8027078 <__sprint_r>
 8021a48:	103b531e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021a4c:	d8c02017 	ldw	r3,128(sp)
 8021a50:	dc401f17 	ldw	r17,124(sp)
 8021a54:	da000404 	addi	r8,sp,16
 8021a58:	003e8d06 	br	8021490 <__flash_rwdata_start+0xffff1974>
 8021a5c:	d9002d17 	ldw	r4,180(sp)
 8021a60:	d9801e04 	addi	r6,sp,120
 8021a64:	b80b883a 	mov	r5,r23
 8021a68:	80270780 	call	8027078 <__sprint_r>
 8021a6c:	103b4a1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021a70:	d8c02017 	ldw	r3,128(sp)
 8021a74:	dc401f17 	ldw	r17,124(sp)
 8021a78:	dd800404 	addi	r22,sp,16
 8021a7c:	003e8f06 	br	80214bc <__flash_rwdata_start+0xffff19a0>
 8021a80:	0027883a 	mov	r19,zero
 8021a84:	003f4a06 	br	80217b0 <__flash_rwdata_start+0xffff1c94>
 8021a88:	d9002d17 	ldw	r4,180(sp)
 8021a8c:	d9801e04 	addi	r6,sp,120
 8021a90:	b80b883a 	mov	r5,r23
 8021a94:	80270780 	call	8027078 <__sprint_r>
 8021a98:	103b3f1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021a9c:	d8c02017 	ldw	r3,128(sp)
 8021aa0:	da000404 	addi	r8,sp,16
 8021aa4:	003c7b06 	br	8020c94 <__flash_rwdata_start+0xffff1178>
 8021aa8:	d9402a17 	ldw	r5,168(sp)
 8021aac:	04e7c83a 	sub	r19,zero,r19
 8021ab0:	07000b44 	movi	fp,45
 8021ab4:	9804c03a 	cmpne	r2,r19,zero
 8021ab8:	05adc83a 	sub	r22,zero,r22
 8021abc:	df002785 	stb	fp,158(sp)
 8021ac0:	b0adc83a 	sub	r22,r22,r2
 8021ac4:	28017b16 	blt	r5,zero,80220b4 <___vfprintf_internal_r+0x1d2c>
 8021ac8:	00bfdfc4 	movi	r2,-129
 8021acc:	90a4703a 	and	r18,r18,r2
 8021ad0:	003b8906 	br	80208f8 <__flash_rwdata_start+0xffff0ddc>
 8021ad4:	d9003617 	ldw	r4,216(sp)
 8021ad8:	d9403817 	ldw	r5,224(sp)
 8021adc:	da003d15 	stw	r8,244(sp)
 8021ae0:	8026c040 	call	8026c04 <__fpclassifyd>
 8021ae4:	da003d17 	ldw	r8,244(sp)
 8021ae8:	1000f026 	beq	r2,zero,8021eac <___vfprintf_internal_r+0x1b24>
 8021aec:	d9002a17 	ldw	r4,168(sp)
 8021af0:	05bff7c4 	movi	r22,-33
 8021af4:	00bfffc4 	movi	r2,-1
 8021af8:	8dac703a 	and	r22,r17,r22
 8021afc:	20820026 	beq	r4,r2,8022300 <___vfprintf_internal_r+0x1f78>
 8021b00:	008011c4 	movi	r2,71
 8021b04:	b081f726 	beq	r22,r2,80222e4 <___vfprintf_internal_r+0x1f5c>
 8021b08:	d9003817 	ldw	r4,224(sp)
 8021b0c:	90c04014 	ori	r3,r18,256
 8021b10:	d8c02c15 	stw	r3,176(sp)
 8021b14:	20021516 	blt	r4,zero,802236c <___vfprintf_internal_r+0x1fe4>
 8021b18:	dcc03817 	ldw	r19,224(sp)
 8021b1c:	d8002905 	stb	zero,164(sp)
 8021b20:	00801984 	movi	r2,102
 8021b24:	8881f926 	beq	r17,r2,802230c <___vfprintf_internal_r+0x1f84>
 8021b28:	00801184 	movi	r2,70
 8021b2c:	88821c26 	beq	r17,r2,80223a0 <___vfprintf_internal_r+0x2018>
 8021b30:	00801144 	movi	r2,69
 8021b34:	b081ef26 	beq	r22,r2,80222f4 <___vfprintf_internal_r+0x1f6c>
 8021b38:	d8c02a17 	ldw	r3,168(sp)
 8021b3c:	d8802104 	addi	r2,sp,132
 8021b40:	d8800315 	stw	r2,12(sp)
 8021b44:	d9403617 	ldw	r5,216(sp)
 8021b48:	d8802504 	addi	r2,sp,148
 8021b4c:	d9002d17 	ldw	r4,180(sp)
 8021b50:	d8800215 	stw	r2,8(sp)
 8021b54:	d8802604 	addi	r2,sp,152
 8021b58:	d8c00015 	stw	r3,0(sp)
 8021b5c:	d8800115 	stw	r2,4(sp)
 8021b60:	01c00084 	movi	r7,2
 8021b64:	980d883a 	mov	r6,r19
 8021b68:	d8c03c15 	stw	r3,240(sp)
 8021b6c:	da003d15 	stw	r8,244(sp)
 8021b70:	8022ab80 	call	8022ab8 <_dtoa_r>
 8021b74:	1021883a 	mov	r16,r2
 8021b78:	008019c4 	movi	r2,103
 8021b7c:	d8c03c17 	ldw	r3,240(sp)
 8021b80:	da003d17 	ldw	r8,244(sp)
 8021b84:	88817126 	beq	r17,r2,802214c <___vfprintf_internal_r+0x1dc4>
 8021b88:	008011c4 	movi	r2,71
 8021b8c:	88829126 	beq	r17,r2,80225d4 <___vfprintf_internal_r+0x224c>
 8021b90:	80f9883a 	add	fp,r16,r3
 8021b94:	d9003617 	ldw	r4,216(sp)
 8021b98:	000d883a 	mov	r6,zero
 8021b9c:	000f883a 	mov	r7,zero
 8021ba0:	980b883a 	mov	r5,r19
 8021ba4:	da003d15 	stw	r8,244(sp)
 8021ba8:	802bb600 	call	802bb60 <__eqdf2>
 8021bac:	da003d17 	ldw	r8,244(sp)
 8021bb0:	10018d26 	beq	r2,zero,80221e8 <___vfprintf_internal_r+0x1e60>
 8021bb4:	d8802117 	ldw	r2,132(sp)
 8021bb8:	1700062e 	bgeu	r2,fp,8021bd4 <___vfprintf_internal_r+0x184c>
 8021bbc:	01000c04 	movi	r4,48
 8021bc0:	10c00044 	addi	r3,r2,1
 8021bc4:	d8c02115 	stw	r3,132(sp)
 8021bc8:	11000005 	stb	r4,0(r2)
 8021bcc:	d8802117 	ldw	r2,132(sp)
 8021bd0:	173ffb36 	bltu	r2,fp,8021bc0 <__flash_rwdata_start+0xffff20a4>
 8021bd4:	1405c83a 	sub	r2,r2,r16
 8021bd8:	d8803315 	stw	r2,204(sp)
 8021bdc:	008011c4 	movi	r2,71
 8021be0:	b0817626 	beq	r22,r2,80221bc <___vfprintf_internal_r+0x1e34>
 8021be4:	00801944 	movi	r2,101
 8021be8:	1442800e 	bge	r2,r17,80225ec <___vfprintf_internal_r+0x2264>
 8021bec:	d8c02617 	ldw	r3,152(sp)
 8021bf0:	00801984 	movi	r2,102
 8021bf4:	d8c03215 	stw	r3,200(sp)
 8021bf8:	8881fe26 	beq	r17,r2,80223f4 <___vfprintf_internal_r+0x206c>
 8021bfc:	d8c03217 	ldw	r3,200(sp)
 8021c00:	d9003317 	ldw	r4,204(sp)
 8021c04:	1901dd16 	blt	r3,r4,802237c <___vfprintf_internal_r+0x1ff4>
 8021c08:	9480004c 	andi	r18,r18,1
 8021c0c:	90022b1e 	bne	r18,zero,80224bc <___vfprintf_internal_r+0x2134>
 8021c10:	1805883a 	mov	r2,r3
 8021c14:	18028316 	blt	r3,zero,8022624 <___vfprintf_internal_r+0x229c>
 8021c18:	d8c03217 	ldw	r3,200(sp)
 8021c1c:	044019c4 	movi	r17,103
 8021c20:	d8c02b15 	stw	r3,172(sp)
 8021c24:	df002907 	ldb	fp,164(sp)
 8021c28:	e001531e 	bne	fp,zero,8022178 <___vfprintf_internal_r+0x1df0>
 8021c2c:	df002783 	ldbu	fp,158(sp)
 8021c30:	d8802915 	stw	r2,164(sp)
 8021c34:	dc802c17 	ldw	r18,176(sp)
 8021c38:	d8002a15 	stw	zero,168(sp)
 8021c3c:	003baf06 	br	8020afc <__flash_rwdata_start+0xffff0fe0>
 8021c40:	d8c02e17 	ldw	r3,184(sp)
 8021c44:	d9002e17 	ldw	r4,184(sp)
 8021c48:	d9402e17 	ldw	r5,184(sp)
 8021c4c:	18c00017 	ldw	r3,0(r3)
 8021c50:	21000117 	ldw	r4,4(r4)
 8021c54:	29400204 	addi	r5,r5,8
 8021c58:	d8c03615 	stw	r3,216(sp)
 8021c5c:	d9003815 	stw	r4,224(sp)
 8021c60:	d9402e15 	stw	r5,184(sp)
 8021c64:	003b5006 	br	80209a8 <__flash_rwdata_start+0xffff0e8c>
 8021c68:	ac400007 	ldb	r17,0(r21)
 8021c6c:	003a2806 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021c70:	9080100c 	andi	r2,r18,64
 8021c74:	1000a826 	beq	r2,zero,8021f18 <___vfprintf_internal_r+0x1b90>
 8021c78:	d8c02e17 	ldw	r3,184(sp)
 8021c7c:	002d883a 	mov	r22,zero
 8021c80:	1cc0000b 	ldhu	r19,0(r3)
 8021c84:	18c00104 	addi	r3,r3,4
 8021c88:	d8c02e15 	stw	r3,184(sp)
 8021c8c:	003caf06 	br	8020f4c <__flash_rwdata_start+0xffff1430>
 8021c90:	d9002e17 	ldw	r4,184(sp)
 8021c94:	d9402a17 	ldw	r5,168(sp)
 8021c98:	002d883a 	mov	r22,zero
 8021c9c:	20800104 	addi	r2,r4,4
 8021ca0:	24c00017 	ldw	r19,0(r4)
 8021ca4:	283ebb0e 	bge	r5,zero,8021794 <__flash_rwdata_start+0xffff1c78>
 8021ca8:	003ef106 	br	8021870 <__flash_rwdata_start+0xffff1d54>
 8021cac:	9080040c 	andi	r2,r18,16
 8021cb0:	1000921e 	bne	r2,zero,8021efc <___vfprintf_internal_r+0x1b74>
 8021cb4:	9480100c 	andi	r18,r18,64
 8021cb8:	90013926 	beq	r18,zero,80221a0 <___vfprintf_internal_r+0x1e18>
 8021cbc:	d9402e17 	ldw	r5,184(sp)
 8021cc0:	d8c02f17 	ldw	r3,188(sp)
 8021cc4:	28800017 	ldw	r2,0(r5)
 8021cc8:	29400104 	addi	r5,r5,4
 8021ccc:	d9402e15 	stw	r5,184(sp)
 8021cd0:	10c0000d 	sth	r3,0(r2)
 8021cd4:	0039e406 	br	8020468 <__flash_rwdata_start+0xffff094c>
 8021cd8:	9080100c 	andi	r2,r18,64
 8021cdc:	10008026 	beq	r2,zero,8021ee0 <___vfprintf_internal_r+0x1b58>
 8021ce0:	d8802e17 	ldw	r2,184(sp)
 8021ce4:	14c0000f 	ldh	r19,0(r2)
 8021ce8:	10800104 	addi	r2,r2,4
 8021cec:	d8802e15 	stw	r2,184(sp)
 8021cf0:	982dd7fa 	srai	r22,r19,31
 8021cf4:	b005883a 	mov	r2,r22
 8021cf8:	003af706 	br	80208d8 <__flash_rwdata_start+0xffff0dbc>
 8021cfc:	9080100c 	andi	r2,r18,64
 8021d00:	d8002785 	stb	zero,158(sp)
 8021d04:	10008a1e 	bne	r2,zero,8021f30 <___vfprintf_internal_r+0x1ba8>
 8021d08:	d9002e17 	ldw	r4,184(sp)
 8021d0c:	d9402a17 	ldw	r5,168(sp)
 8021d10:	002d883a 	mov	r22,zero
 8021d14:	20800104 	addi	r2,r4,4
 8021d18:	24c00017 	ldw	r19,0(r4)
 8021d1c:	283e4b0e 	bge	r5,zero,802164c <__flash_rwdata_start+0xffff1b30>
 8021d20:	9d86b03a 	or	r3,r19,r22
 8021d24:	d8802e15 	stw	r2,184(sp)
 8021d28:	183e4c1e 	bne	r3,zero,802165c <__flash_rwdata_start+0xffff1b40>
 8021d2c:	0039883a 	mov	fp,zero
 8021d30:	0005883a 	mov	r2,zero
 8021d34:	003d4006 	br	8021238 <__flash_rwdata_start+0xffff171c>
 8021d38:	01400034 	movhi	r5,0
 8021d3c:	29401384 	addi	r5,r5,78
 8021d40:	d9402c15 	stw	r5,176(sp)
 8021d44:	d9402c17 	ldw	r5,176(sp)
 8021d48:	1c47883a 	add	r3,r3,r17
 8021d4c:	10800044 	addi	r2,r2,1
 8021d50:	41400015 	stw	r5,0(r8)
 8021d54:	44400115 	stw	r17,4(r8)
 8021d58:	d8c02015 	stw	r3,128(sp)
 8021d5c:	d8801f15 	stw	r2,124(sp)
 8021d60:	010001c4 	movi	r4,7
 8021d64:	20bec816 	blt	r4,r2,8021888 <__flash_rwdata_start+0xffff1d6c>
 8021d68:	42000204 	addi	r8,r8,8
 8021d6c:	003ecd06 	br	80218a4 <__flash_rwdata_start+0xffff1d88>
 8021d70:	d9002a17 	ldw	r4,168(sp)
 8021d74:	d8002785 	stb	zero,158(sp)
 8021d78:	203d2d16 	blt	r4,zero,8021230 <__flash_rwdata_start+0xffff1714>
 8021d7c:	00bfdfc4 	movi	r2,-129
 8021d80:	90a4703a 	and	r18,r18,r2
 8021d84:	003a6106 	br	802070c <__flash_rwdata_start+0xffff0bf0>
 8021d88:	01000034 	movhi	r4,0
 8021d8c:	21001384 	addi	r4,r4,78
 8021d90:	d9002c15 	stw	r4,176(sp)
 8021d94:	003bea06 	br	8020d40 <__flash_rwdata_start+0xffff1224>
 8021d98:	d9002d17 	ldw	r4,180(sp)
 8021d9c:	d9801e04 	addi	r6,sp,120
 8021da0:	b80b883a 	mov	r5,r23
 8021da4:	80270780 	call	8027078 <__sprint_r>
 8021da8:	103a7b1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021dac:	d8c02017 	ldw	r3,128(sp)
 8021db0:	da000404 	addi	r8,sp,16
 8021db4:	003d4106 	br	80212bc <__flash_rwdata_start+0xffff17a0>
 8021db8:	d8801f17 	ldw	r2,124(sp)
 8021dbc:	01400034 	movhi	r5,0
 8021dc0:	01000044 	movi	r4,1
 8021dc4:	18c00044 	addi	r3,r3,1
 8021dc8:	10800044 	addi	r2,r2,1
 8021dcc:	29401304 	addi	r5,r5,76
 8021dd0:	41000115 	stw	r4,4(r8)
 8021dd4:	41400015 	stw	r5,0(r8)
 8021dd8:	d8c02015 	stw	r3,128(sp)
 8021ddc:	d8801f15 	stw	r2,124(sp)
 8021de0:	010001c4 	movi	r4,7
 8021de4:	20805c16 	blt	r4,r2,8021f58 <___vfprintf_internal_r+0x1bd0>
 8021de8:	42000204 	addi	r8,r8,8
 8021dec:	8800041e 	bne	r17,zero,8021e00 <___vfprintf_internal_r+0x1a78>
 8021df0:	d8803317 	ldw	r2,204(sp)
 8021df4:	1000021e 	bne	r2,zero,8021e00 <___vfprintf_internal_r+0x1a78>
 8021df8:	9080004c 	andi	r2,r18,1
 8021dfc:	103be726 	beq	r2,zero,8020d9c <__flash_rwdata_start+0xffff1280>
 8021e00:	d9003717 	ldw	r4,220(sp)
 8021e04:	d8801f17 	ldw	r2,124(sp)
 8021e08:	d9403417 	ldw	r5,208(sp)
 8021e0c:	20c7883a 	add	r3,r4,r3
 8021e10:	10800044 	addi	r2,r2,1
 8021e14:	41000115 	stw	r4,4(r8)
 8021e18:	41400015 	stw	r5,0(r8)
 8021e1c:	d8c02015 	stw	r3,128(sp)
 8021e20:	d8801f15 	stw	r2,124(sp)
 8021e24:	010001c4 	movi	r4,7
 8021e28:	20812116 	blt	r4,r2,80222b0 <___vfprintf_internal_r+0x1f28>
 8021e2c:	42000204 	addi	r8,r8,8
 8021e30:	0463c83a 	sub	r17,zero,r17
 8021e34:	0440730e 	bge	zero,r17,8022004 <___vfprintf_internal_r+0x1c7c>
 8021e38:	05800404 	movi	r22,16
 8021e3c:	b440860e 	bge	r22,r17,8022058 <___vfprintf_internal_r+0x1cd0>
 8021e40:	01400034 	movhi	r5,0
 8021e44:	29401384 	addi	r5,r5,78
 8021e48:	d9402c15 	stw	r5,176(sp)
 8021e4c:	070001c4 	movi	fp,7
 8021e50:	dcc02d17 	ldw	r19,180(sp)
 8021e54:	00000306 	br	8021e64 <___vfprintf_internal_r+0x1adc>
 8021e58:	42000204 	addi	r8,r8,8
 8021e5c:	8c7ffc04 	addi	r17,r17,-16
 8021e60:	b440800e 	bge	r22,r17,8022064 <___vfprintf_internal_r+0x1cdc>
 8021e64:	18c00404 	addi	r3,r3,16
 8021e68:	10800044 	addi	r2,r2,1
 8021e6c:	45000015 	stw	r20,0(r8)
 8021e70:	45800115 	stw	r22,4(r8)
 8021e74:	d8c02015 	stw	r3,128(sp)
 8021e78:	d8801f15 	stw	r2,124(sp)
 8021e7c:	e0bff60e 	bge	fp,r2,8021e58 <__flash_rwdata_start+0xffff233c>
 8021e80:	d9801e04 	addi	r6,sp,120
 8021e84:	b80b883a 	mov	r5,r23
 8021e88:	9809883a 	mov	r4,r19
 8021e8c:	80270780 	call	8027078 <__sprint_r>
 8021e90:	103a411e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021e94:	d8c02017 	ldw	r3,128(sp)
 8021e98:	d8801f17 	ldw	r2,124(sp)
 8021e9c:	da000404 	addi	r8,sp,16
 8021ea0:	003fee06 	br	8021e5c <__flash_rwdata_start+0xffff2340>
 8021ea4:	00bfffc4 	movi	r2,-1
 8021ea8:	003a3f06 	br	80207a8 <__flash_rwdata_start+0xffff0c8c>
 8021eac:	008011c4 	movi	r2,71
 8021eb0:	1440b816 	blt	r2,r17,8022194 <___vfprintf_internal_r+0x1e0c>
 8021eb4:	04000034 	movhi	r16,0
 8021eb8:	84000504 	addi	r16,r16,20
 8021ebc:	00c000c4 	movi	r3,3
 8021ec0:	00bfdfc4 	movi	r2,-129
 8021ec4:	d8c02915 	stw	r3,164(sp)
 8021ec8:	90a4703a 	and	r18,r18,r2
 8021ecc:	df002783 	ldbu	fp,158(sp)
 8021ed0:	d8c02b15 	stw	r3,172(sp)
 8021ed4:	d8002a15 	stw	zero,168(sp)
 8021ed8:	d8003215 	stw	zero,200(sp)
 8021edc:	003b0706 	br	8020afc <__flash_rwdata_start+0xffff0fe0>
 8021ee0:	d8c02e17 	ldw	r3,184(sp)
 8021ee4:	1cc00017 	ldw	r19,0(r3)
 8021ee8:	18c00104 	addi	r3,r3,4
 8021eec:	d8c02e15 	stw	r3,184(sp)
 8021ef0:	982dd7fa 	srai	r22,r19,31
 8021ef4:	b005883a 	mov	r2,r22
 8021ef8:	003a7706 	br	80208d8 <__flash_rwdata_start+0xffff0dbc>
 8021efc:	d8c02e17 	ldw	r3,184(sp)
 8021f00:	d9002f17 	ldw	r4,188(sp)
 8021f04:	18800017 	ldw	r2,0(r3)
 8021f08:	18c00104 	addi	r3,r3,4
 8021f0c:	d8c02e15 	stw	r3,184(sp)
 8021f10:	11000015 	stw	r4,0(r2)
 8021f14:	00395406 	br	8020468 <__flash_rwdata_start+0xffff094c>
 8021f18:	d9002e17 	ldw	r4,184(sp)
 8021f1c:	002d883a 	mov	r22,zero
 8021f20:	24c00017 	ldw	r19,0(r4)
 8021f24:	21000104 	addi	r4,r4,4
 8021f28:	d9002e15 	stw	r4,184(sp)
 8021f2c:	003c0706 	br	8020f4c <__flash_rwdata_start+0xffff1430>
 8021f30:	d9402e17 	ldw	r5,184(sp)
 8021f34:	d8c02a17 	ldw	r3,168(sp)
 8021f38:	002d883a 	mov	r22,zero
 8021f3c:	28800104 	addi	r2,r5,4
 8021f40:	2cc0000b 	ldhu	r19,0(r5)
 8021f44:	183dc10e 	bge	r3,zero,802164c <__flash_rwdata_start+0xffff1b30>
 8021f48:	003f7506 	br	8021d20 <__flash_rwdata_start+0xffff2204>
 8021f4c:	04000034 	movhi	r16,0
 8021f50:	84000304 	addi	r16,r16,12
 8021f54:	003aa706 	br	80209f4 <__flash_rwdata_start+0xffff0ed8>
 8021f58:	d9002d17 	ldw	r4,180(sp)
 8021f5c:	d9801e04 	addi	r6,sp,120
 8021f60:	b80b883a 	mov	r5,r23
 8021f64:	80270780 	call	8027078 <__sprint_r>
 8021f68:	103a0b1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021f6c:	dc402617 	ldw	r17,152(sp)
 8021f70:	d8c02017 	ldw	r3,128(sp)
 8021f74:	da000404 	addi	r8,sp,16
 8021f78:	003f9c06 	br	8021dec <__flash_rwdata_start+0xffff22d0>
 8021f7c:	ac400043 	ldbu	r17,1(r21)
 8021f80:	84000814 	ori	r16,r16,32
 8021f84:	ad400044 	addi	r21,r21,1
 8021f88:	8c403fcc 	andi	r17,r17,255
 8021f8c:	8c40201c 	xori	r17,r17,128
 8021f90:	8c7fe004 	addi	r17,r17,-128
 8021f94:	00395e06 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 8021f98:	d8c02e15 	stw	r3,184(sp)
 8021f9c:	0039883a 	mov	fp,zero
 8021fa0:	003e3506 	br	8021878 <__flash_rwdata_start+0xffff1d5c>
 8021fa4:	d9002d17 	ldw	r4,180(sp)
 8021fa8:	d9801e04 	addi	r6,sp,120
 8021fac:	b80b883a 	mov	r5,r23
 8021fb0:	80270780 	call	8027078 <__sprint_r>
 8021fb4:	1039f81e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021fb8:	d8c02017 	ldw	r3,128(sp)
 8021fbc:	da000404 	addi	r8,sp,16
 8021fc0:	003cd006 	br	8021304 <__flash_rwdata_start+0xffff17e8>
 8021fc4:	8009883a 	mov	r4,r16
 8021fc8:	df003d15 	stw	fp,244(sp)
 8021fcc:	8026ee40 	call	8026ee4 <strlen>
 8021fd0:	d8802b15 	stw	r2,172(sp)
 8021fd4:	da003d17 	ldw	r8,244(sp)
 8021fd8:	103c200e 	bge	r2,zero,802105c <__flash_rwdata_start+0xffff1540>
 8021fdc:	0005883a 	mov	r2,zero
 8021fe0:	003c1e06 	br	802105c <__flash_rwdata_start+0xffff1540>
 8021fe4:	d9002d17 	ldw	r4,180(sp)
 8021fe8:	d9801e04 	addi	r6,sp,120
 8021fec:	b80b883a 	mov	r5,r23
 8021ff0:	80270780 	call	8027078 <__sprint_r>
 8021ff4:	1039e81e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8021ff8:	d8c02017 	ldw	r3,128(sp)
 8021ffc:	d8801f17 	ldw	r2,124(sp)
 8022000:	da000404 	addi	r8,sp,16
 8022004:	d9403317 	ldw	r5,204(sp)
 8022008:	10800044 	addi	r2,r2,1
 802200c:	44000015 	stw	r16,0(r8)
 8022010:	28c7883a 	add	r3,r5,r3
 8022014:	003b5b06 	br	8020d84 <__flash_rwdata_start+0xffff1268>
 8022018:	01000034 	movhi	r4,0
 802201c:	21001784 	addi	r4,r4,94
 8022020:	d9003515 	stw	r4,212(sp)
 8022024:	003af206 	br	8020bf0 <__flash_rwdata_start+0xffff10d4>
 8022028:	013fffc4 	movi	r4,-1
 802202c:	003a0806 	br	8020850 <__flash_rwdata_start+0xffff0d34>
 8022030:	0023883a 	mov	r17,zero
 8022034:	003d9d06 	br	80216ac <__flash_rwdata_start+0xffff1b90>
 8022038:	d9002d17 	ldw	r4,180(sp)
 802203c:	d9801e04 	addi	r6,sp,120
 8022040:	b80b883a 	mov	r5,r23
 8022044:	80270780 	call	8027078 <__sprint_r>
 8022048:	1039d31e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 802204c:	d8c02017 	ldw	r3,128(sp)
 8022050:	da000404 	addi	r8,sp,16
 8022054:	003d9406 	br	80216a8 <__flash_rwdata_start+0xffff1b8c>
 8022058:	01000034 	movhi	r4,0
 802205c:	21001384 	addi	r4,r4,78
 8022060:	d9002c15 	stw	r4,176(sp)
 8022064:	d9002c17 	ldw	r4,176(sp)
 8022068:	1c47883a 	add	r3,r3,r17
 802206c:	10800044 	addi	r2,r2,1
 8022070:	41000015 	stw	r4,0(r8)
 8022074:	44400115 	stw	r17,4(r8)
 8022078:	d8c02015 	stw	r3,128(sp)
 802207c:	d8801f15 	stw	r2,124(sp)
 8022080:	010001c4 	movi	r4,7
 8022084:	20bfd716 	blt	r4,r2,8021fe4 <__flash_rwdata_start+0xffff24c8>
 8022088:	42000204 	addi	r8,r8,8
 802208c:	003fdd06 	br	8022004 <__flash_rwdata_start+0xffff24e8>
 8022090:	d9002d17 	ldw	r4,180(sp)
 8022094:	d9801e04 	addi	r6,sp,120
 8022098:	b80b883a 	mov	r5,r23
 802209c:	80270780 	call	8027078 <__sprint_r>
 80220a0:	1039bd1e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 80220a4:	d8802617 	ldw	r2,152(sp)
 80220a8:	d8c02017 	ldw	r3,128(sp)
 80220ac:	da000404 	addi	r8,sp,16
 80220b0:	003e1006 	br	80218f4 <__flash_rwdata_start+0xffff1dd8>
 80220b4:	00800044 	movi	r2,1
 80220b8:	10803fcc 	andi	r2,r2,255
 80220bc:	00c00044 	movi	r3,1
 80220c0:	10fa0d26 	beq	r2,r3,80208f8 <__flash_rwdata_start+0xffff0ddc>
 80220c4:	00c00084 	movi	r3,2
 80220c8:	10fbaf26 	beq	r2,r3,8020f88 <__flash_rwdata_start+0xffff146c>
 80220cc:	003a6d06 	br	8020a84 <__flash_rwdata_start+0xffff0f68>
 80220d0:	01000034 	movhi	r4,0
 80220d4:	21001784 	addi	r4,r4,94
 80220d8:	d9003515 	stw	r4,212(sp)
 80220dc:	003b5406 	br	8020e30 <__flash_rwdata_start+0xffff1314>
 80220e0:	d8802a17 	ldw	r2,168(sp)
 80220e4:	00c00184 	movi	r3,6
 80220e8:	1880012e 	bgeu	r3,r2,80220f0 <___vfprintf_internal_r+0x1d68>
 80220ec:	1805883a 	mov	r2,r3
 80220f0:	d8802b15 	stw	r2,172(sp)
 80220f4:	1000ef16 	blt	r2,zero,80224b4 <___vfprintf_internal_r+0x212c>
 80220f8:	04000034 	movhi	r16,0
 80220fc:	d8802915 	stw	r2,164(sp)
 8022100:	dcc02e15 	stw	r19,184(sp)
 8022104:	d8002a15 	stw	zero,168(sp)
 8022108:	d8003215 	stw	zero,200(sp)
 802210c:	84001104 	addi	r16,r16,68
 8022110:	0039883a 	mov	fp,zero
 8022114:	003a8006 	br	8020b18 <__flash_rwdata_start+0xffff0ffc>
 8022118:	0021883a 	mov	r16,zero
 802211c:	003e0706 	br	802193c <__flash_rwdata_start+0xffff1e20>
 8022120:	d9002d17 	ldw	r4,180(sp)
 8022124:	d9801e04 	addi	r6,sp,120
 8022128:	b80b883a 	mov	r5,r23
 802212c:	80270780 	call	8027078 <__sprint_r>
 8022130:	1039991e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 8022134:	d8802617 	ldw	r2,152(sp)
 8022138:	d9403317 	ldw	r5,204(sp)
 802213c:	d8c02017 	ldw	r3,128(sp)
 8022140:	da000404 	addi	r8,sp,16
 8022144:	2885c83a 	sub	r2,r5,r2
 8022148:	003dfb06 	br	8021938 <__flash_rwdata_start+0xffff1e1c>
 802214c:	9080004c 	andi	r2,r18,1
 8022150:	103e8f1e 	bne	r2,zero,8021b90 <__flash_rwdata_start+0xffff2074>
 8022154:	d8802117 	ldw	r2,132(sp)
 8022158:	003e9e06 	br	8021bd4 <__flash_rwdata_start+0xffff20b8>
 802215c:	1025883a 	mov	r18,r2
 8022160:	0039883a 	mov	fp,zero
 8022164:	00800084 	movi	r2,2
 8022168:	003fd306 	br	80220b8 <__flash_rwdata_start+0xffff259c>
 802216c:	07000b44 	movi	fp,45
 8022170:	df002785 	stb	fp,158(sp)
 8022174:	003a1b06 	br	80209e4 <__flash_rwdata_start+0xffff0ec8>
 8022178:	00c00b44 	movi	r3,45
 802217c:	d8c02785 	stb	r3,158(sp)
 8022180:	d8802915 	stw	r2,164(sp)
 8022184:	dc802c17 	ldw	r18,176(sp)
 8022188:	d8002a15 	stw	zero,168(sp)
 802218c:	07000b44 	movi	fp,45
 8022190:	003a5e06 	br	8020b0c <__flash_rwdata_start+0xffff0ff0>
 8022194:	04000034 	movhi	r16,0
 8022198:	84000604 	addi	r16,r16,24
 802219c:	003f4706 	br	8021ebc <__flash_rwdata_start+0xffff23a0>
 80221a0:	d9002e17 	ldw	r4,184(sp)
 80221a4:	d9402f17 	ldw	r5,188(sp)
 80221a8:	20800017 	ldw	r2,0(r4)
 80221ac:	21000104 	addi	r4,r4,4
 80221b0:	d9002e15 	stw	r4,184(sp)
 80221b4:	11400015 	stw	r5,0(r2)
 80221b8:	0038ab06 	br	8020468 <__flash_rwdata_start+0xffff094c>
 80221bc:	dd802617 	ldw	r22,152(sp)
 80221c0:	00bfff44 	movi	r2,-3
 80221c4:	b0801c16 	blt	r22,r2,8022238 <___vfprintf_internal_r+0x1eb0>
 80221c8:	d9402a17 	ldw	r5,168(sp)
 80221cc:	2d801a16 	blt	r5,r22,8022238 <___vfprintf_internal_r+0x1eb0>
 80221d0:	dd803215 	stw	r22,200(sp)
 80221d4:	003e8906 	br	8021bfc <__flash_rwdata_start+0xffff20e0>
 80221d8:	01000034 	movhi	r4,0
 80221dc:	21001384 	addi	r4,r4,78
 80221e0:	d9002c15 	stw	r4,176(sp)
 80221e4:	003c9106 	br	802142c <__flash_rwdata_start+0xffff1910>
 80221e8:	e005883a 	mov	r2,fp
 80221ec:	003e7906 	br	8021bd4 <__flash_rwdata_start+0xffff20b8>
 80221f0:	d9002a17 	ldw	r4,168(sp)
 80221f4:	df002783 	ldbu	fp,158(sp)
 80221f8:	dcc02e15 	stw	r19,184(sp)
 80221fc:	d9002915 	stw	r4,164(sp)
 8022200:	d9002b15 	stw	r4,172(sp)
 8022204:	d8002a15 	stw	zero,168(sp)
 8022208:	d8003215 	stw	zero,200(sp)
 802220c:	003a3b06 	br	8020afc <__flash_rwdata_start+0xffff0fe0>
 8022210:	9080004c 	andi	r2,r18,1
 8022214:	0039883a 	mov	fp,zero
 8022218:	10000426 	beq	r2,zero,802222c <___vfprintf_internal_r+0x1ea4>
 802221c:	00800c04 	movi	r2,48
 8022220:	dc001dc4 	addi	r16,sp,119
 8022224:	d8801dc5 	stb	r2,119(sp)
 8022228:	003b6406 	br	8020fbc <__flash_rwdata_start+0xffff14a0>
 802222c:	d8002b15 	stw	zero,172(sp)
 8022230:	dc001e04 	addi	r16,sp,120
 8022234:	003a2b06 	br	8020ae4 <__flash_rwdata_start+0xffff0fc8>
 8022238:	8c7fff84 	addi	r17,r17,-2
 802223c:	b5bfffc4 	addi	r22,r22,-1
 8022240:	dd802615 	stw	r22,152(sp)
 8022244:	dc4022c5 	stb	r17,139(sp)
 8022248:	b000bf16 	blt	r22,zero,8022548 <___vfprintf_internal_r+0x21c0>
 802224c:	00800ac4 	movi	r2,43
 8022250:	d8802305 	stb	r2,140(sp)
 8022254:	00800244 	movi	r2,9
 8022258:	15807016 	blt	r2,r22,802241c <___vfprintf_internal_r+0x2094>
 802225c:	00800c04 	movi	r2,48
 8022260:	b5800c04 	addi	r22,r22,48
 8022264:	d8802345 	stb	r2,141(sp)
 8022268:	dd802385 	stb	r22,142(sp)
 802226c:	d88023c4 	addi	r2,sp,143
 8022270:	df0022c4 	addi	fp,sp,139
 8022274:	d8c03317 	ldw	r3,204(sp)
 8022278:	1739c83a 	sub	fp,r2,fp
 802227c:	d9003317 	ldw	r4,204(sp)
 8022280:	e0c7883a 	add	r3,fp,r3
 8022284:	df003a15 	stw	fp,232(sp)
 8022288:	d8c02b15 	stw	r3,172(sp)
 802228c:	00800044 	movi	r2,1
 8022290:	1100b30e 	bge	r2,r4,8022560 <___vfprintf_internal_r+0x21d8>
 8022294:	d8c02b17 	ldw	r3,172(sp)
 8022298:	18c00044 	addi	r3,r3,1
 802229c:	d8c02b15 	stw	r3,172(sp)
 80222a0:	1805883a 	mov	r2,r3
 80222a4:	1800ac16 	blt	r3,zero,8022558 <___vfprintf_internal_r+0x21d0>
 80222a8:	d8003215 	stw	zero,200(sp)
 80222ac:	003e5d06 	br	8021c24 <__flash_rwdata_start+0xffff2108>
 80222b0:	d9002d17 	ldw	r4,180(sp)
 80222b4:	d9801e04 	addi	r6,sp,120
 80222b8:	b80b883a 	mov	r5,r23
 80222bc:	80270780 	call	8027078 <__sprint_r>
 80222c0:	1039351e 	bne	r2,zero,8020798 <__flash_rwdata_start+0xffff0c7c>
 80222c4:	dc402617 	ldw	r17,152(sp)
 80222c8:	d8c02017 	ldw	r3,128(sp)
 80222cc:	d8801f17 	ldw	r2,124(sp)
 80222d0:	da000404 	addi	r8,sp,16
 80222d4:	003ed606 	br	8021e30 <__flash_rwdata_start+0xffff2314>
 80222d8:	182b883a 	mov	r21,r3
 80222dc:	d8002a15 	stw	zero,168(sp)
 80222e0:	00388c06 	br	8020514 <__flash_rwdata_start+0xffff09f8>
 80222e4:	d8802a17 	ldw	r2,168(sp)
 80222e8:	103e071e 	bne	r2,zero,8021b08 <__flash_rwdata_start+0xffff1fec>
 80222ec:	dc002a15 	stw	r16,168(sp)
 80222f0:	003e0506 	br	8021b08 <__flash_rwdata_start+0xffff1fec>
 80222f4:	d9002a17 	ldw	r4,168(sp)
 80222f8:	20c00044 	addi	r3,r4,1
 80222fc:	003e0f06 	br	8021b3c <__flash_rwdata_start+0xffff2020>
 8022300:	01400184 	movi	r5,6
 8022304:	d9402a15 	stw	r5,168(sp)
 8022308:	003dff06 	br	8021b08 <__flash_rwdata_start+0xffff1fec>
 802230c:	d8802104 	addi	r2,sp,132
 8022310:	d8800315 	stw	r2,12(sp)
 8022314:	d8802504 	addi	r2,sp,148
 8022318:	d8800215 	stw	r2,8(sp)
 802231c:	d8802604 	addi	r2,sp,152
 8022320:	d8800115 	stw	r2,4(sp)
 8022324:	d8802a17 	ldw	r2,168(sp)
 8022328:	d9403617 	ldw	r5,216(sp)
 802232c:	d9002d17 	ldw	r4,180(sp)
 8022330:	d8800015 	stw	r2,0(sp)
 8022334:	01c000c4 	movi	r7,3
 8022338:	980d883a 	mov	r6,r19
 802233c:	da003d15 	stw	r8,244(sp)
 8022340:	8022ab80 	call	8022ab8 <_dtoa_r>
 8022344:	d8c02a17 	ldw	r3,168(sp)
 8022348:	da003d17 	ldw	r8,244(sp)
 802234c:	1021883a 	mov	r16,r2
 8022350:	10f9883a 	add	fp,r2,r3
 8022354:	81000007 	ldb	r4,0(r16)
 8022358:	00800c04 	movi	r2,48
 802235c:	20805e26 	beq	r4,r2,80224d8 <___vfprintf_internal_r+0x2150>
 8022360:	d8c02617 	ldw	r3,152(sp)
 8022364:	e0f9883a 	add	fp,fp,r3
 8022368:	003e0a06 	br	8021b94 <__flash_rwdata_start+0xffff2078>
 802236c:	00c00b44 	movi	r3,45
 8022370:	24e0003c 	xorhi	r19,r4,32768
 8022374:	d8c02905 	stb	r3,164(sp)
 8022378:	003de906 	br	8021b20 <__flash_rwdata_start+0xffff2004>
 802237c:	d8c03217 	ldw	r3,200(sp)
 8022380:	00c07a0e 	bge	zero,r3,802256c <___vfprintf_internal_r+0x21e4>
 8022384:	00800044 	movi	r2,1
 8022388:	d9003317 	ldw	r4,204(sp)
 802238c:	1105883a 	add	r2,r2,r4
 8022390:	d8802b15 	stw	r2,172(sp)
 8022394:	10004e16 	blt	r2,zero,80224d0 <___vfprintf_internal_r+0x2148>
 8022398:	044019c4 	movi	r17,103
 802239c:	003e2106 	br	8021c24 <__flash_rwdata_start+0xffff2108>
 80223a0:	d9002a17 	ldw	r4,168(sp)
 80223a4:	d8802104 	addi	r2,sp,132
 80223a8:	d8800315 	stw	r2,12(sp)
 80223ac:	d9000015 	stw	r4,0(sp)
 80223b0:	d8802504 	addi	r2,sp,148
 80223b4:	d9403617 	ldw	r5,216(sp)
 80223b8:	d9002d17 	ldw	r4,180(sp)
 80223bc:	d8800215 	stw	r2,8(sp)
 80223c0:	d8802604 	addi	r2,sp,152
 80223c4:	d8800115 	stw	r2,4(sp)
 80223c8:	01c000c4 	movi	r7,3
 80223cc:	980d883a 	mov	r6,r19
 80223d0:	da003d15 	stw	r8,244(sp)
 80223d4:	8022ab80 	call	8022ab8 <_dtoa_r>
 80223d8:	d8c02a17 	ldw	r3,168(sp)
 80223dc:	da003d17 	ldw	r8,244(sp)
 80223e0:	1021883a 	mov	r16,r2
 80223e4:	00801184 	movi	r2,70
 80223e8:	80f9883a 	add	fp,r16,r3
 80223ec:	88bfd926 	beq	r17,r2,8022354 <__flash_rwdata_start+0xffff2838>
 80223f0:	003de806 	br	8021b94 <__flash_rwdata_start+0xffff2078>
 80223f4:	d9002a17 	ldw	r4,168(sp)
 80223f8:	00c04d0e 	bge	zero,r3,8022530 <___vfprintf_internal_r+0x21a8>
 80223fc:	2000441e 	bne	r4,zero,8022510 <___vfprintf_internal_r+0x2188>
 8022400:	9480004c 	andi	r18,r18,1
 8022404:	9000421e 	bne	r18,zero,8022510 <___vfprintf_internal_r+0x2188>
 8022408:	1805883a 	mov	r2,r3
 802240c:	18006f16 	blt	r3,zero,80225cc <___vfprintf_internal_r+0x2244>
 8022410:	d8c03217 	ldw	r3,200(sp)
 8022414:	d8c02b15 	stw	r3,172(sp)
 8022418:	003e0206 	br	8021c24 <__flash_rwdata_start+0xffff2108>
 802241c:	df0022c4 	addi	fp,sp,139
 8022420:	dc002a15 	stw	r16,168(sp)
 8022424:	4027883a 	mov	r19,r8
 8022428:	e021883a 	mov	r16,fp
 802242c:	b009883a 	mov	r4,r22
 8022430:	01400284 	movi	r5,10
 8022434:	802a78c0 	call	802a78c <__modsi3>
 8022438:	10800c04 	addi	r2,r2,48
 802243c:	843fffc4 	addi	r16,r16,-1
 8022440:	b009883a 	mov	r4,r22
 8022444:	01400284 	movi	r5,10
 8022448:	80800005 	stb	r2,0(r16)
 802244c:	802a7080 	call	802a708 <__divsi3>
 8022450:	102d883a 	mov	r22,r2
 8022454:	00800244 	movi	r2,9
 8022458:	15bff416 	blt	r2,r22,802242c <__flash_rwdata_start+0xffff2910>
 802245c:	9811883a 	mov	r8,r19
 8022460:	b0800c04 	addi	r2,r22,48
 8022464:	8027883a 	mov	r19,r16
 8022468:	997fffc4 	addi	r5,r19,-1
 802246c:	98bfffc5 	stb	r2,-1(r19)
 8022470:	dc002a17 	ldw	r16,168(sp)
 8022474:	2f006d2e 	bgeu	r5,fp,802262c <___vfprintf_internal_r+0x22a4>
 8022478:	d9c02384 	addi	r7,sp,142
 802247c:	3ccfc83a 	sub	r7,r7,r19
 8022480:	d9002344 	addi	r4,sp,141
 8022484:	e1cf883a 	add	r7,fp,r7
 8022488:	00000106 	br	8022490 <___vfprintf_internal_r+0x2108>
 802248c:	28800003 	ldbu	r2,0(r5)
 8022490:	20800005 	stb	r2,0(r4)
 8022494:	21000044 	addi	r4,r4,1
 8022498:	29400044 	addi	r5,r5,1
 802249c:	393ffb1e 	bne	r7,r4,802248c <__flash_rwdata_start+0xffff2970>
 80224a0:	d8802304 	addi	r2,sp,140
 80224a4:	14c5c83a 	sub	r2,r2,r19
 80224a8:	d8c02344 	addi	r3,sp,141
 80224ac:	1885883a 	add	r2,r3,r2
 80224b0:	003f7006 	br	8022274 <__flash_rwdata_start+0xffff2758>
 80224b4:	0005883a 	mov	r2,zero
 80224b8:	003f0f06 	br	80220f8 <__flash_rwdata_start+0xffff25dc>
 80224bc:	d8c03217 	ldw	r3,200(sp)
 80224c0:	18c00044 	addi	r3,r3,1
 80224c4:	d8c02b15 	stw	r3,172(sp)
 80224c8:	1805883a 	mov	r2,r3
 80224cc:	183fb20e 	bge	r3,zero,8022398 <__flash_rwdata_start+0xffff287c>
 80224d0:	0005883a 	mov	r2,zero
 80224d4:	003fb006 	br	8022398 <__flash_rwdata_start+0xffff287c>
 80224d8:	d9003617 	ldw	r4,216(sp)
 80224dc:	000d883a 	mov	r6,zero
 80224e0:	000f883a 	mov	r7,zero
 80224e4:	980b883a 	mov	r5,r19
 80224e8:	d8c03c15 	stw	r3,240(sp)
 80224ec:	da003d15 	stw	r8,244(sp)
 80224f0:	802bb600 	call	802bb60 <__eqdf2>
 80224f4:	d8c03c17 	ldw	r3,240(sp)
 80224f8:	da003d17 	ldw	r8,244(sp)
 80224fc:	103f9826 	beq	r2,zero,8022360 <__flash_rwdata_start+0xffff2844>
 8022500:	00800044 	movi	r2,1
 8022504:	10c7c83a 	sub	r3,r2,r3
 8022508:	d8c02615 	stw	r3,152(sp)
 802250c:	003f9506 	br	8022364 <__flash_rwdata_start+0xffff2848>
 8022510:	d9002a17 	ldw	r4,168(sp)
 8022514:	d8c03217 	ldw	r3,200(sp)
 8022518:	20800044 	addi	r2,r4,1
 802251c:	1885883a 	add	r2,r3,r2
 8022520:	d8802b15 	stw	r2,172(sp)
 8022524:	103dbf0e 	bge	r2,zero,8021c24 <__flash_rwdata_start+0xffff2108>
 8022528:	0005883a 	mov	r2,zero
 802252c:	003dbd06 	br	8021c24 <__flash_rwdata_start+0xffff2108>
 8022530:	2000201e 	bne	r4,zero,80225b4 <___vfprintf_internal_r+0x222c>
 8022534:	9480004c 	andi	r18,r18,1
 8022538:	90001e1e 	bne	r18,zero,80225b4 <___vfprintf_internal_r+0x222c>
 802253c:	00800044 	movi	r2,1
 8022540:	d8802b15 	stw	r2,172(sp)
 8022544:	003db706 	br	8021c24 <__flash_rwdata_start+0xffff2108>
 8022548:	00800b44 	movi	r2,45
 802254c:	05adc83a 	sub	r22,zero,r22
 8022550:	d8802305 	stb	r2,140(sp)
 8022554:	003f3f06 	br	8022254 <__flash_rwdata_start+0xffff2738>
 8022558:	0005883a 	mov	r2,zero
 802255c:	003f5206 	br	80222a8 <__flash_rwdata_start+0xffff278c>
 8022560:	90a4703a 	and	r18,r18,r2
 8022564:	903f4e26 	beq	r18,zero,80222a0 <__flash_rwdata_start+0xffff2784>
 8022568:	003f4a06 	br	8022294 <__flash_rwdata_start+0xffff2778>
 802256c:	00800084 	movi	r2,2
 8022570:	10c5c83a 	sub	r2,r2,r3
 8022574:	003f8406 	br	8022388 <__flash_rwdata_start+0xffff286c>
 8022578:	d9402e17 	ldw	r5,184(sp)
 802257c:	d9002e17 	ldw	r4,184(sp)
 8022580:	ac400043 	ldbu	r17,1(r21)
 8022584:	29400017 	ldw	r5,0(r5)
 8022588:	20800104 	addi	r2,r4,4
 802258c:	d8802e15 	stw	r2,184(sp)
 8022590:	d9402a15 	stw	r5,168(sp)
 8022594:	182b883a 	mov	r21,r3
 8022598:	283e7b0e 	bge	r5,zero,8021f88 <__flash_rwdata_start+0xffff246c>
 802259c:	8c403fcc 	andi	r17,r17,255
 80225a0:	017fffc4 	movi	r5,-1
 80225a4:	8c40201c 	xori	r17,r17,128
 80225a8:	d9402a15 	stw	r5,168(sp)
 80225ac:	8c7fe004 	addi	r17,r17,-128
 80225b0:	0037d706 	br	8020510 <__flash_rwdata_start+0xffff09f4>
 80225b4:	d8c02a17 	ldw	r3,168(sp)
 80225b8:	18c00084 	addi	r3,r3,2
 80225bc:	d8c02b15 	stw	r3,172(sp)
 80225c0:	1805883a 	mov	r2,r3
 80225c4:	183d970e 	bge	r3,zero,8021c24 <__flash_rwdata_start+0xffff2108>
 80225c8:	003fd706 	br	8022528 <__flash_rwdata_start+0xffff2a0c>
 80225cc:	0005883a 	mov	r2,zero
 80225d0:	003f8f06 	br	8022410 <__flash_rwdata_start+0xffff28f4>
 80225d4:	9080004c 	andi	r2,r18,1
 80225d8:	103f821e 	bne	r2,zero,80223e4 <__flash_rwdata_start+0xffff28c8>
 80225dc:	d8802117 	ldw	r2,132(sp)
 80225e0:	1405c83a 	sub	r2,r2,r16
 80225e4:	d8803315 	stw	r2,204(sp)
 80225e8:	b47ef426 	beq	r22,r17,80221bc <__flash_rwdata_start+0xffff26a0>
 80225ec:	dd802617 	ldw	r22,152(sp)
 80225f0:	003f1206 	br	802223c <__flash_rwdata_start+0xffff2720>
 80225f4:	d8c02b03 	ldbu	r3,172(sp)
 80225f8:	d8c02785 	stb	r3,158(sp)
 80225fc:	0038df06 	br	802097c <__flash_rwdata_start+0xffff0e60>
 8022600:	d8c02b03 	ldbu	r3,172(sp)
 8022604:	d8c02785 	stb	r3,158(sp)
 8022608:	0038aa06 	br	80208b4 <__flash_rwdata_start+0xffff0d98>
 802260c:	d8c02b03 	ldbu	r3,172(sp)
 8022610:	d8c02785 	stb	r3,158(sp)
 8022614:	003a4306 	br	8020f24 <__flash_rwdata_start+0xffff1408>
 8022618:	d8c02b03 	ldbu	r3,172(sp)
 802261c:	d8c02785 	stb	r3,158(sp)
 8022620:	003af506 	br	80211f8 <__flash_rwdata_start+0xffff16dc>
 8022624:	0005883a 	mov	r2,zero
 8022628:	003d7b06 	br	8021c18 <__flash_rwdata_start+0xffff20fc>
 802262c:	d8802344 	addi	r2,sp,141
 8022630:	003f1006 	br	8022274 <__flash_rwdata_start+0xffff2758>
 8022634:	d8c02b03 	ldbu	r3,172(sp)
 8022638:	d8c02785 	stb	r3,158(sp)
 802263c:	0038fd06 	br	8020a34 <__flash_rwdata_start+0xffff0f18>
 8022640:	d8c02b03 	ldbu	r3,172(sp)
 8022644:	d8c02785 	stb	r3,158(sp)
 8022648:	003a9706 	br	80210a8 <__flash_rwdata_start+0xffff158c>
 802264c:	d8c02b03 	ldbu	r3,172(sp)
 8022650:	d8c02785 	stb	r3,158(sp)
 8022654:	003a1806 	br	8020eb8 <__flash_rwdata_start+0xffff139c>
 8022658:	d8c02b03 	ldbu	r3,172(sp)
 802265c:	d8c02785 	stb	r3,158(sp)
 8022660:	003abe06 	br	802115c <__flash_rwdata_start+0xffff1640>

08022664 <__vfprintf_internal>:
 8022664:	00800034 	movhi	r2,0
 8022668:	10876c04 	addi	r2,r2,7600
 802266c:	300f883a 	mov	r7,r6
 8022670:	280d883a 	mov	r6,r5
 8022674:	200b883a 	mov	r5,r4
 8022678:	11000017 	ldw	r4,0(r2)
 802267c:	80203881 	jmpi	8020388 <___vfprintf_internal_r>

08022680 <__sbprintf>:
 8022680:	2880030b 	ldhu	r2,12(r5)
 8022684:	2ac01917 	ldw	r11,100(r5)
 8022688:	2a80038b 	ldhu	r10,14(r5)
 802268c:	2a400717 	ldw	r9,28(r5)
 8022690:	2a000917 	ldw	r8,36(r5)
 8022694:	defee204 	addi	sp,sp,-1144
 8022698:	00c10004 	movi	r3,1024
 802269c:	dc011a15 	stw	r16,1128(sp)
 80226a0:	10bfff4c 	andi	r2,r2,65533
 80226a4:	2821883a 	mov	r16,r5
 80226a8:	d8cb883a 	add	r5,sp,r3
 80226ac:	dc811c15 	stw	r18,1136(sp)
 80226b0:	dc411b15 	stw	r17,1132(sp)
 80226b4:	dfc11d15 	stw	ra,1140(sp)
 80226b8:	2025883a 	mov	r18,r4
 80226bc:	d881030d 	sth	r2,1036(sp)
 80226c0:	dac11915 	stw	r11,1124(sp)
 80226c4:	da81038d 	sth	r10,1038(sp)
 80226c8:	da410715 	stw	r9,1052(sp)
 80226cc:	da010915 	stw	r8,1060(sp)
 80226d0:	dec10015 	stw	sp,1024(sp)
 80226d4:	dec10415 	stw	sp,1040(sp)
 80226d8:	d8c10215 	stw	r3,1032(sp)
 80226dc:	d8c10515 	stw	r3,1044(sp)
 80226e0:	d8010615 	stw	zero,1048(sp)
 80226e4:	80203880 	call	8020388 <___vfprintf_internal_r>
 80226e8:	1023883a 	mov	r17,r2
 80226ec:	10000416 	blt	r2,zero,8022700 <__sbprintf+0x80>
 80226f0:	d9410004 	addi	r5,sp,1024
 80226f4:	9009883a 	mov	r4,r18
 80226f8:	802435c0 	call	802435c <_fflush_r>
 80226fc:	10000d1e 	bne	r2,zero,8022734 <__sbprintf+0xb4>
 8022700:	d881030b 	ldhu	r2,1036(sp)
 8022704:	1080100c 	andi	r2,r2,64
 8022708:	10000326 	beq	r2,zero,8022718 <__sbprintf+0x98>
 802270c:	8080030b 	ldhu	r2,12(r16)
 8022710:	10801014 	ori	r2,r2,64
 8022714:	8080030d 	sth	r2,12(r16)
 8022718:	8805883a 	mov	r2,r17
 802271c:	dfc11d17 	ldw	ra,1140(sp)
 8022720:	dc811c17 	ldw	r18,1136(sp)
 8022724:	dc411b17 	ldw	r17,1132(sp)
 8022728:	dc011a17 	ldw	r16,1128(sp)
 802272c:	dec11e04 	addi	sp,sp,1144
 8022730:	f800283a 	ret
 8022734:	047fffc4 	movi	r17,-1
 8022738:	003ff106 	br	8022700 <__flash_rwdata_start+0xffff2be4>

0802273c <__swsetup_r>:
 802273c:	00800034 	movhi	r2,0
 8022740:	defffd04 	addi	sp,sp,-12
 8022744:	10876c04 	addi	r2,r2,7600
 8022748:	dc400115 	stw	r17,4(sp)
 802274c:	2023883a 	mov	r17,r4
 8022750:	11000017 	ldw	r4,0(r2)
 8022754:	dc000015 	stw	r16,0(sp)
 8022758:	dfc00215 	stw	ra,8(sp)
 802275c:	2821883a 	mov	r16,r5
 8022760:	20000226 	beq	r4,zero,802276c <__swsetup_r+0x30>
 8022764:	20800e17 	ldw	r2,56(r4)
 8022768:	10003126 	beq	r2,zero,8022830 <__swsetup_r+0xf4>
 802276c:	8080030b 	ldhu	r2,12(r16)
 8022770:	10c0020c 	andi	r3,r2,8
 8022774:	1009883a 	mov	r4,r2
 8022778:	18000f26 	beq	r3,zero,80227b8 <__swsetup_r+0x7c>
 802277c:	80c00417 	ldw	r3,16(r16)
 8022780:	18001526 	beq	r3,zero,80227d8 <__swsetup_r+0x9c>
 8022784:	1100004c 	andi	r4,r2,1
 8022788:	20001c1e 	bne	r4,zero,80227fc <__swsetup_r+0xc0>
 802278c:	1080008c 	andi	r2,r2,2
 8022790:	1000291e 	bne	r2,zero,8022838 <__swsetup_r+0xfc>
 8022794:	80800517 	ldw	r2,20(r16)
 8022798:	80800215 	stw	r2,8(r16)
 802279c:	18001c26 	beq	r3,zero,8022810 <__swsetup_r+0xd4>
 80227a0:	0005883a 	mov	r2,zero
 80227a4:	dfc00217 	ldw	ra,8(sp)
 80227a8:	dc400117 	ldw	r17,4(sp)
 80227ac:	dc000017 	ldw	r16,0(sp)
 80227b0:	dec00304 	addi	sp,sp,12
 80227b4:	f800283a 	ret
 80227b8:	2080040c 	andi	r2,r4,16
 80227bc:	10002e26 	beq	r2,zero,8022878 <__swsetup_r+0x13c>
 80227c0:	2080010c 	andi	r2,r4,4
 80227c4:	10001e1e 	bne	r2,zero,8022840 <__swsetup_r+0x104>
 80227c8:	80c00417 	ldw	r3,16(r16)
 80227cc:	20800214 	ori	r2,r4,8
 80227d0:	8080030d 	sth	r2,12(r16)
 80227d4:	183feb1e 	bne	r3,zero,8022784 <__flash_rwdata_start+0xffff2c68>
 80227d8:	1100a00c 	andi	r4,r2,640
 80227dc:	01408004 	movi	r5,512
 80227e0:	217fe826 	beq	r4,r5,8022784 <__flash_rwdata_start+0xffff2c68>
 80227e4:	800b883a 	mov	r5,r16
 80227e8:	8809883a 	mov	r4,r17
 80227ec:	8024e300 	call	8024e30 <__smakebuf_r>
 80227f0:	8080030b 	ldhu	r2,12(r16)
 80227f4:	80c00417 	ldw	r3,16(r16)
 80227f8:	003fe206 	br	8022784 <__flash_rwdata_start+0xffff2c68>
 80227fc:	80800517 	ldw	r2,20(r16)
 8022800:	80000215 	stw	zero,8(r16)
 8022804:	0085c83a 	sub	r2,zero,r2
 8022808:	80800615 	stw	r2,24(r16)
 802280c:	183fe41e 	bne	r3,zero,80227a0 <__flash_rwdata_start+0xffff2c84>
 8022810:	80c0030b 	ldhu	r3,12(r16)
 8022814:	0005883a 	mov	r2,zero
 8022818:	1900200c 	andi	r4,r3,128
 802281c:	203fe126 	beq	r4,zero,80227a4 <__flash_rwdata_start+0xffff2c88>
 8022820:	18c01014 	ori	r3,r3,64
 8022824:	80c0030d 	sth	r3,12(r16)
 8022828:	00bfffc4 	movi	r2,-1
 802282c:	003fdd06 	br	80227a4 <__flash_rwdata_start+0xffff2c88>
 8022830:	80247480 	call	8024748 <__sinit>
 8022834:	003fcd06 	br	802276c <__flash_rwdata_start+0xffff2c50>
 8022838:	0005883a 	mov	r2,zero
 802283c:	003fd606 	br	8022798 <__flash_rwdata_start+0xffff2c7c>
 8022840:	81400c17 	ldw	r5,48(r16)
 8022844:	28000626 	beq	r5,zero,8022860 <__swsetup_r+0x124>
 8022848:	80801004 	addi	r2,r16,64
 802284c:	28800326 	beq	r5,r2,802285c <__swsetup_r+0x120>
 8022850:	8809883a 	mov	r4,r17
 8022854:	80248bc0 	call	80248bc <_free_r>
 8022858:	8100030b 	ldhu	r4,12(r16)
 802285c:	80000c15 	stw	zero,48(r16)
 8022860:	80c00417 	ldw	r3,16(r16)
 8022864:	00bff6c4 	movi	r2,-37
 8022868:	1108703a 	and	r4,r2,r4
 802286c:	80000115 	stw	zero,4(r16)
 8022870:	80c00015 	stw	r3,0(r16)
 8022874:	003fd506 	br	80227cc <__flash_rwdata_start+0xffff2cb0>
 8022878:	00800244 	movi	r2,9
 802287c:	88800015 	stw	r2,0(r17)
 8022880:	20801014 	ori	r2,r4,64
 8022884:	8080030d 	sth	r2,12(r16)
 8022888:	00bfffc4 	movi	r2,-1
 802288c:	003fc506 	br	80227a4 <__flash_rwdata_start+0xffff2c88>

08022890 <quorem>:
 8022890:	defff204 	addi	sp,sp,-56
 8022894:	ddc00b15 	stw	r23,44(sp)
 8022898:	20800417 	ldw	r2,16(r4)
 802289c:	2dc00417 	ldw	r23,16(r5)
 80228a0:	dfc00d15 	stw	ra,52(sp)
 80228a4:	df000c15 	stw	fp,48(sp)
 80228a8:	dd800a15 	stw	r22,40(sp)
 80228ac:	dd400915 	stw	r21,36(sp)
 80228b0:	dd000815 	stw	r20,32(sp)
 80228b4:	dcc00715 	stw	r19,28(sp)
 80228b8:	dc800615 	stw	r18,24(sp)
 80228bc:	dc400515 	stw	r17,20(sp)
 80228c0:	dc000415 	stw	r16,16(sp)
 80228c4:	15c07a16 	blt	r2,r23,8022ab0 <quorem+0x220>
 80228c8:	bdffffc4 	addi	r23,r23,-1
 80228cc:	bde9883a 	add	r20,r23,r23
 80228d0:	28c00504 	addi	r3,r5,20
 80228d4:	a529883a 	add	r20,r20,r20
 80228d8:	1d39883a 	add	fp,r3,r20
 80228dc:	24c00504 	addi	r19,r4,20
 80228e0:	d9400215 	stw	r5,8(sp)
 80228e4:	9d29883a 	add	r20,r19,r20
 80228e8:	e1400017 	ldw	r5,0(fp)
 80228ec:	d9000015 	stw	r4,0(sp)
 80228f0:	a1000017 	ldw	r4,0(r20)
 80228f4:	29400044 	addi	r5,r5,1
 80228f8:	d8c00115 	stw	r3,4(sp)
 80228fc:	dd000315 	stw	r20,12(sp)
 8022900:	802a8000 	call	802a800 <__udivsi3>
 8022904:	1025883a 	mov	r18,r2
 8022908:	10003026 	beq	r2,zero,80229cc <quorem+0x13c>
 802290c:	dc400117 	ldw	r17,4(sp)
 8022910:	9829883a 	mov	r20,r19
 8022914:	002d883a 	mov	r22,zero
 8022918:	0021883a 	mov	r16,zero
 802291c:	8d400017 	ldw	r21,0(r17)
 8022920:	900b883a 	mov	r5,r18
 8022924:	8c400104 	addi	r17,r17,4
 8022928:	a93fffcc 	andi	r4,r21,65535
 802292c:	802a8bc0 	call	802a8bc <__mulsi3>
 8022930:	a808d43a 	srli	r4,r21,16
 8022934:	900b883a 	mov	r5,r18
 8022938:	15ad883a 	add	r22,r2,r22
 802293c:	802a8bc0 	call	802a8bc <__mulsi3>
 8022940:	a1000017 	ldw	r4,0(r20)
 8022944:	b00cd43a 	srli	r6,r22,16
 8022948:	b0ffffcc 	andi	r3,r22,65535
 802294c:	217fffcc 	andi	r5,r4,65535
 8022950:	2c21883a 	add	r16,r5,r16
 8022954:	80c7c83a 	sub	r3,r16,r3
 8022958:	2008d43a 	srli	r4,r4,16
 802295c:	1185883a 	add	r2,r2,r6
 8022960:	1821d43a 	srai	r16,r3,16
 8022964:	117fffcc 	andi	r5,r2,65535
 8022968:	2149c83a 	sub	r4,r4,r5
 802296c:	2421883a 	add	r16,r4,r16
 8022970:	8008943a 	slli	r4,r16,16
 8022974:	18ffffcc 	andi	r3,r3,65535
 8022978:	102cd43a 	srli	r22,r2,16
 802297c:	20c8b03a 	or	r4,r4,r3
 8022980:	a1000015 	stw	r4,0(r20)
 8022984:	8021d43a 	srai	r16,r16,16
 8022988:	a5000104 	addi	r20,r20,4
 802298c:	e47fe32e 	bgeu	fp,r17,802291c <__flash_rwdata_start+0xffff2e00>
 8022990:	d8c00317 	ldw	r3,12(sp)
 8022994:	18800017 	ldw	r2,0(r3)
 8022998:	10000c1e 	bne	r2,zero,80229cc <quorem+0x13c>
 802299c:	18bfff04 	addi	r2,r3,-4
 80229a0:	9880082e 	bgeu	r19,r2,80229c4 <quorem+0x134>
 80229a4:	18ffff17 	ldw	r3,-4(r3)
 80229a8:	18000326 	beq	r3,zero,80229b8 <quorem+0x128>
 80229ac:	00000506 	br	80229c4 <quorem+0x134>
 80229b0:	10c00017 	ldw	r3,0(r2)
 80229b4:	1800031e 	bne	r3,zero,80229c4 <quorem+0x134>
 80229b8:	10bfff04 	addi	r2,r2,-4
 80229bc:	bdffffc4 	addi	r23,r23,-1
 80229c0:	98bffb36 	bltu	r19,r2,80229b0 <__flash_rwdata_start+0xffff2e94>
 80229c4:	d8c00017 	ldw	r3,0(sp)
 80229c8:	1dc00415 	stw	r23,16(r3)
 80229cc:	d9400217 	ldw	r5,8(sp)
 80229d0:	d9000017 	ldw	r4,0(sp)
 80229d4:	80264d00 	call	80264d0 <__mcmp>
 80229d8:	10002816 	blt	r2,zero,8022a7c <quorem+0x1ec>
 80229dc:	dc400117 	ldw	r17,4(sp)
 80229e0:	94800044 	addi	r18,r18,1
 80229e4:	980d883a 	mov	r6,r19
 80229e8:	0007883a 	mov	r3,zero
 80229ec:	31000017 	ldw	r4,0(r6)
 80229f0:	89400017 	ldw	r5,0(r17)
 80229f4:	31800104 	addi	r6,r6,4
 80229f8:	20bfffcc 	andi	r2,r4,65535
 80229fc:	10c7883a 	add	r3,r2,r3
 8022a00:	28bfffcc 	andi	r2,r5,65535
 8022a04:	1885c83a 	sub	r2,r3,r2
 8022a08:	280ad43a 	srli	r5,r5,16
 8022a0c:	2008d43a 	srli	r4,r4,16
 8022a10:	1007d43a 	srai	r3,r2,16
 8022a14:	10bfffcc 	andi	r2,r2,65535
 8022a18:	2149c83a 	sub	r4,r4,r5
 8022a1c:	20c9883a 	add	r4,r4,r3
 8022a20:	200a943a 	slli	r5,r4,16
 8022a24:	8c400104 	addi	r17,r17,4
 8022a28:	2007d43a 	srai	r3,r4,16
 8022a2c:	2884b03a 	or	r2,r5,r2
 8022a30:	30bfff15 	stw	r2,-4(r6)
 8022a34:	e47fed2e 	bgeu	fp,r17,80229ec <__flash_rwdata_start+0xffff2ed0>
 8022a38:	bdc5883a 	add	r2,r23,r23
 8022a3c:	1085883a 	add	r2,r2,r2
 8022a40:	9887883a 	add	r3,r19,r2
 8022a44:	18800017 	ldw	r2,0(r3)
 8022a48:	10000c1e 	bne	r2,zero,8022a7c <quorem+0x1ec>
 8022a4c:	18bfff04 	addi	r2,r3,-4
 8022a50:	9880082e 	bgeu	r19,r2,8022a74 <quorem+0x1e4>
 8022a54:	18ffff17 	ldw	r3,-4(r3)
 8022a58:	18000326 	beq	r3,zero,8022a68 <quorem+0x1d8>
 8022a5c:	00000506 	br	8022a74 <quorem+0x1e4>
 8022a60:	10c00017 	ldw	r3,0(r2)
 8022a64:	1800031e 	bne	r3,zero,8022a74 <quorem+0x1e4>
 8022a68:	10bfff04 	addi	r2,r2,-4
 8022a6c:	bdffffc4 	addi	r23,r23,-1
 8022a70:	98bffb36 	bltu	r19,r2,8022a60 <__flash_rwdata_start+0xffff2f44>
 8022a74:	d8c00017 	ldw	r3,0(sp)
 8022a78:	1dc00415 	stw	r23,16(r3)
 8022a7c:	9005883a 	mov	r2,r18
 8022a80:	dfc00d17 	ldw	ra,52(sp)
 8022a84:	df000c17 	ldw	fp,48(sp)
 8022a88:	ddc00b17 	ldw	r23,44(sp)
 8022a8c:	dd800a17 	ldw	r22,40(sp)
 8022a90:	dd400917 	ldw	r21,36(sp)
 8022a94:	dd000817 	ldw	r20,32(sp)
 8022a98:	dcc00717 	ldw	r19,28(sp)
 8022a9c:	dc800617 	ldw	r18,24(sp)
 8022aa0:	dc400517 	ldw	r17,20(sp)
 8022aa4:	dc000417 	ldw	r16,16(sp)
 8022aa8:	dec00e04 	addi	sp,sp,56
 8022aac:	f800283a 	ret
 8022ab0:	0005883a 	mov	r2,zero
 8022ab4:	003ff206 	br	8022a80 <__flash_rwdata_start+0xffff2f64>

08022ab8 <_dtoa_r>:
 8022ab8:	20801017 	ldw	r2,64(r4)
 8022abc:	deffde04 	addi	sp,sp,-136
 8022ac0:	df002015 	stw	fp,128(sp)
 8022ac4:	dcc01b15 	stw	r19,108(sp)
 8022ac8:	dc801a15 	stw	r18,104(sp)
 8022acc:	dc401915 	stw	r17,100(sp)
 8022ad0:	dc001815 	stw	r16,96(sp)
 8022ad4:	dfc02115 	stw	ra,132(sp)
 8022ad8:	ddc01f15 	stw	r23,124(sp)
 8022adc:	dd801e15 	stw	r22,120(sp)
 8022ae0:	dd401d15 	stw	r21,116(sp)
 8022ae4:	dd001c15 	stw	r20,112(sp)
 8022ae8:	d9c00315 	stw	r7,12(sp)
 8022aec:	2039883a 	mov	fp,r4
 8022af0:	3023883a 	mov	r17,r6
 8022af4:	2825883a 	mov	r18,r5
 8022af8:	dc002417 	ldw	r16,144(sp)
 8022afc:	3027883a 	mov	r19,r6
 8022b00:	10000826 	beq	r2,zero,8022b24 <_dtoa_r+0x6c>
 8022b04:	21801117 	ldw	r6,68(r4)
 8022b08:	00c00044 	movi	r3,1
 8022b0c:	100b883a 	mov	r5,r2
 8022b10:	1986983a 	sll	r3,r3,r6
 8022b14:	11800115 	stw	r6,4(r2)
 8022b18:	10c00215 	stw	r3,8(r2)
 8022b1c:	8025bf40 	call	8025bf4 <_Bfree>
 8022b20:	e0001015 	stw	zero,64(fp)
 8022b24:	88002e16 	blt	r17,zero,8022be0 <_dtoa_r+0x128>
 8022b28:	80000015 	stw	zero,0(r16)
 8022b2c:	889ffc2c 	andhi	r2,r17,32752
 8022b30:	00dffc34 	movhi	r3,32752
 8022b34:	10c01c26 	beq	r2,r3,8022ba8 <_dtoa_r+0xf0>
 8022b38:	000d883a 	mov	r6,zero
 8022b3c:	000f883a 	mov	r7,zero
 8022b40:	9009883a 	mov	r4,r18
 8022b44:	980b883a 	mov	r5,r19
 8022b48:	802bb600 	call	802bb60 <__eqdf2>
 8022b4c:	10002b1e 	bne	r2,zero,8022bfc <_dtoa_r+0x144>
 8022b50:	d9c02317 	ldw	r7,140(sp)
 8022b54:	00800044 	movi	r2,1
 8022b58:	38800015 	stw	r2,0(r7)
 8022b5c:	d8802517 	ldw	r2,148(sp)
 8022b60:	10019e26 	beq	r2,zero,80231dc <_dtoa_r+0x724>
 8022b64:	d8c02517 	ldw	r3,148(sp)
 8022b68:	00800034 	movhi	r2,0
 8022b6c:	10801344 	addi	r2,r2,77
 8022b70:	18800015 	stw	r2,0(r3)
 8022b74:	10bfffc4 	addi	r2,r2,-1
 8022b78:	dfc02117 	ldw	ra,132(sp)
 8022b7c:	df002017 	ldw	fp,128(sp)
 8022b80:	ddc01f17 	ldw	r23,124(sp)
 8022b84:	dd801e17 	ldw	r22,120(sp)
 8022b88:	dd401d17 	ldw	r21,116(sp)
 8022b8c:	dd001c17 	ldw	r20,112(sp)
 8022b90:	dcc01b17 	ldw	r19,108(sp)
 8022b94:	dc801a17 	ldw	r18,104(sp)
 8022b98:	dc401917 	ldw	r17,100(sp)
 8022b9c:	dc001817 	ldw	r16,96(sp)
 8022ba0:	dec02204 	addi	sp,sp,136
 8022ba4:	f800283a 	ret
 8022ba8:	d8c02317 	ldw	r3,140(sp)
 8022bac:	0089c3c4 	movi	r2,9999
 8022bb0:	18800015 	stw	r2,0(r3)
 8022bb4:	90017726 	beq	r18,zero,8023194 <_dtoa_r+0x6dc>
 8022bb8:	00800034 	movhi	r2,0
 8022bbc:	10801f04 	addi	r2,r2,124
 8022bc0:	d9002517 	ldw	r4,148(sp)
 8022bc4:	203fec26 	beq	r4,zero,8022b78 <__flash_rwdata_start+0xffff305c>
 8022bc8:	10c000c7 	ldb	r3,3(r2)
 8022bcc:	1801781e 	bne	r3,zero,80231b0 <_dtoa_r+0x6f8>
 8022bd0:	10c000c4 	addi	r3,r2,3
 8022bd4:	d9802517 	ldw	r6,148(sp)
 8022bd8:	30c00015 	stw	r3,0(r6)
 8022bdc:	003fe606 	br	8022b78 <__flash_rwdata_start+0xffff305c>
 8022be0:	04e00034 	movhi	r19,32768
 8022be4:	9cffffc4 	addi	r19,r19,-1
 8022be8:	00800044 	movi	r2,1
 8022bec:	8ce6703a 	and	r19,r17,r19
 8022bf0:	80800015 	stw	r2,0(r16)
 8022bf4:	9823883a 	mov	r17,r19
 8022bf8:	003fcc06 	br	8022b2c <__flash_rwdata_start+0xffff3010>
 8022bfc:	d8800204 	addi	r2,sp,8
 8022c00:	d8800015 	stw	r2,0(sp)
 8022c04:	d9c00104 	addi	r7,sp,4
 8022c08:	900b883a 	mov	r5,r18
 8022c0c:	980d883a 	mov	r6,r19
 8022c10:	e009883a 	mov	r4,fp
 8022c14:	8820d53a 	srli	r16,r17,20
 8022c18:	802689c0 	call	802689c <__d2b>
 8022c1c:	d8800915 	stw	r2,36(sp)
 8022c20:	8001651e 	bne	r16,zero,80231b8 <_dtoa_r+0x700>
 8022c24:	dd800217 	ldw	r22,8(sp)
 8022c28:	dc000117 	ldw	r16,4(sp)
 8022c2c:	00800804 	movi	r2,32
 8022c30:	b421883a 	add	r16,r22,r16
 8022c34:	80c10c84 	addi	r3,r16,1074
 8022c38:	10c2d10e 	bge	r2,r3,8023780 <_dtoa_r+0xcc8>
 8022c3c:	00801004 	movi	r2,64
 8022c40:	81010484 	addi	r4,r16,1042
 8022c44:	10c7c83a 	sub	r3,r2,r3
 8022c48:	9108d83a 	srl	r4,r18,r4
 8022c4c:	88e2983a 	sll	r17,r17,r3
 8022c50:	2448b03a 	or	r4,r4,r17
 8022c54:	802d07c0 	call	802d07c <__floatunsidf>
 8022c58:	017f8434 	movhi	r5,65040
 8022c5c:	01800044 	movi	r6,1
 8022c60:	1009883a 	mov	r4,r2
 8022c64:	194b883a 	add	r5,r3,r5
 8022c68:	843fffc4 	addi	r16,r16,-1
 8022c6c:	d9801115 	stw	r6,68(sp)
 8022c70:	000d883a 	mov	r6,zero
 8022c74:	01cffe34 	movhi	r7,16376
 8022c78:	802c6240 	call	802c624 <__subdf3>
 8022c7c:	0198dbf4 	movhi	r6,25455
 8022c80:	01cff4f4 	movhi	r7,16339
 8022c84:	3190d844 	addi	r6,r6,17249
 8022c88:	39e1e9c4 	addi	r7,r7,-30809
 8022c8c:	1009883a 	mov	r4,r2
 8022c90:	180b883a 	mov	r5,r3
 8022c94:	802bdb80 	call	802bdb8 <__muldf3>
 8022c98:	01a2d874 	movhi	r6,35681
 8022c9c:	01cff1f4 	movhi	r7,16327
 8022ca0:	31b22cc4 	addi	r6,r6,-14157
 8022ca4:	39e28a04 	addi	r7,r7,-30168
 8022ca8:	180b883a 	mov	r5,r3
 8022cac:	1009883a 	mov	r4,r2
 8022cb0:	802a8e40 	call	802a8e4 <__adddf3>
 8022cb4:	8009883a 	mov	r4,r16
 8022cb8:	1029883a 	mov	r20,r2
 8022cbc:	1823883a 	mov	r17,r3
 8022cc0:	802cfa00 	call	802cfa0 <__floatsidf>
 8022cc4:	019427f4 	movhi	r6,20639
 8022cc8:	01cff4f4 	movhi	r7,16339
 8022ccc:	319e7ec4 	addi	r6,r6,31227
 8022cd0:	39d104c4 	addi	r7,r7,17427
 8022cd4:	1009883a 	mov	r4,r2
 8022cd8:	180b883a 	mov	r5,r3
 8022cdc:	802bdb80 	call	802bdb8 <__muldf3>
 8022ce0:	100d883a 	mov	r6,r2
 8022ce4:	180f883a 	mov	r7,r3
 8022ce8:	a009883a 	mov	r4,r20
 8022cec:	880b883a 	mov	r5,r17
 8022cf0:	802a8e40 	call	802a8e4 <__adddf3>
 8022cf4:	1009883a 	mov	r4,r2
 8022cf8:	180b883a 	mov	r5,r3
 8022cfc:	1029883a 	mov	r20,r2
 8022d00:	1823883a 	mov	r17,r3
 8022d04:	802cf200 	call	802cf20 <__fixdfsi>
 8022d08:	000d883a 	mov	r6,zero
 8022d0c:	000f883a 	mov	r7,zero
 8022d10:	a009883a 	mov	r4,r20
 8022d14:	880b883a 	mov	r5,r17
 8022d18:	d8800515 	stw	r2,20(sp)
 8022d1c:	802bcc40 	call	802bcc4 <__ledf2>
 8022d20:	10028716 	blt	r2,zero,8023740 <_dtoa_r+0xc88>
 8022d24:	d8c00517 	ldw	r3,20(sp)
 8022d28:	00800584 	movi	r2,22
 8022d2c:	10c27536 	bltu	r2,r3,8023704 <_dtoa_r+0xc4c>
 8022d30:	180490fa 	slli	r2,r3,3
 8022d34:	00c00034 	movhi	r3,0
 8022d38:	18c03b04 	addi	r3,r3,236
 8022d3c:	1885883a 	add	r2,r3,r2
 8022d40:	11000017 	ldw	r4,0(r2)
 8022d44:	11400117 	ldw	r5,4(r2)
 8022d48:	900d883a 	mov	r6,r18
 8022d4c:	980f883a 	mov	r7,r19
 8022d50:	802bbe80 	call	802bbe8 <__gedf2>
 8022d54:	00828d0e 	bge	zero,r2,802378c <_dtoa_r+0xcd4>
 8022d58:	d9000517 	ldw	r4,20(sp)
 8022d5c:	d8000e15 	stw	zero,56(sp)
 8022d60:	213fffc4 	addi	r4,r4,-1
 8022d64:	d9000515 	stw	r4,20(sp)
 8022d68:	b42dc83a 	sub	r22,r22,r16
 8022d6c:	b5bfffc4 	addi	r22,r22,-1
 8022d70:	b0026f16 	blt	r22,zero,8023730 <_dtoa_r+0xc78>
 8022d74:	d8000815 	stw	zero,32(sp)
 8022d78:	d9c00517 	ldw	r7,20(sp)
 8022d7c:	38026416 	blt	r7,zero,8023710 <_dtoa_r+0xc58>
 8022d80:	b1ed883a 	add	r22,r22,r7
 8022d84:	d9c00d15 	stw	r7,52(sp)
 8022d88:	d8000a15 	stw	zero,40(sp)
 8022d8c:	d9800317 	ldw	r6,12(sp)
 8022d90:	00800244 	movi	r2,9
 8022d94:	11811436 	bltu	r2,r6,80231e8 <_dtoa_r+0x730>
 8022d98:	00800144 	movi	r2,5
 8022d9c:	1184e10e 	bge	r2,r6,8024124 <_dtoa_r+0x166c>
 8022da0:	31bfff04 	addi	r6,r6,-4
 8022da4:	d9800315 	stw	r6,12(sp)
 8022da8:	0023883a 	mov	r17,zero
 8022dac:	d9800317 	ldw	r6,12(sp)
 8022db0:	008000c4 	movi	r2,3
 8022db4:	30836726 	beq	r6,r2,8023b54 <_dtoa_r+0x109c>
 8022db8:	1183410e 	bge	r2,r6,8023ac0 <_dtoa_r+0x1008>
 8022dbc:	d9c00317 	ldw	r7,12(sp)
 8022dc0:	00800104 	movi	r2,4
 8022dc4:	38827c26 	beq	r7,r2,80237b8 <_dtoa_r+0xd00>
 8022dc8:	00800144 	movi	r2,5
 8022dcc:	3884c41e 	bne	r7,r2,80240e0 <_dtoa_r+0x1628>
 8022dd0:	00800044 	movi	r2,1
 8022dd4:	d8800b15 	stw	r2,44(sp)
 8022dd8:	d8c00517 	ldw	r3,20(sp)
 8022ddc:	d9002217 	ldw	r4,136(sp)
 8022de0:	1907883a 	add	r3,r3,r4
 8022de4:	19800044 	addi	r6,r3,1
 8022de8:	d8c00c15 	stw	r3,48(sp)
 8022dec:	d9800615 	stw	r6,24(sp)
 8022df0:	0183a40e 	bge	zero,r6,8023c84 <_dtoa_r+0x11cc>
 8022df4:	d9800617 	ldw	r6,24(sp)
 8022df8:	3021883a 	mov	r16,r6
 8022dfc:	e0001115 	stw	zero,68(fp)
 8022e00:	008005c4 	movi	r2,23
 8022e04:	1184c92e 	bgeu	r2,r6,802412c <_dtoa_r+0x1674>
 8022e08:	00c00044 	movi	r3,1
 8022e0c:	00800104 	movi	r2,4
 8022e10:	1085883a 	add	r2,r2,r2
 8022e14:	11000504 	addi	r4,r2,20
 8022e18:	180b883a 	mov	r5,r3
 8022e1c:	18c00044 	addi	r3,r3,1
 8022e20:	313ffb2e 	bgeu	r6,r4,8022e10 <__flash_rwdata_start+0xffff32f4>
 8022e24:	e1401115 	stw	r5,68(fp)
 8022e28:	e009883a 	mov	r4,fp
 8022e2c:	8025b4c0 	call	8025b4c <_Balloc>
 8022e30:	d8800715 	stw	r2,28(sp)
 8022e34:	e0801015 	stw	r2,64(fp)
 8022e38:	00800384 	movi	r2,14
 8022e3c:	1400f736 	bltu	r2,r16,802321c <_dtoa_r+0x764>
 8022e40:	8800f626 	beq	r17,zero,802321c <_dtoa_r+0x764>
 8022e44:	d9c00517 	ldw	r7,20(sp)
 8022e48:	01c39a0e 	bge	zero,r7,8023cb4 <_dtoa_r+0x11fc>
 8022e4c:	388003cc 	andi	r2,r7,15
 8022e50:	100490fa 	slli	r2,r2,3
 8022e54:	382bd13a 	srai	r21,r7,4
 8022e58:	00c00034 	movhi	r3,0
 8022e5c:	18c03b04 	addi	r3,r3,236
 8022e60:	1885883a 	add	r2,r3,r2
 8022e64:	a8c0040c 	andi	r3,r21,16
 8022e68:	12400017 	ldw	r9,0(r2)
 8022e6c:	12000117 	ldw	r8,4(r2)
 8022e70:	18037926 	beq	r3,zero,8023c58 <_dtoa_r+0x11a0>
 8022e74:	00800034 	movhi	r2,0
 8022e78:	10803104 	addi	r2,r2,196
 8022e7c:	11800817 	ldw	r6,32(r2)
 8022e80:	11c00917 	ldw	r7,36(r2)
 8022e84:	9009883a 	mov	r4,r18
 8022e88:	980b883a 	mov	r5,r19
 8022e8c:	da001715 	stw	r8,92(sp)
 8022e90:	da401615 	stw	r9,88(sp)
 8022e94:	802b1900 	call	802b190 <__divdf3>
 8022e98:	da001717 	ldw	r8,92(sp)
 8022e9c:	da401617 	ldw	r9,88(sp)
 8022ea0:	ad4003cc 	andi	r21,r21,15
 8022ea4:	040000c4 	movi	r16,3
 8022ea8:	1023883a 	mov	r17,r2
 8022eac:	1829883a 	mov	r20,r3
 8022eb0:	a8001126 	beq	r21,zero,8022ef8 <_dtoa_r+0x440>
 8022eb4:	05c00034 	movhi	r23,0
 8022eb8:	bdc03104 	addi	r23,r23,196
 8022ebc:	4805883a 	mov	r2,r9
 8022ec0:	4007883a 	mov	r3,r8
 8022ec4:	a980004c 	andi	r6,r21,1
 8022ec8:	1009883a 	mov	r4,r2
 8022ecc:	a82bd07a 	srai	r21,r21,1
 8022ed0:	180b883a 	mov	r5,r3
 8022ed4:	30000426 	beq	r6,zero,8022ee8 <_dtoa_r+0x430>
 8022ed8:	b9800017 	ldw	r6,0(r23)
 8022edc:	b9c00117 	ldw	r7,4(r23)
 8022ee0:	84000044 	addi	r16,r16,1
 8022ee4:	802bdb80 	call	802bdb8 <__muldf3>
 8022ee8:	bdc00204 	addi	r23,r23,8
 8022eec:	a83ff51e 	bne	r21,zero,8022ec4 <__flash_rwdata_start+0xffff33a8>
 8022ef0:	1013883a 	mov	r9,r2
 8022ef4:	1811883a 	mov	r8,r3
 8022ef8:	480d883a 	mov	r6,r9
 8022efc:	400f883a 	mov	r7,r8
 8022f00:	8809883a 	mov	r4,r17
 8022f04:	a00b883a 	mov	r5,r20
 8022f08:	802b1900 	call	802b190 <__divdf3>
 8022f0c:	d8800f15 	stw	r2,60(sp)
 8022f10:	d8c01015 	stw	r3,64(sp)
 8022f14:	d8c00e17 	ldw	r3,56(sp)
 8022f18:	18000626 	beq	r3,zero,8022f34 <_dtoa_r+0x47c>
 8022f1c:	d9000f17 	ldw	r4,60(sp)
 8022f20:	d9401017 	ldw	r5,64(sp)
 8022f24:	000d883a 	mov	r6,zero
 8022f28:	01cffc34 	movhi	r7,16368
 8022f2c:	802bcc40 	call	802bcc4 <__ledf2>
 8022f30:	10040b16 	blt	r2,zero,8023f60 <_dtoa_r+0x14a8>
 8022f34:	8009883a 	mov	r4,r16
 8022f38:	802cfa00 	call	802cfa0 <__floatsidf>
 8022f3c:	d9800f17 	ldw	r6,60(sp)
 8022f40:	d9c01017 	ldw	r7,64(sp)
 8022f44:	1009883a 	mov	r4,r2
 8022f48:	180b883a 	mov	r5,r3
 8022f4c:	802bdb80 	call	802bdb8 <__muldf3>
 8022f50:	000d883a 	mov	r6,zero
 8022f54:	01d00734 	movhi	r7,16412
 8022f58:	1009883a 	mov	r4,r2
 8022f5c:	180b883a 	mov	r5,r3
 8022f60:	802a8e40 	call	802a8e4 <__adddf3>
 8022f64:	1021883a 	mov	r16,r2
 8022f68:	d8800617 	ldw	r2,24(sp)
 8022f6c:	047f3034 	movhi	r17,64704
 8022f70:	1c63883a 	add	r17,r3,r17
 8022f74:	10031826 	beq	r2,zero,8023bd8 <_dtoa_r+0x1120>
 8022f78:	d8c00517 	ldw	r3,20(sp)
 8022f7c:	db000617 	ldw	r12,24(sp)
 8022f80:	d8c01315 	stw	r3,76(sp)
 8022f84:	d9000b17 	ldw	r4,44(sp)
 8022f88:	20038f26 	beq	r4,zero,8023dc8 <_dtoa_r+0x1310>
 8022f8c:	60bfffc4 	addi	r2,r12,-1
 8022f90:	100490fa 	slli	r2,r2,3
 8022f94:	00c00034 	movhi	r3,0
 8022f98:	18c03b04 	addi	r3,r3,236
 8022f9c:	1885883a 	add	r2,r3,r2
 8022fa0:	11800017 	ldw	r6,0(r2)
 8022fa4:	11c00117 	ldw	r7,4(r2)
 8022fa8:	d8800717 	ldw	r2,28(sp)
 8022fac:	0009883a 	mov	r4,zero
 8022fb0:	014ff834 	movhi	r5,16352
 8022fb4:	db001615 	stw	r12,88(sp)
 8022fb8:	15c00044 	addi	r23,r2,1
 8022fbc:	802b1900 	call	802b190 <__divdf3>
 8022fc0:	800d883a 	mov	r6,r16
 8022fc4:	880f883a 	mov	r7,r17
 8022fc8:	1009883a 	mov	r4,r2
 8022fcc:	180b883a 	mov	r5,r3
 8022fd0:	802c6240 	call	802c624 <__subdf3>
 8022fd4:	d9401017 	ldw	r5,64(sp)
 8022fd8:	d9000f17 	ldw	r4,60(sp)
 8022fdc:	102b883a 	mov	r21,r2
 8022fe0:	d8c01215 	stw	r3,72(sp)
 8022fe4:	802cf200 	call	802cf20 <__fixdfsi>
 8022fe8:	1009883a 	mov	r4,r2
 8022fec:	1029883a 	mov	r20,r2
 8022ff0:	802cfa00 	call	802cfa0 <__floatsidf>
 8022ff4:	d9000f17 	ldw	r4,60(sp)
 8022ff8:	d9401017 	ldw	r5,64(sp)
 8022ffc:	100d883a 	mov	r6,r2
 8023000:	180f883a 	mov	r7,r3
 8023004:	802c6240 	call	802c624 <__subdf3>
 8023008:	1823883a 	mov	r17,r3
 802300c:	d8c00717 	ldw	r3,28(sp)
 8023010:	d9401217 	ldw	r5,72(sp)
 8023014:	a2000c04 	addi	r8,r20,48
 8023018:	1021883a 	mov	r16,r2
 802301c:	1a000005 	stb	r8,0(r3)
 8023020:	800d883a 	mov	r6,r16
 8023024:	880f883a 	mov	r7,r17
 8023028:	a809883a 	mov	r4,r21
 802302c:	4029883a 	mov	r20,r8
 8023030:	802bbe80 	call	802bbe8 <__gedf2>
 8023034:	00841d16 	blt	zero,r2,80240ac <_dtoa_r+0x15f4>
 8023038:	800d883a 	mov	r6,r16
 802303c:	880f883a 	mov	r7,r17
 8023040:	0009883a 	mov	r4,zero
 8023044:	014ffc34 	movhi	r5,16368
 8023048:	802c6240 	call	802c624 <__subdf3>
 802304c:	d9401217 	ldw	r5,72(sp)
 8023050:	100d883a 	mov	r6,r2
 8023054:	180f883a 	mov	r7,r3
 8023058:	a809883a 	mov	r4,r21
 802305c:	802bbe80 	call	802bbe8 <__gedf2>
 8023060:	db001617 	ldw	r12,88(sp)
 8023064:	00840e16 	blt	zero,r2,80240a0 <_dtoa_r+0x15e8>
 8023068:	00800044 	movi	r2,1
 802306c:	13006b0e 	bge	r2,r12,802321c <_dtoa_r+0x764>
 8023070:	d9000717 	ldw	r4,28(sp)
 8023074:	dd800f15 	stw	r22,60(sp)
 8023078:	dcc01015 	stw	r19,64(sp)
 802307c:	2319883a 	add	r12,r4,r12
 8023080:	dcc01217 	ldw	r19,72(sp)
 8023084:	602d883a 	mov	r22,r12
 8023088:	dc801215 	stw	r18,72(sp)
 802308c:	b825883a 	mov	r18,r23
 8023090:	00000906 	br	80230b8 <_dtoa_r+0x600>
 8023094:	802c6240 	call	802c624 <__subdf3>
 8023098:	a80d883a 	mov	r6,r21
 802309c:	980f883a 	mov	r7,r19
 80230a0:	1009883a 	mov	r4,r2
 80230a4:	180b883a 	mov	r5,r3
 80230a8:	802bcc40 	call	802bcc4 <__ledf2>
 80230ac:	1003e816 	blt	r2,zero,8024050 <_dtoa_r+0x1598>
 80230b0:	b825883a 	mov	r18,r23
 80230b4:	bd83e926 	beq	r23,r22,802405c <_dtoa_r+0x15a4>
 80230b8:	a809883a 	mov	r4,r21
 80230bc:	980b883a 	mov	r5,r19
 80230c0:	000d883a 	mov	r6,zero
 80230c4:	01d00934 	movhi	r7,16420
 80230c8:	802bdb80 	call	802bdb8 <__muldf3>
 80230cc:	000d883a 	mov	r6,zero
 80230d0:	01d00934 	movhi	r7,16420
 80230d4:	8009883a 	mov	r4,r16
 80230d8:	880b883a 	mov	r5,r17
 80230dc:	102b883a 	mov	r21,r2
 80230e0:	1827883a 	mov	r19,r3
 80230e4:	802bdb80 	call	802bdb8 <__muldf3>
 80230e8:	180b883a 	mov	r5,r3
 80230ec:	1009883a 	mov	r4,r2
 80230f0:	1821883a 	mov	r16,r3
 80230f4:	1023883a 	mov	r17,r2
 80230f8:	802cf200 	call	802cf20 <__fixdfsi>
 80230fc:	1009883a 	mov	r4,r2
 8023100:	1029883a 	mov	r20,r2
 8023104:	802cfa00 	call	802cfa0 <__floatsidf>
 8023108:	8809883a 	mov	r4,r17
 802310c:	800b883a 	mov	r5,r16
 8023110:	100d883a 	mov	r6,r2
 8023114:	180f883a 	mov	r7,r3
 8023118:	802c6240 	call	802c624 <__subdf3>
 802311c:	a5000c04 	addi	r20,r20,48
 8023120:	a80d883a 	mov	r6,r21
 8023124:	980f883a 	mov	r7,r19
 8023128:	1009883a 	mov	r4,r2
 802312c:	180b883a 	mov	r5,r3
 8023130:	95000005 	stb	r20,0(r18)
 8023134:	1021883a 	mov	r16,r2
 8023138:	1823883a 	mov	r17,r3
 802313c:	802bcc40 	call	802bcc4 <__ledf2>
 8023140:	bdc00044 	addi	r23,r23,1
 8023144:	800d883a 	mov	r6,r16
 8023148:	880f883a 	mov	r7,r17
 802314c:	0009883a 	mov	r4,zero
 8023150:	014ffc34 	movhi	r5,16368
 8023154:	103fcf0e 	bge	r2,zero,8023094 <__flash_rwdata_start+0xffff3578>
 8023158:	d8c01317 	ldw	r3,76(sp)
 802315c:	d8c00515 	stw	r3,20(sp)
 8023160:	d9400917 	ldw	r5,36(sp)
 8023164:	e009883a 	mov	r4,fp
 8023168:	8025bf40 	call	8025bf4 <_Bfree>
 802316c:	d9000517 	ldw	r4,20(sp)
 8023170:	d9802317 	ldw	r6,140(sp)
 8023174:	d9c02517 	ldw	r7,148(sp)
 8023178:	b8000005 	stb	zero,0(r23)
 802317c:	20800044 	addi	r2,r4,1
 8023180:	30800015 	stw	r2,0(r6)
 8023184:	3802aa26 	beq	r7,zero,8023c30 <_dtoa_r+0x1178>
 8023188:	3dc00015 	stw	r23,0(r7)
 802318c:	d8800717 	ldw	r2,28(sp)
 8023190:	003e7906 	br	8022b78 <__flash_rwdata_start+0xffff305c>
 8023194:	00800434 	movhi	r2,16
 8023198:	10bfffc4 	addi	r2,r2,-1
 802319c:	88a2703a 	and	r17,r17,r2
 80231a0:	883e851e 	bne	r17,zero,8022bb8 <__flash_rwdata_start+0xffff309c>
 80231a4:	00800034 	movhi	r2,0
 80231a8:	10801c04 	addi	r2,r2,112
 80231ac:	003e8406 	br	8022bc0 <__flash_rwdata_start+0xffff30a4>
 80231b0:	10c00204 	addi	r3,r2,8
 80231b4:	003e8706 	br	8022bd4 <__flash_rwdata_start+0xffff30b8>
 80231b8:	01400434 	movhi	r5,16
 80231bc:	297fffc4 	addi	r5,r5,-1
 80231c0:	994a703a 	and	r5,r19,r5
 80231c4:	9009883a 	mov	r4,r18
 80231c8:	843f0044 	addi	r16,r16,-1023
 80231cc:	294ffc34 	orhi	r5,r5,16368
 80231d0:	dd800217 	ldw	r22,8(sp)
 80231d4:	d8001115 	stw	zero,68(sp)
 80231d8:	003ea506 	br	8022c70 <__flash_rwdata_start+0xffff3154>
 80231dc:	00800034 	movhi	r2,0
 80231e0:	10801304 	addi	r2,r2,76
 80231e4:	003e6406 	br	8022b78 <__flash_rwdata_start+0xffff305c>
 80231e8:	e0001115 	stw	zero,68(fp)
 80231ec:	000b883a 	mov	r5,zero
 80231f0:	e009883a 	mov	r4,fp
 80231f4:	8025b4c0 	call	8025b4c <_Balloc>
 80231f8:	01bfffc4 	movi	r6,-1
 80231fc:	01c00044 	movi	r7,1
 8023200:	d8800715 	stw	r2,28(sp)
 8023204:	d9800c15 	stw	r6,48(sp)
 8023208:	e0801015 	stw	r2,64(fp)
 802320c:	d8000315 	stw	zero,12(sp)
 8023210:	d9c00b15 	stw	r7,44(sp)
 8023214:	d9800615 	stw	r6,24(sp)
 8023218:	d8002215 	stw	zero,136(sp)
 802321c:	d8800117 	ldw	r2,4(sp)
 8023220:	10008916 	blt	r2,zero,8023448 <_dtoa_r+0x990>
 8023224:	d9000517 	ldw	r4,20(sp)
 8023228:	00c00384 	movi	r3,14
 802322c:	19008616 	blt	r3,r4,8023448 <_dtoa_r+0x990>
 8023230:	200490fa 	slli	r2,r4,3
 8023234:	00c00034 	movhi	r3,0
 8023238:	d9802217 	ldw	r6,136(sp)
 802323c:	18c03b04 	addi	r3,r3,236
 8023240:	1885883a 	add	r2,r3,r2
 8023244:	14000017 	ldw	r16,0(r2)
 8023248:	14400117 	ldw	r17,4(r2)
 802324c:	30016316 	blt	r6,zero,80237dc <_dtoa_r+0xd24>
 8023250:	800d883a 	mov	r6,r16
 8023254:	880f883a 	mov	r7,r17
 8023258:	9009883a 	mov	r4,r18
 802325c:	980b883a 	mov	r5,r19
 8023260:	802b1900 	call	802b190 <__divdf3>
 8023264:	180b883a 	mov	r5,r3
 8023268:	1009883a 	mov	r4,r2
 802326c:	802cf200 	call	802cf20 <__fixdfsi>
 8023270:	1009883a 	mov	r4,r2
 8023274:	102b883a 	mov	r21,r2
 8023278:	802cfa00 	call	802cfa0 <__floatsidf>
 802327c:	800d883a 	mov	r6,r16
 8023280:	880f883a 	mov	r7,r17
 8023284:	1009883a 	mov	r4,r2
 8023288:	180b883a 	mov	r5,r3
 802328c:	802bdb80 	call	802bdb8 <__muldf3>
 8023290:	100d883a 	mov	r6,r2
 8023294:	180f883a 	mov	r7,r3
 8023298:	9009883a 	mov	r4,r18
 802329c:	980b883a 	mov	r5,r19
 80232a0:	802c6240 	call	802c624 <__subdf3>
 80232a4:	d9c00717 	ldw	r7,28(sp)
 80232a8:	1009883a 	mov	r4,r2
 80232ac:	a8800c04 	addi	r2,r21,48
 80232b0:	38800005 	stb	r2,0(r7)
 80232b4:	3dc00044 	addi	r23,r7,1
 80232b8:	d9c00617 	ldw	r7,24(sp)
 80232bc:	01800044 	movi	r6,1
 80232c0:	180b883a 	mov	r5,r3
 80232c4:	2005883a 	mov	r2,r4
 80232c8:	39803826 	beq	r7,r6,80233ac <_dtoa_r+0x8f4>
 80232cc:	000d883a 	mov	r6,zero
 80232d0:	01d00934 	movhi	r7,16420
 80232d4:	802bdb80 	call	802bdb8 <__muldf3>
 80232d8:	000d883a 	mov	r6,zero
 80232dc:	000f883a 	mov	r7,zero
 80232e0:	1009883a 	mov	r4,r2
 80232e4:	180b883a 	mov	r5,r3
 80232e8:	1025883a 	mov	r18,r2
 80232ec:	1827883a 	mov	r19,r3
 80232f0:	802bb600 	call	802bb60 <__eqdf2>
 80232f4:	103f9a26 	beq	r2,zero,8023160 <__flash_rwdata_start+0xffff3644>
 80232f8:	d9c00617 	ldw	r7,24(sp)
 80232fc:	d8c00717 	ldw	r3,28(sp)
 8023300:	b829883a 	mov	r20,r23
 8023304:	38bfffc4 	addi	r2,r7,-1
 8023308:	18ad883a 	add	r22,r3,r2
 802330c:	00000a06 	br	8023338 <_dtoa_r+0x880>
 8023310:	802bdb80 	call	802bdb8 <__muldf3>
 8023314:	000d883a 	mov	r6,zero
 8023318:	000f883a 	mov	r7,zero
 802331c:	1009883a 	mov	r4,r2
 8023320:	180b883a 	mov	r5,r3
 8023324:	1025883a 	mov	r18,r2
 8023328:	1827883a 	mov	r19,r3
 802332c:	b829883a 	mov	r20,r23
 8023330:	802bb600 	call	802bb60 <__eqdf2>
 8023334:	103f8a26 	beq	r2,zero,8023160 <__flash_rwdata_start+0xffff3644>
 8023338:	800d883a 	mov	r6,r16
 802333c:	880f883a 	mov	r7,r17
 8023340:	9009883a 	mov	r4,r18
 8023344:	980b883a 	mov	r5,r19
 8023348:	802b1900 	call	802b190 <__divdf3>
 802334c:	180b883a 	mov	r5,r3
 8023350:	1009883a 	mov	r4,r2
 8023354:	802cf200 	call	802cf20 <__fixdfsi>
 8023358:	1009883a 	mov	r4,r2
 802335c:	102b883a 	mov	r21,r2
 8023360:	802cfa00 	call	802cfa0 <__floatsidf>
 8023364:	800d883a 	mov	r6,r16
 8023368:	880f883a 	mov	r7,r17
 802336c:	1009883a 	mov	r4,r2
 8023370:	180b883a 	mov	r5,r3
 8023374:	802bdb80 	call	802bdb8 <__muldf3>
 8023378:	100d883a 	mov	r6,r2
 802337c:	180f883a 	mov	r7,r3
 8023380:	9009883a 	mov	r4,r18
 8023384:	980b883a 	mov	r5,r19
 8023388:	802c6240 	call	802c624 <__subdf3>
 802338c:	aa000c04 	addi	r8,r21,48
 8023390:	a2000005 	stb	r8,0(r20)
 8023394:	000d883a 	mov	r6,zero
 8023398:	01d00934 	movhi	r7,16420
 802339c:	1009883a 	mov	r4,r2
 80233a0:	180b883a 	mov	r5,r3
 80233a4:	a5c00044 	addi	r23,r20,1
 80233a8:	b53fd91e 	bne	r22,r20,8023310 <__flash_rwdata_start+0xffff37f4>
 80233ac:	100d883a 	mov	r6,r2
 80233b0:	180f883a 	mov	r7,r3
 80233b4:	1009883a 	mov	r4,r2
 80233b8:	180b883a 	mov	r5,r3
 80233bc:	802a8e40 	call	802a8e4 <__adddf3>
 80233c0:	100d883a 	mov	r6,r2
 80233c4:	180f883a 	mov	r7,r3
 80233c8:	8009883a 	mov	r4,r16
 80233cc:	880b883a 	mov	r5,r17
 80233d0:	1027883a 	mov	r19,r2
 80233d4:	1825883a 	mov	r18,r3
 80233d8:	802bcc40 	call	802bcc4 <__ledf2>
 80233dc:	10000816 	blt	r2,zero,8023400 <_dtoa_r+0x948>
 80233e0:	980d883a 	mov	r6,r19
 80233e4:	900f883a 	mov	r7,r18
 80233e8:	8009883a 	mov	r4,r16
 80233ec:	880b883a 	mov	r5,r17
 80233f0:	802bb600 	call	802bb60 <__eqdf2>
 80233f4:	103f5a1e 	bne	r2,zero,8023160 <__flash_rwdata_start+0xffff3644>
 80233f8:	ad40004c 	andi	r21,r21,1
 80233fc:	a83f5826 	beq	r21,zero,8023160 <__flash_rwdata_start+0xffff3644>
 8023400:	bd3fffc3 	ldbu	r20,-1(r23)
 8023404:	b8bfffc4 	addi	r2,r23,-1
 8023408:	1007883a 	mov	r3,r2
 802340c:	01400e44 	movi	r5,57
 8023410:	d9800717 	ldw	r6,28(sp)
 8023414:	00000506 	br	802342c <_dtoa_r+0x974>
 8023418:	18ffffc4 	addi	r3,r3,-1
 802341c:	11824726 	beq	r2,r6,8023d3c <_dtoa_r+0x1284>
 8023420:	1d000003 	ldbu	r20,0(r3)
 8023424:	102f883a 	mov	r23,r2
 8023428:	10bfffc4 	addi	r2,r2,-1
 802342c:	a1003fcc 	andi	r4,r20,255
 8023430:	2100201c 	xori	r4,r4,128
 8023434:	213fe004 	addi	r4,r4,-128
 8023438:	217ff726 	beq	r4,r5,8023418 <__flash_rwdata_start+0xffff38fc>
 802343c:	a2000044 	addi	r8,r20,1
 8023440:	12000005 	stb	r8,0(r2)
 8023444:	003f4606 	br	8023160 <__flash_rwdata_start+0xffff3644>
 8023448:	d9000b17 	ldw	r4,44(sp)
 802344c:	2000c826 	beq	r4,zero,8023770 <_dtoa_r+0xcb8>
 8023450:	d9800317 	ldw	r6,12(sp)
 8023454:	00c00044 	movi	r3,1
 8023458:	1980f90e 	bge	r3,r6,8023840 <_dtoa_r+0xd88>
 802345c:	d8800617 	ldw	r2,24(sp)
 8023460:	d8c00a17 	ldw	r3,40(sp)
 8023464:	157fffc4 	addi	r21,r2,-1
 8023468:	1d41f316 	blt	r3,r21,8023c38 <_dtoa_r+0x1180>
 802346c:	1d6bc83a 	sub	r21,r3,r21
 8023470:	d9c00617 	ldw	r7,24(sp)
 8023474:	3802aa16 	blt	r7,zero,8023f20 <_dtoa_r+0x1468>
 8023478:	dd000817 	ldw	r20,32(sp)
 802347c:	d8800617 	ldw	r2,24(sp)
 8023480:	d8c00817 	ldw	r3,32(sp)
 8023484:	01400044 	movi	r5,1
 8023488:	e009883a 	mov	r4,fp
 802348c:	1887883a 	add	r3,r3,r2
 8023490:	d8c00815 	stw	r3,32(sp)
 8023494:	b0ad883a 	add	r22,r22,r2
 8023498:	8025f800 	call	8025f80 <__i2b>
 802349c:	1023883a 	mov	r17,r2
 80234a0:	a0000826 	beq	r20,zero,80234c4 <_dtoa_r+0xa0c>
 80234a4:	0580070e 	bge	zero,r22,80234c4 <_dtoa_r+0xa0c>
 80234a8:	a005883a 	mov	r2,r20
 80234ac:	b500b916 	blt	r22,r20,8023794 <_dtoa_r+0xcdc>
 80234b0:	d9000817 	ldw	r4,32(sp)
 80234b4:	a0a9c83a 	sub	r20,r20,r2
 80234b8:	b0adc83a 	sub	r22,r22,r2
 80234bc:	2089c83a 	sub	r4,r4,r2
 80234c0:	d9000815 	stw	r4,32(sp)
 80234c4:	d9800a17 	ldw	r6,40(sp)
 80234c8:	0181810e 	bge	zero,r6,8023ad0 <_dtoa_r+0x1018>
 80234cc:	d9c00b17 	ldw	r7,44(sp)
 80234d0:	3800b326 	beq	r7,zero,80237a0 <_dtoa_r+0xce8>
 80234d4:	a800b226 	beq	r21,zero,80237a0 <_dtoa_r+0xce8>
 80234d8:	880b883a 	mov	r5,r17
 80234dc:	a80d883a 	mov	r6,r21
 80234e0:	e009883a 	mov	r4,fp
 80234e4:	80262480 	call	8026248 <__pow5mult>
 80234e8:	d9800917 	ldw	r6,36(sp)
 80234ec:	100b883a 	mov	r5,r2
 80234f0:	e009883a 	mov	r4,fp
 80234f4:	1023883a 	mov	r17,r2
 80234f8:	8025fbc0 	call	8025fbc <__multiply>
 80234fc:	1021883a 	mov	r16,r2
 8023500:	d8800a17 	ldw	r2,40(sp)
 8023504:	d9400917 	ldw	r5,36(sp)
 8023508:	e009883a 	mov	r4,fp
 802350c:	1545c83a 	sub	r2,r2,r21
 8023510:	d8800a15 	stw	r2,40(sp)
 8023514:	8025bf40 	call	8025bf4 <_Bfree>
 8023518:	d8c00a17 	ldw	r3,40(sp)
 802351c:	18009f1e 	bne	r3,zero,802379c <_dtoa_r+0xce4>
 8023520:	05c00044 	movi	r23,1
 8023524:	e009883a 	mov	r4,fp
 8023528:	b80b883a 	mov	r5,r23
 802352c:	8025f800 	call	8025f80 <__i2b>
 8023530:	d9000d17 	ldw	r4,52(sp)
 8023534:	102b883a 	mov	r21,r2
 8023538:	2000ce26 	beq	r4,zero,8023874 <_dtoa_r+0xdbc>
 802353c:	200d883a 	mov	r6,r4
 8023540:	100b883a 	mov	r5,r2
 8023544:	e009883a 	mov	r4,fp
 8023548:	80262480 	call	8026248 <__pow5mult>
 802354c:	d9800317 	ldw	r6,12(sp)
 8023550:	102b883a 	mov	r21,r2
 8023554:	b981810e 	bge	r23,r6,8023b5c <_dtoa_r+0x10a4>
 8023558:	0027883a 	mov	r19,zero
 802355c:	a8800417 	ldw	r2,16(r21)
 8023560:	05c00804 	movi	r23,32
 8023564:	10800104 	addi	r2,r2,4
 8023568:	1085883a 	add	r2,r2,r2
 802356c:	1085883a 	add	r2,r2,r2
 8023570:	a885883a 	add	r2,r21,r2
 8023574:	11000017 	ldw	r4,0(r2)
 8023578:	8025e680 	call	8025e68 <__hi0bits>
 802357c:	b885c83a 	sub	r2,r23,r2
 8023580:	1585883a 	add	r2,r2,r22
 8023584:	108007cc 	andi	r2,r2,31
 8023588:	1000b326 	beq	r2,zero,8023858 <_dtoa_r+0xda0>
 802358c:	00c00804 	movi	r3,32
 8023590:	1887c83a 	sub	r3,r3,r2
 8023594:	01000104 	movi	r4,4
 8023598:	20c2cd0e 	bge	r4,r3,80240d0 <_dtoa_r+0x1618>
 802359c:	00c00704 	movi	r3,28
 80235a0:	1885c83a 	sub	r2,r3,r2
 80235a4:	d8c00817 	ldw	r3,32(sp)
 80235a8:	a0a9883a 	add	r20,r20,r2
 80235ac:	b0ad883a 	add	r22,r22,r2
 80235b0:	1887883a 	add	r3,r3,r2
 80235b4:	d8c00815 	stw	r3,32(sp)
 80235b8:	d9800817 	ldw	r6,32(sp)
 80235bc:	0180040e 	bge	zero,r6,80235d0 <_dtoa_r+0xb18>
 80235c0:	800b883a 	mov	r5,r16
 80235c4:	e009883a 	mov	r4,fp
 80235c8:	80263880 	call	8026388 <__lshift>
 80235cc:	1021883a 	mov	r16,r2
 80235d0:	0580050e 	bge	zero,r22,80235e8 <_dtoa_r+0xb30>
 80235d4:	a80b883a 	mov	r5,r21
 80235d8:	b00d883a 	mov	r6,r22
 80235dc:	e009883a 	mov	r4,fp
 80235e0:	80263880 	call	8026388 <__lshift>
 80235e4:	102b883a 	mov	r21,r2
 80235e8:	d9c00e17 	ldw	r7,56(sp)
 80235ec:	3801211e 	bne	r7,zero,8023a74 <_dtoa_r+0xfbc>
 80235f0:	d9800617 	ldw	r6,24(sp)
 80235f4:	0181380e 	bge	zero,r6,8023ad8 <_dtoa_r+0x1020>
 80235f8:	d8c00b17 	ldw	r3,44(sp)
 80235fc:	1800ab1e 	bne	r3,zero,80238ac <_dtoa_r+0xdf4>
 8023600:	dc800717 	ldw	r18,28(sp)
 8023604:	dcc00617 	ldw	r19,24(sp)
 8023608:	9029883a 	mov	r20,r18
 802360c:	00000206 	br	8023618 <_dtoa_r+0xb60>
 8023610:	8025c1c0 	call	8025c1c <__multadd>
 8023614:	1021883a 	mov	r16,r2
 8023618:	a80b883a 	mov	r5,r21
 802361c:	8009883a 	mov	r4,r16
 8023620:	80228900 	call	8022890 <quorem>
 8023624:	10800c04 	addi	r2,r2,48
 8023628:	90800005 	stb	r2,0(r18)
 802362c:	94800044 	addi	r18,r18,1
 8023630:	9507c83a 	sub	r3,r18,r20
 8023634:	000f883a 	mov	r7,zero
 8023638:	01800284 	movi	r6,10
 802363c:	800b883a 	mov	r5,r16
 8023640:	e009883a 	mov	r4,fp
 8023644:	1cfff216 	blt	r3,r19,8023610 <__flash_rwdata_start+0xffff3af4>
 8023648:	1011883a 	mov	r8,r2
 802364c:	d8800617 	ldw	r2,24(sp)
 8023650:	0082370e 	bge	zero,r2,8023f30 <_dtoa_r+0x1478>
 8023654:	d9000717 	ldw	r4,28(sp)
 8023658:	0025883a 	mov	r18,zero
 802365c:	20af883a 	add	r23,r4,r2
 8023660:	01800044 	movi	r6,1
 8023664:	800b883a 	mov	r5,r16
 8023668:	e009883a 	mov	r4,fp
 802366c:	da001715 	stw	r8,92(sp)
 8023670:	80263880 	call	8026388 <__lshift>
 8023674:	a80b883a 	mov	r5,r21
 8023678:	1009883a 	mov	r4,r2
 802367c:	d8800915 	stw	r2,36(sp)
 8023680:	80264d00 	call	80264d0 <__mcmp>
 8023684:	da001717 	ldw	r8,92(sp)
 8023688:	0081800e 	bge	zero,r2,8023c8c <_dtoa_r+0x11d4>
 802368c:	b93fffc3 	ldbu	r4,-1(r23)
 8023690:	b8bfffc4 	addi	r2,r23,-1
 8023694:	1007883a 	mov	r3,r2
 8023698:	01800e44 	movi	r6,57
 802369c:	d9c00717 	ldw	r7,28(sp)
 80236a0:	00000506 	br	80236b8 <_dtoa_r+0xc00>
 80236a4:	18ffffc4 	addi	r3,r3,-1
 80236a8:	11c12326 	beq	r2,r7,8023b38 <_dtoa_r+0x1080>
 80236ac:	19000003 	ldbu	r4,0(r3)
 80236b0:	102f883a 	mov	r23,r2
 80236b4:	10bfffc4 	addi	r2,r2,-1
 80236b8:	21403fcc 	andi	r5,r4,255
 80236bc:	2940201c 	xori	r5,r5,128
 80236c0:	297fe004 	addi	r5,r5,-128
 80236c4:	29bff726 	beq	r5,r6,80236a4 <__flash_rwdata_start+0xffff3b88>
 80236c8:	21000044 	addi	r4,r4,1
 80236cc:	11000005 	stb	r4,0(r2)
 80236d0:	a80b883a 	mov	r5,r21
 80236d4:	e009883a 	mov	r4,fp
 80236d8:	8025bf40 	call	8025bf4 <_Bfree>
 80236dc:	883ea026 	beq	r17,zero,8023160 <__flash_rwdata_start+0xffff3644>
 80236e0:	90000426 	beq	r18,zero,80236f4 <_dtoa_r+0xc3c>
 80236e4:	94400326 	beq	r18,r17,80236f4 <_dtoa_r+0xc3c>
 80236e8:	900b883a 	mov	r5,r18
 80236ec:	e009883a 	mov	r4,fp
 80236f0:	8025bf40 	call	8025bf4 <_Bfree>
 80236f4:	880b883a 	mov	r5,r17
 80236f8:	e009883a 	mov	r4,fp
 80236fc:	8025bf40 	call	8025bf4 <_Bfree>
 8023700:	003e9706 	br	8023160 <__flash_rwdata_start+0xffff3644>
 8023704:	01800044 	movi	r6,1
 8023708:	d9800e15 	stw	r6,56(sp)
 802370c:	003d9606 	br	8022d68 <__flash_rwdata_start+0xffff324c>
 8023710:	d8800817 	ldw	r2,32(sp)
 8023714:	d8c00517 	ldw	r3,20(sp)
 8023718:	d8000d15 	stw	zero,52(sp)
 802371c:	10c5c83a 	sub	r2,r2,r3
 8023720:	00c9c83a 	sub	r4,zero,r3
 8023724:	d8800815 	stw	r2,32(sp)
 8023728:	d9000a15 	stw	r4,40(sp)
 802372c:	003d9706 	br	8022d8c <__flash_rwdata_start+0xffff3270>
 8023730:	05adc83a 	sub	r22,zero,r22
 8023734:	dd800815 	stw	r22,32(sp)
 8023738:	002d883a 	mov	r22,zero
 802373c:	003d8e06 	br	8022d78 <__flash_rwdata_start+0xffff325c>
 8023740:	d9000517 	ldw	r4,20(sp)
 8023744:	802cfa00 	call	802cfa0 <__floatsidf>
 8023748:	100d883a 	mov	r6,r2
 802374c:	180f883a 	mov	r7,r3
 8023750:	a009883a 	mov	r4,r20
 8023754:	880b883a 	mov	r5,r17
 8023758:	802bb600 	call	802bb60 <__eqdf2>
 802375c:	103d7126 	beq	r2,zero,8022d24 <__flash_rwdata_start+0xffff3208>
 8023760:	d9c00517 	ldw	r7,20(sp)
 8023764:	39ffffc4 	addi	r7,r7,-1
 8023768:	d9c00515 	stw	r7,20(sp)
 802376c:	003d6d06 	br	8022d24 <__flash_rwdata_start+0xffff3208>
 8023770:	dd400a17 	ldw	r21,40(sp)
 8023774:	dd000817 	ldw	r20,32(sp)
 8023778:	0023883a 	mov	r17,zero
 802377c:	003f4806 	br	80234a0 <__flash_rwdata_start+0xffff3984>
 8023780:	10e3c83a 	sub	r17,r2,r3
 8023784:	9448983a 	sll	r4,r18,r17
 8023788:	003d3206 	br	8022c54 <__flash_rwdata_start+0xffff3138>
 802378c:	d8000e15 	stw	zero,56(sp)
 8023790:	003d7506 	br	8022d68 <__flash_rwdata_start+0xffff324c>
 8023794:	b005883a 	mov	r2,r22
 8023798:	003f4506 	br	80234b0 <__flash_rwdata_start+0xffff3994>
 802379c:	dc000915 	stw	r16,36(sp)
 80237a0:	d9800a17 	ldw	r6,40(sp)
 80237a4:	d9400917 	ldw	r5,36(sp)
 80237a8:	e009883a 	mov	r4,fp
 80237ac:	80262480 	call	8026248 <__pow5mult>
 80237b0:	1021883a 	mov	r16,r2
 80237b4:	003f5a06 	br	8023520 <__flash_rwdata_start+0xffff3a04>
 80237b8:	01c00044 	movi	r7,1
 80237bc:	d9c00b15 	stw	r7,44(sp)
 80237c0:	d8802217 	ldw	r2,136(sp)
 80237c4:	0081280e 	bge	zero,r2,8023c68 <_dtoa_r+0x11b0>
 80237c8:	100d883a 	mov	r6,r2
 80237cc:	1021883a 	mov	r16,r2
 80237d0:	d8800c15 	stw	r2,48(sp)
 80237d4:	d8800615 	stw	r2,24(sp)
 80237d8:	003d8806 	br	8022dfc <__flash_rwdata_start+0xffff32e0>
 80237dc:	d8800617 	ldw	r2,24(sp)
 80237e0:	00be9b16 	blt	zero,r2,8023250 <__flash_rwdata_start+0xffff3734>
 80237e4:	10010f1e 	bne	r2,zero,8023c24 <_dtoa_r+0x116c>
 80237e8:	880b883a 	mov	r5,r17
 80237ec:	000d883a 	mov	r6,zero
 80237f0:	01d00534 	movhi	r7,16404
 80237f4:	8009883a 	mov	r4,r16
 80237f8:	802bdb80 	call	802bdb8 <__muldf3>
 80237fc:	900d883a 	mov	r6,r18
 8023800:	980f883a 	mov	r7,r19
 8023804:	1009883a 	mov	r4,r2
 8023808:	180b883a 	mov	r5,r3
 802380c:	802bbe80 	call	802bbe8 <__gedf2>
 8023810:	002b883a 	mov	r21,zero
 8023814:	0023883a 	mov	r17,zero
 8023818:	1000bf16 	blt	r2,zero,8023b18 <_dtoa_r+0x1060>
 802381c:	d9802217 	ldw	r6,136(sp)
 8023820:	ddc00717 	ldw	r23,28(sp)
 8023824:	018c303a 	nor	r6,zero,r6
 8023828:	d9800515 	stw	r6,20(sp)
 802382c:	a80b883a 	mov	r5,r21
 8023830:	e009883a 	mov	r4,fp
 8023834:	8025bf40 	call	8025bf4 <_Bfree>
 8023838:	883e4926 	beq	r17,zero,8023160 <__flash_rwdata_start+0xffff3644>
 802383c:	003fad06 	br	80236f4 <__flash_rwdata_start+0xffff3bd8>
 8023840:	d9c01117 	ldw	r7,68(sp)
 8023844:	3801bc26 	beq	r7,zero,8023f38 <_dtoa_r+0x1480>
 8023848:	10810cc4 	addi	r2,r2,1075
 802384c:	dd400a17 	ldw	r21,40(sp)
 8023850:	dd000817 	ldw	r20,32(sp)
 8023854:	003f0a06 	br	8023480 <__flash_rwdata_start+0xffff3964>
 8023858:	00800704 	movi	r2,28
 802385c:	d9000817 	ldw	r4,32(sp)
 8023860:	a0a9883a 	add	r20,r20,r2
 8023864:	b0ad883a 	add	r22,r22,r2
 8023868:	2089883a 	add	r4,r4,r2
 802386c:	d9000815 	stw	r4,32(sp)
 8023870:	003f5106 	br	80235b8 <__flash_rwdata_start+0xffff3a9c>
 8023874:	d8c00317 	ldw	r3,12(sp)
 8023878:	b8c1fc0e 	bge	r23,r3,802406c <_dtoa_r+0x15b4>
 802387c:	0027883a 	mov	r19,zero
 8023880:	b805883a 	mov	r2,r23
 8023884:	003f3e06 	br	8023580 <__flash_rwdata_start+0xffff3a64>
 8023888:	880b883a 	mov	r5,r17
 802388c:	e009883a 	mov	r4,fp
 8023890:	000f883a 	mov	r7,zero
 8023894:	01800284 	movi	r6,10
 8023898:	8025c1c0 	call	8025c1c <__multadd>
 802389c:	d9000c17 	ldw	r4,48(sp)
 80238a0:	1023883a 	mov	r17,r2
 80238a4:	0102040e 	bge	zero,r4,80240b8 <_dtoa_r+0x1600>
 80238a8:	d9000615 	stw	r4,24(sp)
 80238ac:	0500050e 	bge	zero,r20,80238c4 <_dtoa_r+0xe0c>
 80238b0:	880b883a 	mov	r5,r17
 80238b4:	a00d883a 	mov	r6,r20
 80238b8:	e009883a 	mov	r4,fp
 80238bc:	80263880 	call	8026388 <__lshift>
 80238c0:	1023883a 	mov	r17,r2
 80238c4:	9801241e 	bne	r19,zero,8023d58 <_dtoa_r+0x12a0>
 80238c8:	8829883a 	mov	r20,r17
 80238cc:	d9000617 	ldw	r4,24(sp)
 80238d0:	dcc00717 	ldw	r19,28(sp)
 80238d4:	9480004c 	andi	r18,r18,1
 80238d8:	20bfffc4 	addi	r2,r4,-1
 80238dc:	9885883a 	add	r2,r19,r2
 80238e0:	d8800415 	stw	r2,16(sp)
 80238e4:	dc800615 	stw	r18,24(sp)
 80238e8:	a80b883a 	mov	r5,r21
 80238ec:	8009883a 	mov	r4,r16
 80238f0:	80228900 	call	8022890 <quorem>
 80238f4:	880b883a 	mov	r5,r17
 80238f8:	8009883a 	mov	r4,r16
 80238fc:	102f883a 	mov	r23,r2
 8023900:	80264d00 	call	80264d0 <__mcmp>
 8023904:	a80b883a 	mov	r5,r21
 8023908:	a00d883a 	mov	r6,r20
 802390c:	e009883a 	mov	r4,fp
 8023910:	102d883a 	mov	r22,r2
 8023914:	80265300 	call	8026530 <__mdiff>
 8023918:	1007883a 	mov	r3,r2
 802391c:	10800317 	ldw	r2,12(r2)
 8023920:	bc800c04 	addi	r18,r23,48
 8023924:	180b883a 	mov	r5,r3
 8023928:	10004e1e 	bne	r2,zero,8023a64 <_dtoa_r+0xfac>
 802392c:	8009883a 	mov	r4,r16
 8023930:	d8c01615 	stw	r3,88(sp)
 8023934:	80264d00 	call	80264d0 <__mcmp>
 8023938:	d8c01617 	ldw	r3,88(sp)
 802393c:	e009883a 	mov	r4,fp
 8023940:	d8801615 	stw	r2,88(sp)
 8023944:	180b883a 	mov	r5,r3
 8023948:	8025bf40 	call	8025bf4 <_Bfree>
 802394c:	d8801617 	ldw	r2,88(sp)
 8023950:	1000041e 	bne	r2,zero,8023964 <_dtoa_r+0xeac>
 8023954:	d9800317 	ldw	r6,12(sp)
 8023958:	3000021e 	bne	r6,zero,8023964 <_dtoa_r+0xeac>
 802395c:	d8c00617 	ldw	r3,24(sp)
 8023960:	18003726 	beq	r3,zero,8023a40 <_dtoa_r+0xf88>
 8023964:	b0002016 	blt	r22,zero,80239e8 <_dtoa_r+0xf30>
 8023968:	b000041e 	bne	r22,zero,802397c <_dtoa_r+0xec4>
 802396c:	d9000317 	ldw	r4,12(sp)
 8023970:	2000021e 	bne	r4,zero,802397c <_dtoa_r+0xec4>
 8023974:	d8c00617 	ldw	r3,24(sp)
 8023978:	18001b26 	beq	r3,zero,80239e8 <_dtoa_r+0xf30>
 802397c:	00810716 	blt	zero,r2,8023d9c <_dtoa_r+0x12e4>
 8023980:	d8c00417 	ldw	r3,16(sp)
 8023984:	9d800044 	addi	r22,r19,1
 8023988:	9c800005 	stb	r18,0(r19)
 802398c:	b02f883a 	mov	r23,r22
 8023990:	98c10626 	beq	r19,r3,8023dac <_dtoa_r+0x12f4>
 8023994:	800b883a 	mov	r5,r16
 8023998:	000f883a 	mov	r7,zero
 802399c:	01800284 	movi	r6,10
 80239a0:	e009883a 	mov	r4,fp
 80239a4:	8025c1c0 	call	8025c1c <__multadd>
 80239a8:	1021883a 	mov	r16,r2
 80239ac:	000f883a 	mov	r7,zero
 80239b0:	01800284 	movi	r6,10
 80239b4:	880b883a 	mov	r5,r17
 80239b8:	e009883a 	mov	r4,fp
 80239bc:	8d002526 	beq	r17,r20,8023a54 <_dtoa_r+0xf9c>
 80239c0:	8025c1c0 	call	8025c1c <__multadd>
 80239c4:	a00b883a 	mov	r5,r20
 80239c8:	000f883a 	mov	r7,zero
 80239cc:	01800284 	movi	r6,10
 80239d0:	e009883a 	mov	r4,fp
 80239d4:	1023883a 	mov	r17,r2
 80239d8:	8025c1c0 	call	8025c1c <__multadd>
 80239dc:	1029883a 	mov	r20,r2
 80239e0:	b027883a 	mov	r19,r22
 80239e4:	003fc006 	br	80238e8 <__flash_rwdata_start+0xffff3dcc>
 80239e8:	9011883a 	mov	r8,r18
 80239ec:	00800e0e 	bge	zero,r2,8023a28 <_dtoa_r+0xf70>
 80239f0:	800b883a 	mov	r5,r16
 80239f4:	01800044 	movi	r6,1
 80239f8:	e009883a 	mov	r4,fp
 80239fc:	da001715 	stw	r8,92(sp)
 8023a00:	80263880 	call	8026388 <__lshift>
 8023a04:	a80b883a 	mov	r5,r21
 8023a08:	1009883a 	mov	r4,r2
 8023a0c:	1021883a 	mov	r16,r2
 8023a10:	80264d00 	call	80264d0 <__mcmp>
 8023a14:	da001717 	ldw	r8,92(sp)
 8023a18:	0081960e 	bge	zero,r2,8024074 <_dtoa_r+0x15bc>
 8023a1c:	00800e44 	movi	r2,57
 8023a20:	40817026 	beq	r8,r2,8023fe4 <_dtoa_r+0x152c>
 8023a24:	ba000c44 	addi	r8,r23,49
 8023a28:	8825883a 	mov	r18,r17
 8023a2c:	9dc00044 	addi	r23,r19,1
 8023a30:	9a000005 	stb	r8,0(r19)
 8023a34:	a023883a 	mov	r17,r20
 8023a38:	dc000915 	stw	r16,36(sp)
 8023a3c:	003f2406 	br	80236d0 <__flash_rwdata_start+0xffff3bb4>
 8023a40:	00800e44 	movi	r2,57
 8023a44:	9011883a 	mov	r8,r18
 8023a48:	90816626 	beq	r18,r2,8023fe4 <_dtoa_r+0x152c>
 8023a4c:	05bff516 	blt	zero,r22,8023a24 <__flash_rwdata_start+0xffff3f08>
 8023a50:	003ff506 	br	8023a28 <__flash_rwdata_start+0xffff3f0c>
 8023a54:	8025c1c0 	call	8025c1c <__multadd>
 8023a58:	1023883a 	mov	r17,r2
 8023a5c:	1029883a 	mov	r20,r2
 8023a60:	003fdf06 	br	80239e0 <__flash_rwdata_start+0xffff3ec4>
 8023a64:	e009883a 	mov	r4,fp
 8023a68:	8025bf40 	call	8025bf4 <_Bfree>
 8023a6c:	00800044 	movi	r2,1
 8023a70:	003fbc06 	br	8023964 <__flash_rwdata_start+0xffff3e48>
 8023a74:	a80b883a 	mov	r5,r21
 8023a78:	8009883a 	mov	r4,r16
 8023a7c:	80264d00 	call	80264d0 <__mcmp>
 8023a80:	103edb0e 	bge	r2,zero,80235f0 <__flash_rwdata_start+0xffff3ad4>
 8023a84:	800b883a 	mov	r5,r16
 8023a88:	000f883a 	mov	r7,zero
 8023a8c:	01800284 	movi	r6,10
 8023a90:	e009883a 	mov	r4,fp
 8023a94:	8025c1c0 	call	8025c1c <__multadd>
 8023a98:	1021883a 	mov	r16,r2
 8023a9c:	d8800517 	ldw	r2,20(sp)
 8023aa0:	d8c00b17 	ldw	r3,44(sp)
 8023aa4:	10bfffc4 	addi	r2,r2,-1
 8023aa8:	d8800515 	stw	r2,20(sp)
 8023aac:	183f761e 	bne	r3,zero,8023888 <__flash_rwdata_start+0xffff3d6c>
 8023ab0:	d9000c17 	ldw	r4,48(sp)
 8023ab4:	0101730e 	bge	zero,r4,8024084 <_dtoa_r+0x15cc>
 8023ab8:	d9000615 	stw	r4,24(sp)
 8023abc:	003ed006 	br	8023600 <__flash_rwdata_start+0xffff3ae4>
 8023ac0:	00800084 	movi	r2,2
 8023ac4:	3081861e 	bne	r6,r2,80240e0 <_dtoa_r+0x1628>
 8023ac8:	d8000b15 	stw	zero,44(sp)
 8023acc:	003f3c06 	br	80237c0 <__flash_rwdata_start+0xffff3ca4>
 8023ad0:	dc000917 	ldw	r16,36(sp)
 8023ad4:	003e9206 	br	8023520 <__flash_rwdata_start+0xffff3a04>
 8023ad8:	d9c00317 	ldw	r7,12(sp)
 8023adc:	00800084 	movi	r2,2
 8023ae0:	11fec50e 	bge	r2,r7,80235f8 <__flash_rwdata_start+0xffff3adc>
 8023ae4:	d9000617 	ldw	r4,24(sp)
 8023ae8:	20013c1e 	bne	r4,zero,8023fdc <_dtoa_r+0x1524>
 8023aec:	a80b883a 	mov	r5,r21
 8023af0:	000f883a 	mov	r7,zero
 8023af4:	01800144 	movi	r6,5
 8023af8:	e009883a 	mov	r4,fp
 8023afc:	8025c1c0 	call	8025c1c <__multadd>
 8023b00:	100b883a 	mov	r5,r2
 8023b04:	8009883a 	mov	r4,r16
 8023b08:	102b883a 	mov	r21,r2
 8023b0c:	80264d00 	call	80264d0 <__mcmp>
 8023b10:	dc000915 	stw	r16,36(sp)
 8023b14:	00bf410e 	bge	zero,r2,802381c <__flash_rwdata_start+0xffff3d00>
 8023b18:	d9c00717 	ldw	r7,28(sp)
 8023b1c:	00800c44 	movi	r2,49
 8023b20:	38800005 	stb	r2,0(r7)
 8023b24:	d8800517 	ldw	r2,20(sp)
 8023b28:	3dc00044 	addi	r23,r7,1
 8023b2c:	10800044 	addi	r2,r2,1
 8023b30:	d8800515 	stw	r2,20(sp)
 8023b34:	003f3d06 	br	802382c <__flash_rwdata_start+0xffff3d10>
 8023b38:	d9800517 	ldw	r6,20(sp)
 8023b3c:	d9c00717 	ldw	r7,28(sp)
 8023b40:	00800c44 	movi	r2,49
 8023b44:	31800044 	addi	r6,r6,1
 8023b48:	d9800515 	stw	r6,20(sp)
 8023b4c:	38800005 	stb	r2,0(r7)
 8023b50:	003edf06 	br	80236d0 <__flash_rwdata_start+0xffff3bb4>
 8023b54:	d8000b15 	stw	zero,44(sp)
 8023b58:	003c9f06 	br	8022dd8 <__flash_rwdata_start+0xffff32bc>
 8023b5c:	903e7e1e 	bne	r18,zero,8023558 <__flash_rwdata_start+0xffff3a3c>
 8023b60:	00800434 	movhi	r2,16
 8023b64:	10bfffc4 	addi	r2,r2,-1
 8023b68:	9884703a 	and	r2,r19,r2
 8023b6c:	1000ea1e 	bne	r2,zero,8023f18 <_dtoa_r+0x1460>
 8023b70:	9cdffc2c 	andhi	r19,r19,32752
 8023b74:	9800e826 	beq	r19,zero,8023f18 <_dtoa_r+0x1460>
 8023b78:	d9c00817 	ldw	r7,32(sp)
 8023b7c:	b5800044 	addi	r22,r22,1
 8023b80:	04c00044 	movi	r19,1
 8023b84:	39c00044 	addi	r7,r7,1
 8023b88:	d9c00815 	stw	r7,32(sp)
 8023b8c:	d8800d17 	ldw	r2,52(sp)
 8023b90:	103e721e 	bne	r2,zero,802355c <__flash_rwdata_start+0xffff3a40>
 8023b94:	00800044 	movi	r2,1
 8023b98:	003e7906 	br	8023580 <__flash_rwdata_start+0xffff3a64>
 8023b9c:	8009883a 	mov	r4,r16
 8023ba0:	802cfa00 	call	802cfa0 <__floatsidf>
 8023ba4:	d9800f17 	ldw	r6,60(sp)
 8023ba8:	d9c01017 	ldw	r7,64(sp)
 8023bac:	1009883a 	mov	r4,r2
 8023bb0:	180b883a 	mov	r5,r3
 8023bb4:	802bdb80 	call	802bdb8 <__muldf3>
 8023bb8:	000d883a 	mov	r6,zero
 8023bbc:	01d00734 	movhi	r7,16412
 8023bc0:	1009883a 	mov	r4,r2
 8023bc4:	180b883a 	mov	r5,r3
 8023bc8:	802a8e40 	call	802a8e4 <__adddf3>
 8023bcc:	047f3034 	movhi	r17,64704
 8023bd0:	1021883a 	mov	r16,r2
 8023bd4:	1c63883a 	add	r17,r3,r17
 8023bd8:	d9000f17 	ldw	r4,60(sp)
 8023bdc:	d9401017 	ldw	r5,64(sp)
 8023be0:	000d883a 	mov	r6,zero
 8023be4:	01d00534 	movhi	r7,16404
 8023be8:	802c6240 	call	802c624 <__subdf3>
 8023bec:	800d883a 	mov	r6,r16
 8023bf0:	880f883a 	mov	r7,r17
 8023bf4:	1009883a 	mov	r4,r2
 8023bf8:	180b883a 	mov	r5,r3
 8023bfc:	102b883a 	mov	r21,r2
 8023c00:	1829883a 	mov	r20,r3
 8023c04:	802bbe80 	call	802bbe8 <__gedf2>
 8023c08:	00806c16 	blt	zero,r2,8023dbc <_dtoa_r+0x1304>
 8023c0c:	89e0003c 	xorhi	r7,r17,32768
 8023c10:	800d883a 	mov	r6,r16
 8023c14:	a809883a 	mov	r4,r21
 8023c18:	a00b883a 	mov	r5,r20
 8023c1c:	802bcc40 	call	802bcc4 <__ledf2>
 8023c20:	103d7e0e 	bge	r2,zero,802321c <__flash_rwdata_start+0xffff3700>
 8023c24:	002b883a 	mov	r21,zero
 8023c28:	0023883a 	mov	r17,zero
 8023c2c:	003efb06 	br	802381c <__flash_rwdata_start+0xffff3d00>
 8023c30:	d8800717 	ldw	r2,28(sp)
 8023c34:	003bd006 	br	8022b78 <__flash_rwdata_start+0xffff305c>
 8023c38:	d9000a17 	ldw	r4,40(sp)
 8023c3c:	d9800d17 	ldw	r6,52(sp)
 8023c40:	dd400a15 	stw	r21,40(sp)
 8023c44:	a905c83a 	sub	r2,r21,r4
 8023c48:	308d883a 	add	r6,r6,r2
 8023c4c:	d9800d15 	stw	r6,52(sp)
 8023c50:	002b883a 	mov	r21,zero
 8023c54:	003e0606 	br	8023470 <__flash_rwdata_start+0xffff3954>
 8023c58:	9023883a 	mov	r17,r18
 8023c5c:	9829883a 	mov	r20,r19
 8023c60:	04000084 	movi	r16,2
 8023c64:	003c9206 	br	8022eb0 <__flash_rwdata_start+0xffff3394>
 8023c68:	04000044 	movi	r16,1
 8023c6c:	dc000c15 	stw	r16,48(sp)
 8023c70:	dc000615 	stw	r16,24(sp)
 8023c74:	dc002215 	stw	r16,136(sp)
 8023c78:	e0001115 	stw	zero,68(fp)
 8023c7c:	000b883a 	mov	r5,zero
 8023c80:	003c6906 	br	8022e28 <__flash_rwdata_start+0xffff330c>
 8023c84:	3021883a 	mov	r16,r6
 8023c88:	003ffb06 	br	8023c78 <__flash_rwdata_start+0xffff415c>
 8023c8c:	1000021e 	bne	r2,zero,8023c98 <_dtoa_r+0x11e0>
 8023c90:	4200004c 	andi	r8,r8,1
 8023c94:	403e7d1e 	bne	r8,zero,802368c <__flash_rwdata_start+0xffff3b70>
 8023c98:	01000c04 	movi	r4,48
 8023c9c:	00000106 	br	8023ca4 <_dtoa_r+0x11ec>
 8023ca0:	102f883a 	mov	r23,r2
 8023ca4:	b8bfffc4 	addi	r2,r23,-1
 8023ca8:	10c00007 	ldb	r3,0(r2)
 8023cac:	193ffc26 	beq	r3,r4,8023ca0 <__flash_rwdata_start+0xffff4184>
 8023cb0:	003e8706 	br	80236d0 <__flash_rwdata_start+0xffff3bb4>
 8023cb4:	d8800517 	ldw	r2,20(sp)
 8023cb8:	00a3c83a 	sub	r17,zero,r2
 8023cbc:	8800a426 	beq	r17,zero,8023f50 <_dtoa_r+0x1498>
 8023cc0:	888003cc 	andi	r2,r17,15
 8023cc4:	100490fa 	slli	r2,r2,3
 8023cc8:	00c00034 	movhi	r3,0
 8023ccc:	18c03b04 	addi	r3,r3,236
 8023cd0:	1885883a 	add	r2,r3,r2
 8023cd4:	11800017 	ldw	r6,0(r2)
 8023cd8:	11c00117 	ldw	r7,4(r2)
 8023cdc:	9009883a 	mov	r4,r18
 8023ce0:	980b883a 	mov	r5,r19
 8023ce4:	8823d13a 	srai	r17,r17,4
 8023ce8:	802bdb80 	call	802bdb8 <__muldf3>
 8023cec:	d8800f15 	stw	r2,60(sp)
 8023cf0:	d8c01015 	stw	r3,64(sp)
 8023cf4:	8800e826 	beq	r17,zero,8024098 <_dtoa_r+0x15e0>
 8023cf8:	05000034 	movhi	r20,0
 8023cfc:	a5003104 	addi	r20,r20,196
 8023d00:	04000084 	movi	r16,2
 8023d04:	8980004c 	andi	r6,r17,1
 8023d08:	1009883a 	mov	r4,r2
 8023d0c:	8823d07a 	srai	r17,r17,1
 8023d10:	180b883a 	mov	r5,r3
 8023d14:	30000426 	beq	r6,zero,8023d28 <_dtoa_r+0x1270>
 8023d18:	a1800017 	ldw	r6,0(r20)
 8023d1c:	a1c00117 	ldw	r7,4(r20)
 8023d20:	84000044 	addi	r16,r16,1
 8023d24:	802bdb80 	call	802bdb8 <__muldf3>
 8023d28:	a5000204 	addi	r20,r20,8
 8023d2c:	883ff51e 	bne	r17,zero,8023d04 <__flash_rwdata_start+0xffff41e8>
 8023d30:	d8800f15 	stw	r2,60(sp)
 8023d34:	d8c01015 	stw	r3,64(sp)
 8023d38:	003c7606 	br	8022f14 <__flash_rwdata_start+0xffff33f8>
 8023d3c:	00c00c04 	movi	r3,48
 8023d40:	10c00005 	stb	r3,0(r2)
 8023d44:	d8c00517 	ldw	r3,20(sp)
 8023d48:	bd3fffc3 	ldbu	r20,-1(r23)
 8023d4c:	18c00044 	addi	r3,r3,1
 8023d50:	d8c00515 	stw	r3,20(sp)
 8023d54:	003db906 	br	802343c <__flash_rwdata_start+0xffff3920>
 8023d58:	89400117 	ldw	r5,4(r17)
 8023d5c:	e009883a 	mov	r4,fp
 8023d60:	8025b4c0 	call	8025b4c <_Balloc>
 8023d64:	89800417 	ldw	r6,16(r17)
 8023d68:	89400304 	addi	r5,r17,12
 8023d6c:	11000304 	addi	r4,r2,12
 8023d70:	31800084 	addi	r6,r6,2
 8023d74:	318d883a 	add	r6,r6,r6
 8023d78:	318d883a 	add	r6,r6,r6
 8023d7c:	1027883a 	mov	r19,r2
 8023d80:	80258dc0 	call	80258dc <memcpy>
 8023d84:	01800044 	movi	r6,1
 8023d88:	980b883a 	mov	r5,r19
 8023d8c:	e009883a 	mov	r4,fp
 8023d90:	80263880 	call	8026388 <__lshift>
 8023d94:	1029883a 	mov	r20,r2
 8023d98:	003ecc06 	br	80238cc <__flash_rwdata_start+0xffff3db0>
 8023d9c:	00800e44 	movi	r2,57
 8023da0:	90809026 	beq	r18,r2,8023fe4 <_dtoa_r+0x152c>
 8023da4:	92000044 	addi	r8,r18,1
 8023da8:	003f1f06 	br	8023a28 <__flash_rwdata_start+0xffff3f0c>
 8023dac:	9011883a 	mov	r8,r18
 8023db0:	8825883a 	mov	r18,r17
 8023db4:	a023883a 	mov	r17,r20
 8023db8:	003e2906 	br	8023660 <__flash_rwdata_start+0xffff3b44>
 8023dbc:	002b883a 	mov	r21,zero
 8023dc0:	0023883a 	mov	r17,zero
 8023dc4:	003f5406 	br	8023b18 <__flash_rwdata_start+0xffff3ffc>
 8023dc8:	61bfffc4 	addi	r6,r12,-1
 8023dcc:	300490fa 	slli	r2,r6,3
 8023dd0:	00c00034 	movhi	r3,0
 8023dd4:	18c03b04 	addi	r3,r3,236
 8023dd8:	1885883a 	add	r2,r3,r2
 8023ddc:	11000017 	ldw	r4,0(r2)
 8023de0:	11400117 	ldw	r5,4(r2)
 8023de4:	d8800717 	ldw	r2,28(sp)
 8023de8:	880f883a 	mov	r7,r17
 8023dec:	d9801215 	stw	r6,72(sp)
 8023df0:	800d883a 	mov	r6,r16
 8023df4:	db001615 	stw	r12,88(sp)
 8023df8:	15c00044 	addi	r23,r2,1
 8023dfc:	802bdb80 	call	802bdb8 <__muldf3>
 8023e00:	d9401017 	ldw	r5,64(sp)
 8023e04:	d9000f17 	ldw	r4,60(sp)
 8023e08:	d8c01515 	stw	r3,84(sp)
 8023e0c:	d8801415 	stw	r2,80(sp)
 8023e10:	802cf200 	call	802cf20 <__fixdfsi>
 8023e14:	1009883a 	mov	r4,r2
 8023e18:	1021883a 	mov	r16,r2
 8023e1c:	802cfa00 	call	802cfa0 <__floatsidf>
 8023e20:	d9000f17 	ldw	r4,60(sp)
 8023e24:	d9401017 	ldw	r5,64(sp)
 8023e28:	100d883a 	mov	r6,r2
 8023e2c:	180f883a 	mov	r7,r3
 8023e30:	802c6240 	call	802c624 <__subdf3>
 8023e34:	1829883a 	mov	r20,r3
 8023e38:	d8c00717 	ldw	r3,28(sp)
 8023e3c:	84000c04 	addi	r16,r16,48
 8023e40:	1023883a 	mov	r17,r2
 8023e44:	1c000005 	stb	r16,0(r3)
 8023e48:	db001617 	ldw	r12,88(sp)
 8023e4c:	00800044 	movi	r2,1
 8023e50:	60802226 	beq	r12,r2,8023edc <_dtoa_r+0x1424>
 8023e54:	d9c00717 	ldw	r7,28(sp)
 8023e58:	8805883a 	mov	r2,r17
 8023e5c:	b82b883a 	mov	r21,r23
 8023e60:	3b19883a 	add	r12,r7,r12
 8023e64:	6023883a 	mov	r17,r12
 8023e68:	a007883a 	mov	r3,r20
 8023e6c:	dc800f15 	stw	r18,60(sp)
 8023e70:	000d883a 	mov	r6,zero
 8023e74:	01d00934 	movhi	r7,16420
 8023e78:	1009883a 	mov	r4,r2
 8023e7c:	180b883a 	mov	r5,r3
 8023e80:	802bdb80 	call	802bdb8 <__muldf3>
 8023e84:	180b883a 	mov	r5,r3
 8023e88:	1009883a 	mov	r4,r2
 8023e8c:	1829883a 	mov	r20,r3
 8023e90:	1025883a 	mov	r18,r2
 8023e94:	802cf200 	call	802cf20 <__fixdfsi>
 8023e98:	1009883a 	mov	r4,r2
 8023e9c:	1021883a 	mov	r16,r2
 8023ea0:	802cfa00 	call	802cfa0 <__floatsidf>
 8023ea4:	100d883a 	mov	r6,r2
 8023ea8:	180f883a 	mov	r7,r3
 8023eac:	9009883a 	mov	r4,r18
 8023eb0:	a00b883a 	mov	r5,r20
 8023eb4:	84000c04 	addi	r16,r16,48
 8023eb8:	802c6240 	call	802c624 <__subdf3>
 8023ebc:	ad400044 	addi	r21,r21,1
 8023ec0:	ac3fffc5 	stb	r16,-1(r21)
 8023ec4:	ac7fea1e 	bne	r21,r17,8023e70 <__flash_rwdata_start+0xffff4354>
 8023ec8:	1023883a 	mov	r17,r2
 8023ecc:	d8801217 	ldw	r2,72(sp)
 8023ed0:	dc800f17 	ldw	r18,60(sp)
 8023ed4:	1829883a 	mov	r20,r3
 8023ed8:	b8af883a 	add	r23,r23,r2
 8023edc:	d9001417 	ldw	r4,80(sp)
 8023ee0:	d9401517 	ldw	r5,84(sp)
 8023ee4:	000d883a 	mov	r6,zero
 8023ee8:	01cff834 	movhi	r7,16352
 8023eec:	802a8e40 	call	802a8e4 <__adddf3>
 8023ef0:	880d883a 	mov	r6,r17
 8023ef4:	a00f883a 	mov	r7,r20
 8023ef8:	1009883a 	mov	r4,r2
 8023efc:	180b883a 	mov	r5,r3
 8023f00:	802bcc40 	call	802bcc4 <__ledf2>
 8023f04:	10003e0e 	bge	r2,zero,8024000 <_dtoa_r+0x1548>
 8023f08:	d9001317 	ldw	r4,76(sp)
 8023f0c:	bd3fffc3 	ldbu	r20,-1(r23)
 8023f10:	d9000515 	stw	r4,20(sp)
 8023f14:	003d3b06 	br	8023404 <__flash_rwdata_start+0xffff38e8>
 8023f18:	0027883a 	mov	r19,zero
 8023f1c:	003f1b06 	br	8023b8c <__flash_rwdata_start+0xffff4070>
 8023f20:	d8800817 	ldw	r2,32(sp)
 8023f24:	11e9c83a 	sub	r20,r2,r7
 8023f28:	0005883a 	mov	r2,zero
 8023f2c:	003d5406 	br	8023480 <__flash_rwdata_start+0xffff3964>
 8023f30:	00800044 	movi	r2,1
 8023f34:	003dc706 	br	8023654 <__flash_rwdata_start+0xffff3b38>
 8023f38:	d8c00217 	ldw	r3,8(sp)
 8023f3c:	00800d84 	movi	r2,54
 8023f40:	dd400a17 	ldw	r21,40(sp)
 8023f44:	10c5c83a 	sub	r2,r2,r3
 8023f48:	dd000817 	ldw	r20,32(sp)
 8023f4c:	003d4c06 	br	8023480 <__flash_rwdata_start+0xffff3964>
 8023f50:	dc800f15 	stw	r18,60(sp)
 8023f54:	dcc01015 	stw	r19,64(sp)
 8023f58:	04000084 	movi	r16,2
 8023f5c:	003bed06 	br	8022f14 <__flash_rwdata_start+0xffff33f8>
 8023f60:	d9000617 	ldw	r4,24(sp)
 8023f64:	203f0d26 	beq	r4,zero,8023b9c <__flash_rwdata_start+0xffff4080>
 8023f68:	d9800c17 	ldw	r6,48(sp)
 8023f6c:	01bcab0e 	bge	zero,r6,802321c <__flash_rwdata_start+0xffff3700>
 8023f70:	d9401017 	ldw	r5,64(sp)
 8023f74:	d9000f17 	ldw	r4,60(sp)
 8023f78:	000d883a 	mov	r6,zero
 8023f7c:	01d00934 	movhi	r7,16420
 8023f80:	802bdb80 	call	802bdb8 <__muldf3>
 8023f84:	81000044 	addi	r4,r16,1
 8023f88:	d8800f15 	stw	r2,60(sp)
 8023f8c:	d8c01015 	stw	r3,64(sp)
 8023f90:	802cfa00 	call	802cfa0 <__floatsidf>
 8023f94:	d9800f17 	ldw	r6,60(sp)
 8023f98:	d9c01017 	ldw	r7,64(sp)
 8023f9c:	1009883a 	mov	r4,r2
 8023fa0:	180b883a 	mov	r5,r3
 8023fa4:	802bdb80 	call	802bdb8 <__muldf3>
 8023fa8:	01d00734 	movhi	r7,16412
 8023fac:	000d883a 	mov	r6,zero
 8023fb0:	1009883a 	mov	r4,r2
 8023fb4:	180b883a 	mov	r5,r3
 8023fb8:	802a8e40 	call	802a8e4 <__adddf3>
 8023fbc:	d9c00517 	ldw	r7,20(sp)
 8023fc0:	047f3034 	movhi	r17,64704
 8023fc4:	1021883a 	mov	r16,r2
 8023fc8:	39ffffc4 	addi	r7,r7,-1
 8023fcc:	d9c01315 	stw	r7,76(sp)
 8023fd0:	1c63883a 	add	r17,r3,r17
 8023fd4:	db000c17 	ldw	r12,48(sp)
 8023fd8:	003bea06 	br	8022f84 <__flash_rwdata_start+0xffff3468>
 8023fdc:	dc000915 	stw	r16,36(sp)
 8023fe0:	003e0e06 	br	802381c <__flash_rwdata_start+0xffff3d00>
 8023fe4:	01000e44 	movi	r4,57
 8023fe8:	8825883a 	mov	r18,r17
 8023fec:	9dc00044 	addi	r23,r19,1
 8023ff0:	99000005 	stb	r4,0(r19)
 8023ff4:	a023883a 	mov	r17,r20
 8023ff8:	dc000915 	stw	r16,36(sp)
 8023ffc:	003da406 	br	8023690 <__flash_rwdata_start+0xffff3b74>
 8024000:	d9801417 	ldw	r6,80(sp)
 8024004:	d9c01517 	ldw	r7,84(sp)
 8024008:	0009883a 	mov	r4,zero
 802400c:	014ff834 	movhi	r5,16352
 8024010:	802c6240 	call	802c624 <__subdf3>
 8024014:	880d883a 	mov	r6,r17
 8024018:	a00f883a 	mov	r7,r20
 802401c:	1009883a 	mov	r4,r2
 8024020:	180b883a 	mov	r5,r3
 8024024:	802bbe80 	call	802bbe8 <__gedf2>
 8024028:	00bc7c0e 	bge	zero,r2,802321c <__flash_rwdata_start+0xffff3700>
 802402c:	01000c04 	movi	r4,48
 8024030:	00000106 	br	8024038 <_dtoa_r+0x1580>
 8024034:	102f883a 	mov	r23,r2
 8024038:	b8bfffc4 	addi	r2,r23,-1
 802403c:	10c00007 	ldb	r3,0(r2)
 8024040:	193ffc26 	beq	r3,r4,8024034 <__flash_rwdata_start+0xffff4518>
 8024044:	d9801317 	ldw	r6,76(sp)
 8024048:	d9800515 	stw	r6,20(sp)
 802404c:	003c4406 	br	8023160 <__flash_rwdata_start+0xffff3644>
 8024050:	d9801317 	ldw	r6,76(sp)
 8024054:	d9800515 	stw	r6,20(sp)
 8024058:	003cea06 	br	8023404 <__flash_rwdata_start+0xffff38e8>
 802405c:	dd800f17 	ldw	r22,60(sp)
 8024060:	dcc01017 	ldw	r19,64(sp)
 8024064:	dc801217 	ldw	r18,72(sp)
 8024068:	003c6c06 	br	802321c <__flash_rwdata_start+0xffff3700>
 802406c:	903e031e 	bne	r18,zero,802387c <__flash_rwdata_start+0xffff3d60>
 8024070:	003ebb06 	br	8023b60 <__flash_rwdata_start+0xffff4044>
 8024074:	103e6c1e 	bne	r2,zero,8023a28 <__flash_rwdata_start+0xffff3f0c>
 8024078:	4080004c 	andi	r2,r8,1
 802407c:	103e6a26 	beq	r2,zero,8023a28 <__flash_rwdata_start+0xffff3f0c>
 8024080:	003e6606 	br	8023a1c <__flash_rwdata_start+0xffff3f00>
 8024084:	d8c00317 	ldw	r3,12(sp)
 8024088:	00800084 	movi	r2,2
 802408c:	10c02916 	blt	r2,r3,8024134 <_dtoa_r+0x167c>
 8024090:	d9000c17 	ldw	r4,48(sp)
 8024094:	003e8806 	br	8023ab8 <__flash_rwdata_start+0xffff3f9c>
 8024098:	04000084 	movi	r16,2
 802409c:	003b9d06 	br	8022f14 <__flash_rwdata_start+0xffff33f8>
 80240a0:	d9001317 	ldw	r4,76(sp)
 80240a4:	d9000515 	stw	r4,20(sp)
 80240a8:	003cd606 	br	8023404 <__flash_rwdata_start+0xffff38e8>
 80240ac:	d8801317 	ldw	r2,76(sp)
 80240b0:	d8800515 	stw	r2,20(sp)
 80240b4:	003c2a06 	br	8023160 <__flash_rwdata_start+0xffff3644>
 80240b8:	d9800317 	ldw	r6,12(sp)
 80240bc:	00800084 	movi	r2,2
 80240c0:	11801516 	blt	r2,r6,8024118 <_dtoa_r+0x1660>
 80240c4:	d9c00c17 	ldw	r7,48(sp)
 80240c8:	d9c00615 	stw	r7,24(sp)
 80240cc:	003df706 	br	80238ac <__flash_rwdata_start+0xffff3d90>
 80240d0:	193d3926 	beq	r3,r4,80235b8 <__flash_rwdata_start+0xffff3a9c>
 80240d4:	00c00f04 	movi	r3,60
 80240d8:	1885c83a 	sub	r2,r3,r2
 80240dc:	003ddf06 	br	802385c <__flash_rwdata_start+0xffff3d40>
 80240e0:	e009883a 	mov	r4,fp
 80240e4:	e0001115 	stw	zero,68(fp)
 80240e8:	000b883a 	mov	r5,zero
 80240ec:	8025b4c0 	call	8025b4c <_Balloc>
 80240f0:	d8800715 	stw	r2,28(sp)
 80240f4:	d8c00717 	ldw	r3,28(sp)
 80240f8:	00bfffc4 	movi	r2,-1
 80240fc:	01000044 	movi	r4,1
 8024100:	d8800c15 	stw	r2,48(sp)
 8024104:	e0c01015 	stw	r3,64(fp)
 8024108:	d9000b15 	stw	r4,44(sp)
 802410c:	d8800615 	stw	r2,24(sp)
 8024110:	d8002215 	stw	zero,136(sp)
 8024114:	003c4106 	br	802321c <__flash_rwdata_start+0xffff3700>
 8024118:	d8c00c17 	ldw	r3,48(sp)
 802411c:	d8c00615 	stw	r3,24(sp)
 8024120:	003e7006 	br	8023ae4 <__flash_rwdata_start+0xffff3fc8>
 8024124:	04400044 	movi	r17,1
 8024128:	003b2006 	br	8022dac <__flash_rwdata_start+0xffff3290>
 802412c:	000b883a 	mov	r5,zero
 8024130:	003b3d06 	br	8022e28 <__flash_rwdata_start+0xffff330c>
 8024134:	d8800c17 	ldw	r2,48(sp)
 8024138:	d8800615 	stw	r2,24(sp)
 802413c:	003e6906 	br	8023ae4 <__flash_rwdata_start+0xffff3fc8>

08024140 <__sflush_r>:
 8024140:	2880030b 	ldhu	r2,12(r5)
 8024144:	defffb04 	addi	sp,sp,-20
 8024148:	dcc00315 	stw	r19,12(sp)
 802414c:	dc400115 	stw	r17,4(sp)
 8024150:	dfc00415 	stw	ra,16(sp)
 8024154:	dc800215 	stw	r18,8(sp)
 8024158:	dc000015 	stw	r16,0(sp)
 802415c:	10c0020c 	andi	r3,r2,8
 8024160:	2823883a 	mov	r17,r5
 8024164:	2027883a 	mov	r19,r4
 8024168:	1800311e 	bne	r3,zero,8024230 <__sflush_r+0xf0>
 802416c:	28c00117 	ldw	r3,4(r5)
 8024170:	10820014 	ori	r2,r2,2048
 8024174:	2880030d 	sth	r2,12(r5)
 8024178:	00c04b0e 	bge	zero,r3,80242a8 <__sflush_r+0x168>
 802417c:	8a000a17 	ldw	r8,40(r17)
 8024180:	40002326 	beq	r8,zero,8024210 <__sflush_r+0xd0>
 8024184:	9c000017 	ldw	r16,0(r19)
 8024188:	10c4000c 	andi	r3,r2,4096
 802418c:	98000015 	stw	zero,0(r19)
 8024190:	18004826 	beq	r3,zero,80242b4 <__sflush_r+0x174>
 8024194:	89801417 	ldw	r6,80(r17)
 8024198:	10c0010c 	andi	r3,r2,4
 802419c:	18000626 	beq	r3,zero,80241b8 <__sflush_r+0x78>
 80241a0:	88c00117 	ldw	r3,4(r17)
 80241a4:	88800c17 	ldw	r2,48(r17)
 80241a8:	30cdc83a 	sub	r6,r6,r3
 80241ac:	10000226 	beq	r2,zero,80241b8 <__sflush_r+0x78>
 80241b0:	88800f17 	ldw	r2,60(r17)
 80241b4:	308dc83a 	sub	r6,r6,r2
 80241b8:	89400717 	ldw	r5,28(r17)
 80241bc:	000f883a 	mov	r7,zero
 80241c0:	9809883a 	mov	r4,r19
 80241c4:	403ee83a 	callr	r8
 80241c8:	00ffffc4 	movi	r3,-1
 80241cc:	10c04426 	beq	r2,r3,80242e0 <__sflush_r+0x1a0>
 80241d0:	88c0030b 	ldhu	r3,12(r17)
 80241d4:	89000417 	ldw	r4,16(r17)
 80241d8:	88000115 	stw	zero,4(r17)
 80241dc:	197dffcc 	andi	r5,r3,63487
 80241e0:	8940030d 	sth	r5,12(r17)
 80241e4:	89000015 	stw	r4,0(r17)
 80241e8:	18c4000c 	andi	r3,r3,4096
 80241ec:	18002c1e 	bne	r3,zero,80242a0 <__sflush_r+0x160>
 80241f0:	89400c17 	ldw	r5,48(r17)
 80241f4:	9c000015 	stw	r16,0(r19)
 80241f8:	28000526 	beq	r5,zero,8024210 <__sflush_r+0xd0>
 80241fc:	88801004 	addi	r2,r17,64
 8024200:	28800226 	beq	r5,r2,802420c <__sflush_r+0xcc>
 8024204:	9809883a 	mov	r4,r19
 8024208:	80248bc0 	call	80248bc <_free_r>
 802420c:	88000c15 	stw	zero,48(r17)
 8024210:	0005883a 	mov	r2,zero
 8024214:	dfc00417 	ldw	ra,16(sp)
 8024218:	dcc00317 	ldw	r19,12(sp)
 802421c:	dc800217 	ldw	r18,8(sp)
 8024220:	dc400117 	ldw	r17,4(sp)
 8024224:	dc000017 	ldw	r16,0(sp)
 8024228:	dec00504 	addi	sp,sp,20
 802422c:	f800283a 	ret
 8024230:	2c800417 	ldw	r18,16(r5)
 8024234:	903ff626 	beq	r18,zero,8024210 <__flash_rwdata_start+0xffff46f4>
 8024238:	2c000017 	ldw	r16,0(r5)
 802423c:	108000cc 	andi	r2,r2,3
 8024240:	2c800015 	stw	r18,0(r5)
 8024244:	84a1c83a 	sub	r16,r16,r18
 8024248:	1000131e 	bne	r2,zero,8024298 <__sflush_r+0x158>
 802424c:	28800517 	ldw	r2,20(r5)
 8024250:	88800215 	stw	r2,8(r17)
 8024254:	04000316 	blt	zero,r16,8024264 <__sflush_r+0x124>
 8024258:	003fed06 	br	8024210 <__flash_rwdata_start+0xffff46f4>
 802425c:	90a5883a 	add	r18,r18,r2
 8024260:	043feb0e 	bge	zero,r16,8024210 <__flash_rwdata_start+0xffff46f4>
 8024264:	88800917 	ldw	r2,36(r17)
 8024268:	89400717 	ldw	r5,28(r17)
 802426c:	800f883a 	mov	r7,r16
 8024270:	900d883a 	mov	r6,r18
 8024274:	9809883a 	mov	r4,r19
 8024278:	103ee83a 	callr	r2
 802427c:	80a1c83a 	sub	r16,r16,r2
 8024280:	00bff616 	blt	zero,r2,802425c <__flash_rwdata_start+0xffff4740>
 8024284:	88c0030b 	ldhu	r3,12(r17)
 8024288:	00bfffc4 	movi	r2,-1
 802428c:	18c01014 	ori	r3,r3,64
 8024290:	88c0030d 	sth	r3,12(r17)
 8024294:	003fdf06 	br	8024214 <__flash_rwdata_start+0xffff46f8>
 8024298:	0005883a 	mov	r2,zero
 802429c:	003fec06 	br	8024250 <__flash_rwdata_start+0xffff4734>
 80242a0:	88801415 	stw	r2,80(r17)
 80242a4:	003fd206 	br	80241f0 <__flash_rwdata_start+0xffff46d4>
 80242a8:	28c00f17 	ldw	r3,60(r5)
 80242ac:	00ffb316 	blt	zero,r3,802417c <__flash_rwdata_start+0xffff4660>
 80242b0:	003fd706 	br	8024210 <__flash_rwdata_start+0xffff46f4>
 80242b4:	89400717 	ldw	r5,28(r17)
 80242b8:	000d883a 	mov	r6,zero
 80242bc:	01c00044 	movi	r7,1
 80242c0:	9809883a 	mov	r4,r19
 80242c4:	403ee83a 	callr	r8
 80242c8:	100d883a 	mov	r6,r2
 80242cc:	00bfffc4 	movi	r2,-1
 80242d0:	30801426 	beq	r6,r2,8024324 <__sflush_r+0x1e4>
 80242d4:	8880030b 	ldhu	r2,12(r17)
 80242d8:	8a000a17 	ldw	r8,40(r17)
 80242dc:	003fae06 	br	8024198 <__flash_rwdata_start+0xffff467c>
 80242e0:	98c00017 	ldw	r3,0(r19)
 80242e4:	183fba26 	beq	r3,zero,80241d0 <__flash_rwdata_start+0xffff46b4>
 80242e8:	01000744 	movi	r4,29
 80242ec:	19000626 	beq	r3,r4,8024308 <__sflush_r+0x1c8>
 80242f0:	01000584 	movi	r4,22
 80242f4:	19000426 	beq	r3,r4,8024308 <__sflush_r+0x1c8>
 80242f8:	88c0030b 	ldhu	r3,12(r17)
 80242fc:	18c01014 	ori	r3,r3,64
 8024300:	88c0030d 	sth	r3,12(r17)
 8024304:	003fc306 	br	8024214 <__flash_rwdata_start+0xffff46f8>
 8024308:	8880030b 	ldhu	r2,12(r17)
 802430c:	88c00417 	ldw	r3,16(r17)
 8024310:	88000115 	stw	zero,4(r17)
 8024314:	10bdffcc 	andi	r2,r2,63487
 8024318:	8880030d 	sth	r2,12(r17)
 802431c:	88c00015 	stw	r3,0(r17)
 8024320:	003fb306 	br	80241f0 <__flash_rwdata_start+0xffff46d4>
 8024324:	98800017 	ldw	r2,0(r19)
 8024328:	103fea26 	beq	r2,zero,80242d4 <__flash_rwdata_start+0xffff47b8>
 802432c:	00c00744 	movi	r3,29
 8024330:	10c00226 	beq	r2,r3,802433c <__sflush_r+0x1fc>
 8024334:	00c00584 	movi	r3,22
 8024338:	10c0031e 	bne	r2,r3,8024348 <__sflush_r+0x208>
 802433c:	9c000015 	stw	r16,0(r19)
 8024340:	0005883a 	mov	r2,zero
 8024344:	003fb306 	br	8024214 <__flash_rwdata_start+0xffff46f8>
 8024348:	88c0030b 	ldhu	r3,12(r17)
 802434c:	3005883a 	mov	r2,r6
 8024350:	18c01014 	ori	r3,r3,64
 8024354:	88c0030d 	sth	r3,12(r17)
 8024358:	003fae06 	br	8024214 <__flash_rwdata_start+0xffff46f8>

0802435c <_fflush_r>:
 802435c:	defffd04 	addi	sp,sp,-12
 8024360:	dc000115 	stw	r16,4(sp)
 8024364:	dfc00215 	stw	ra,8(sp)
 8024368:	2021883a 	mov	r16,r4
 802436c:	20000226 	beq	r4,zero,8024378 <_fflush_r+0x1c>
 8024370:	20800e17 	ldw	r2,56(r4)
 8024374:	10000c26 	beq	r2,zero,80243a8 <_fflush_r+0x4c>
 8024378:	2880030f 	ldh	r2,12(r5)
 802437c:	1000051e 	bne	r2,zero,8024394 <_fflush_r+0x38>
 8024380:	0005883a 	mov	r2,zero
 8024384:	dfc00217 	ldw	ra,8(sp)
 8024388:	dc000117 	ldw	r16,4(sp)
 802438c:	dec00304 	addi	sp,sp,12
 8024390:	f800283a 	ret
 8024394:	8009883a 	mov	r4,r16
 8024398:	dfc00217 	ldw	ra,8(sp)
 802439c:	dc000117 	ldw	r16,4(sp)
 80243a0:	dec00304 	addi	sp,sp,12
 80243a4:	80241401 	jmpi	8024140 <__sflush_r>
 80243a8:	d9400015 	stw	r5,0(sp)
 80243ac:	80247480 	call	8024748 <__sinit>
 80243b0:	d9400017 	ldw	r5,0(sp)
 80243b4:	003ff006 	br	8024378 <__flash_rwdata_start+0xffff485c>

080243b8 <fflush>:
 80243b8:	20000526 	beq	r4,zero,80243d0 <fflush+0x18>
 80243bc:	00800034 	movhi	r2,0
 80243c0:	10876c04 	addi	r2,r2,7600
 80243c4:	200b883a 	mov	r5,r4
 80243c8:	11000017 	ldw	r4,0(r2)
 80243cc:	802435c1 	jmpi	802435c <_fflush_r>
 80243d0:	00800034 	movhi	r2,0
 80243d4:	10876b04 	addi	r2,r2,7596
 80243d8:	11000017 	ldw	r4,0(r2)
 80243dc:	014200b4 	movhi	r5,2050
 80243e0:	2950d704 	addi	r5,r5,17244
 80243e4:	8024c901 	jmpi	8024c90 <_fwalk_reent>

080243e8 <__fp_unlock>:
 80243e8:	0005883a 	mov	r2,zero
 80243ec:	f800283a 	ret

080243f0 <_cleanup_r>:
 80243f0:	014200f4 	movhi	r5,2051
 80243f4:	29620104 	addi	r5,r5,-30716
 80243f8:	8024c901 	jmpi	8024c90 <_fwalk_reent>

080243fc <__sinit.part.1>:
 80243fc:	defff704 	addi	sp,sp,-36
 8024400:	00c200b4 	movhi	r3,2050
 8024404:	dfc00815 	stw	ra,32(sp)
 8024408:	ddc00715 	stw	r23,28(sp)
 802440c:	dd800615 	stw	r22,24(sp)
 8024410:	dd400515 	stw	r21,20(sp)
 8024414:	dd000415 	stw	r20,16(sp)
 8024418:	dcc00315 	stw	r19,12(sp)
 802441c:	dc800215 	stw	r18,8(sp)
 8024420:	dc400115 	stw	r17,4(sp)
 8024424:	dc000015 	stw	r16,0(sp)
 8024428:	18d0fc04 	addi	r3,r3,17392
 802442c:	24000117 	ldw	r16,4(r4)
 8024430:	20c00f15 	stw	r3,60(r4)
 8024434:	2080bb04 	addi	r2,r4,748
 8024438:	00c000c4 	movi	r3,3
 802443c:	20c0b915 	stw	r3,740(r4)
 8024440:	2080ba15 	stw	r2,744(r4)
 8024444:	2000b815 	stw	zero,736(r4)
 8024448:	05c00204 	movi	r23,8
 802444c:	00800104 	movi	r2,4
 8024450:	2025883a 	mov	r18,r4
 8024454:	b80d883a 	mov	r6,r23
 8024458:	81001704 	addi	r4,r16,92
 802445c:	000b883a 	mov	r5,zero
 8024460:	80000015 	stw	zero,0(r16)
 8024464:	80000115 	stw	zero,4(r16)
 8024468:	80000215 	stw	zero,8(r16)
 802446c:	8080030d 	sth	r2,12(r16)
 8024470:	80001915 	stw	zero,100(r16)
 8024474:	8000038d 	sth	zero,14(r16)
 8024478:	80000415 	stw	zero,16(r16)
 802447c:	80000515 	stw	zero,20(r16)
 8024480:	80000615 	stw	zero,24(r16)
 8024484:	8025a240 	call	8025a24 <memset>
 8024488:	058200b4 	movhi	r22,2050
 802448c:	94400217 	ldw	r17,8(r18)
 8024490:	054200b4 	movhi	r21,2050
 8024494:	050200b4 	movhi	r20,2050
 8024498:	04c200b4 	movhi	r19,2050
 802449c:	b59b3304 	addi	r22,r22,27852
 80244a0:	ad5b4a04 	addi	r21,r21,27944
 80244a4:	a51b6904 	addi	r20,r20,28068
 80244a8:	9cdb8004 	addi	r19,r19,28160
 80244ac:	85800815 	stw	r22,32(r16)
 80244b0:	85400915 	stw	r21,36(r16)
 80244b4:	85000a15 	stw	r20,40(r16)
 80244b8:	84c00b15 	stw	r19,44(r16)
 80244bc:	84000715 	stw	r16,28(r16)
 80244c0:	00800284 	movi	r2,10
 80244c4:	8880030d 	sth	r2,12(r17)
 80244c8:	00800044 	movi	r2,1
 80244cc:	b80d883a 	mov	r6,r23
 80244d0:	89001704 	addi	r4,r17,92
 80244d4:	000b883a 	mov	r5,zero
 80244d8:	88000015 	stw	zero,0(r17)
 80244dc:	88000115 	stw	zero,4(r17)
 80244e0:	88000215 	stw	zero,8(r17)
 80244e4:	88001915 	stw	zero,100(r17)
 80244e8:	8880038d 	sth	r2,14(r17)
 80244ec:	88000415 	stw	zero,16(r17)
 80244f0:	88000515 	stw	zero,20(r17)
 80244f4:	88000615 	stw	zero,24(r17)
 80244f8:	8025a240 	call	8025a24 <memset>
 80244fc:	94000317 	ldw	r16,12(r18)
 8024500:	00800484 	movi	r2,18
 8024504:	8c400715 	stw	r17,28(r17)
 8024508:	8d800815 	stw	r22,32(r17)
 802450c:	8d400915 	stw	r21,36(r17)
 8024510:	8d000a15 	stw	r20,40(r17)
 8024514:	8cc00b15 	stw	r19,44(r17)
 8024518:	8080030d 	sth	r2,12(r16)
 802451c:	00800084 	movi	r2,2
 8024520:	80000015 	stw	zero,0(r16)
 8024524:	80000115 	stw	zero,4(r16)
 8024528:	80000215 	stw	zero,8(r16)
 802452c:	80001915 	stw	zero,100(r16)
 8024530:	8080038d 	sth	r2,14(r16)
 8024534:	80000415 	stw	zero,16(r16)
 8024538:	80000515 	stw	zero,20(r16)
 802453c:	80000615 	stw	zero,24(r16)
 8024540:	b80d883a 	mov	r6,r23
 8024544:	000b883a 	mov	r5,zero
 8024548:	81001704 	addi	r4,r16,92
 802454c:	8025a240 	call	8025a24 <memset>
 8024550:	00800044 	movi	r2,1
 8024554:	84000715 	stw	r16,28(r16)
 8024558:	85800815 	stw	r22,32(r16)
 802455c:	85400915 	stw	r21,36(r16)
 8024560:	85000a15 	stw	r20,40(r16)
 8024564:	84c00b15 	stw	r19,44(r16)
 8024568:	90800e15 	stw	r2,56(r18)
 802456c:	dfc00817 	ldw	ra,32(sp)
 8024570:	ddc00717 	ldw	r23,28(sp)
 8024574:	dd800617 	ldw	r22,24(sp)
 8024578:	dd400517 	ldw	r21,20(sp)
 802457c:	dd000417 	ldw	r20,16(sp)
 8024580:	dcc00317 	ldw	r19,12(sp)
 8024584:	dc800217 	ldw	r18,8(sp)
 8024588:	dc400117 	ldw	r17,4(sp)
 802458c:	dc000017 	ldw	r16,0(sp)
 8024590:	dec00904 	addi	sp,sp,36
 8024594:	f800283a 	ret

08024598 <__fp_lock>:
 8024598:	0005883a 	mov	r2,zero
 802459c:	f800283a 	ret

080245a0 <__sfmoreglue>:
 80245a0:	defffc04 	addi	sp,sp,-16
 80245a4:	dc800215 	stw	r18,8(sp)
 80245a8:	2825883a 	mov	r18,r5
 80245ac:	dc000015 	stw	r16,0(sp)
 80245b0:	01401a04 	movi	r5,104
 80245b4:	2021883a 	mov	r16,r4
 80245b8:	913fffc4 	addi	r4,r18,-1
 80245bc:	dfc00315 	stw	ra,12(sp)
 80245c0:	dc400115 	stw	r17,4(sp)
 80245c4:	802a8bc0 	call	802a8bc <__mulsi3>
 80245c8:	8009883a 	mov	r4,r16
 80245cc:	11401d04 	addi	r5,r2,116
 80245d0:	1023883a 	mov	r17,r2
 80245d4:	8024fec0 	call	8024fec <_malloc_r>
 80245d8:	1021883a 	mov	r16,r2
 80245dc:	10000726 	beq	r2,zero,80245fc <__sfmoreglue+0x5c>
 80245e0:	11000304 	addi	r4,r2,12
 80245e4:	10000015 	stw	zero,0(r2)
 80245e8:	14800115 	stw	r18,4(r2)
 80245ec:	11000215 	stw	r4,8(r2)
 80245f0:	89801a04 	addi	r6,r17,104
 80245f4:	000b883a 	mov	r5,zero
 80245f8:	8025a240 	call	8025a24 <memset>
 80245fc:	8005883a 	mov	r2,r16
 8024600:	dfc00317 	ldw	ra,12(sp)
 8024604:	dc800217 	ldw	r18,8(sp)
 8024608:	dc400117 	ldw	r17,4(sp)
 802460c:	dc000017 	ldw	r16,0(sp)
 8024610:	dec00404 	addi	sp,sp,16
 8024614:	f800283a 	ret

08024618 <__sfp>:
 8024618:	defffb04 	addi	sp,sp,-20
 802461c:	dc000015 	stw	r16,0(sp)
 8024620:	04000034 	movhi	r16,0
 8024624:	84076b04 	addi	r16,r16,7596
 8024628:	dcc00315 	stw	r19,12(sp)
 802462c:	2027883a 	mov	r19,r4
 8024630:	81000017 	ldw	r4,0(r16)
 8024634:	dfc00415 	stw	ra,16(sp)
 8024638:	dc800215 	stw	r18,8(sp)
 802463c:	20800e17 	ldw	r2,56(r4)
 8024640:	dc400115 	stw	r17,4(sp)
 8024644:	1000021e 	bne	r2,zero,8024650 <__sfp+0x38>
 8024648:	80243fc0 	call	80243fc <__sinit.part.1>
 802464c:	81000017 	ldw	r4,0(r16)
 8024650:	2480b804 	addi	r18,r4,736
 8024654:	047fffc4 	movi	r17,-1
 8024658:	91000117 	ldw	r4,4(r18)
 802465c:	94000217 	ldw	r16,8(r18)
 8024660:	213fffc4 	addi	r4,r4,-1
 8024664:	20000a16 	blt	r4,zero,8024690 <__sfp+0x78>
 8024668:	8080030f 	ldh	r2,12(r16)
 802466c:	10000c26 	beq	r2,zero,80246a0 <__sfp+0x88>
 8024670:	80c01d04 	addi	r3,r16,116
 8024674:	00000206 	br	8024680 <__sfp+0x68>
 8024678:	18bfe60f 	ldh	r2,-104(r3)
 802467c:	10000826 	beq	r2,zero,80246a0 <__sfp+0x88>
 8024680:	213fffc4 	addi	r4,r4,-1
 8024684:	1c3ffd04 	addi	r16,r3,-12
 8024688:	18c01a04 	addi	r3,r3,104
 802468c:	247ffa1e 	bne	r4,r17,8024678 <__flash_rwdata_start+0xffff4b5c>
 8024690:	90800017 	ldw	r2,0(r18)
 8024694:	10001d26 	beq	r2,zero,802470c <__sfp+0xf4>
 8024698:	1025883a 	mov	r18,r2
 802469c:	003fee06 	br	8024658 <__flash_rwdata_start+0xffff4b3c>
 80246a0:	00bfffc4 	movi	r2,-1
 80246a4:	8080038d 	sth	r2,14(r16)
 80246a8:	00800044 	movi	r2,1
 80246ac:	8080030d 	sth	r2,12(r16)
 80246b0:	80001915 	stw	zero,100(r16)
 80246b4:	80000015 	stw	zero,0(r16)
 80246b8:	80000215 	stw	zero,8(r16)
 80246bc:	80000115 	stw	zero,4(r16)
 80246c0:	80000415 	stw	zero,16(r16)
 80246c4:	80000515 	stw	zero,20(r16)
 80246c8:	80000615 	stw	zero,24(r16)
 80246cc:	01800204 	movi	r6,8
 80246d0:	000b883a 	mov	r5,zero
 80246d4:	81001704 	addi	r4,r16,92
 80246d8:	8025a240 	call	8025a24 <memset>
 80246dc:	8005883a 	mov	r2,r16
 80246e0:	80000c15 	stw	zero,48(r16)
 80246e4:	80000d15 	stw	zero,52(r16)
 80246e8:	80001115 	stw	zero,68(r16)
 80246ec:	80001215 	stw	zero,72(r16)
 80246f0:	dfc00417 	ldw	ra,16(sp)
 80246f4:	dcc00317 	ldw	r19,12(sp)
 80246f8:	dc800217 	ldw	r18,8(sp)
 80246fc:	dc400117 	ldw	r17,4(sp)
 8024700:	dc000017 	ldw	r16,0(sp)
 8024704:	dec00504 	addi	sp,sp,20
 8024708:	f800283a 	ret
 802470c:	01400104 	movi	r5,4
 8024710:	9809883a 	mov	r4,r19
 8024714:	80245a00 	call	80245a0 <__sfmoreglue>
 8024718:	90800015 	stw	r2,0(r18)
 802471c:	103fde1e 	bne	r2,zero,8024698 <__flash_rwdata_start+0xffff4b7c>
 8024720:	00800304 	movi	r2,12
 8024724:	98800015 	stw	r2,0(r19)
 8024728:	0005883a 	mov	r2,zero
 802472c:	003ff006 	br	80246f0 <__flash_rwdata_start+0xffff4bd4>

08024730 <_cleanup>:
 8024730:	00800034 	movhi	r2,0
 8024734:	10876b04 	addi	r2,r2,7596
 8024738:	11000017 	ldw	r4,0(r2)
 802473c:	014200f4 	movhi	r5,2051
 8024740:	29620104 	addi	r5,r5,-30716
 8024744:	8024c901 	jmpi	8024c90 <_fwalk_reent>

08024748 <__sinit>:
 8024748:	20800e17 	ldw	r2,56(r4)
 802474c:	10000126 	beq	r2,zero,8024754 <__sinit+0xc>
 8024750:	f800283a 	ret
 8024754:	80243fc1 	jmpi	80243fc <__sinit.part.1>

08024758 <__sfp_lock_acquire>:
 8024758:	f800283a 	ret

0802475c <__sfp_lock_release>:
 802475c:	f800283a 	ret

08024760 <__sinit_lock_acquire>:
 8024760:	f800283a 	ret

08024764 <__sinit_lock_release>:
 8024764:	f800283a 	ret

08024768 <__fp_lock_all>:
 8024768:	00800034 	movhi	r2,0
 802476c:	10876c04 	addi	r2,r2,7600
 8024770:	11000017 	ldw	r4,0(r2)
 8024774:	014200b4 	movhi	r5,2050
 8024778:	29516604 	addi	r5,r5,17816
 802477c:	8024bcc1 	jmpi	8024bcc <_fwalk>

08024780 <__fp_unlock_all>:
 8024780:	00800034 	movhi	r2,0
 8024784:	10876c04 	addi	r2,r2,7600
 8024788:	11000017 	ldw	r4,0(r2)
 802478c:	014200b4 	movhi	r5,2050
 8024790:	2950fa04 	addi	r5,r5,17384
 8024794:	8024bcc1 	jmpi	8024bcc <_fwalk>

08024798 <_malloc_trim_r>:
 8024798:	defffb04 	addi	sp,sp,-20
 802479c:	dcc00315 	stw	r19,12(sp)
 80247a0:	04c00034 	movhi	r19,0
 80247a4:	dc800215 	stw	r18,8(sp)
 80247a8:	dc400115 	stw	r17,4(sp)
 80247ac:	dc000015 	stw	r16,0(sp)
 80247b0:	dfc00415 	stw	ra,16(sp)
 80247b4:	2821883a 	mov	r16,r5
 80247b8:	9cc1e704 	addi	r19,r19,1948
 80247bc:	2025883a 	mov	r18,r4
 80247c0:	802d7240 	call	802d724 <__malloc_lock>
 80247c4:	98800217 	ldw	r2,8(r19)
 80247c8:	14400117 	ldw	r17,4(r2)
 80247cc:	00bfff04 	movi	r2,-4
 80247d0:	88a2703a 	and	r17,r17,r2
 80247d4:	8c21c83a 	sub	r16,r17,r16
 80247d8:	8403fbc4 	addi	r16,r16,4079
 80247dc:	8020d33a 	srli	r16,r16,12
 80247e0:	0083ffc4 	movi	r2,4095
 80247e4:	843fffc4 	addi	r16,r16,-1
 80247e8:	8020933a 	slli	r16,r16,12
 80247ec:	1400060e 	bge	r2,r16,8024808 <_malloc_trim_r+0x70>
 80247f0:	000b883a 	mov	r5,zero
 80247f4:	9009883a 	mov	r4,r18
 80247f8:	8026c780 	call	8026c78 <_sbrk_r>
 80247fc:	98c00217 	ldw	r3,8(r19)
 8024800:	1c47883a 	add	r3,r3,r17
 8024804:	10c00a26 	beq	r2,r3,8024830 <_malloc_trim_r+0x98>
 8024808:	9009883a 	mov	r4,r18
 802480c:	802d7480 	call	802d748 <__malloc_unlock>
 8024810:	0005883a 	mov	r2,zero
 8024814:	dfc00417 	ldw	ra,16(sp)
 8024818:	dcc00317 	ldw	r19,12(sp)
 802481c:	dc800217 	ldw	r18,8(sp)
 8024820:	dc400117 	ldw	r17,4(sp)
 8024824:	dc000017 	ldw	r16,0(sp)
 8024828:	dec00504 	addi	sp,sp,20
 802482c:	f800283a 	ret
 8024830:	040bc83a 	sub	r5,zero,r16
 8024834:	9009883a 	mov	r4,r18
 8024838:	8026c780 	call	8026c78 <_sbrk_r>
 802483c:	00ffffc4 	movi	r3,-1
 8024840:	10c00d26 	beq	r2,r3,8024878 <_malloc_trim_r+0xe0>
 8024844:	00c00034 	movhi	r3,0
 8024848:	18c78904 	addi	r3,r3,7716
 802484c:	18800017 	ldw	r2,0(r3)
 8024850:	99000217 	ldw	r4,8(r19)
 8024854:	8c23c83a 	sub	r17,r17,r16
 8024858:	8c400054 	ori	r17,r17,1
 802485c:	1421c83a 	sub	r16,r2,r16
 8024860:	24400115 	stw	r17,4(r4)
 8024864:	9009883a 	mov	r4,r18
 8024868:	1c000015 	stw	r16,0(r3)
 802486c:	802d7480 	call	802d748 <__malloc_unlock>
 8024870:	00800044 	movi	r2,1
 8024874:	003fe706 	br	8024814 <__flash_rwdata_start+0xffff4cf8>
 8024878:	000b883a 	mov	r5,zero
 802487c:	9009883a 	mov	r4,r18
 8024880:	8026c780 	call	8026c78 <_sbrk_r>
 8024884:	99000217 	ldw	r4,8(r19)
 8024888:	014003c4 	movi	r5,15
 802488c:	1107c83a 	sub	r3,r2,r4
 8024890:	28ffdd0e 	bge	r5,r3,8024808 <__flash_rwdata_start+0xffff4cec>
 8024894:	01400034 	movhi	r5,0
 8024898:	29476e04 	addi	r5,r5,7608
 802489c:	29400017 	ldw	r5,0(r5)
 80248a0:	18c00054 	ori	r3,r3,1
 80248a4:	20c00115 	stw	r3,4(r4)
 80248a8:	00c00034 	movhi	r3,0
 80248ac:	1145c83a 	sub	r2,r2,r5
 80248b0:	18c78904 	addi	r3,r3,7716
 80248b4:	18800015 	stw	r2,0(r3)
 80248b8:	003fd306 	br	8024808 <__flash_rwdata_start+0xffff4cec>

080248bc <_free_r>:
 80248bc:	28004126 	beq	r5,zero,80249c4 <_free_r+0x108>
 80248c0:	defffd04 	addi	sp,sp,-12
 80248c4:	dc400115 	stw	r17,4(sp)
 80248c8:	dc000015 	stw	r16,0(sp)
 80248cc:	2023883a 	mov	r17,r4
 80248d0:	2821883a 	mov	r16,r5
 80248d4:	dfc00215 	stw	ra,8(sp)
 80248d8:	802d7240 	call	802d724 <__malloc_lock>
 80248dc:	81ffff17 	ldw	r7,-4(r16)
 80248e0:	00bfff84 	movi	r2,-2
 80248e4:	01000034 	movhi	r4,0
 80248e8:	81bffe04 	addi	r6,r16,-8
 80248ec:	3884703a 	and	r2,r7,r2
 80248f0:	2101e704 	addi	r4,r4,1948
 80248f4:	308b883a 	add	r5,r6,r2
 80248f8:	2a400117 	ldw	r9,4(r5)
 80248fc:	22000217 	ldw	r8,8(r4)
 8024900:	00ffff04 	movi	r3,-4
 8024904:	48c6703a 	and	r3,r9,r3
 8024908:	2a005726 	beq	r5,r8,8024a68 <_free_r+0x1ac>
 802490c:	28c00115 	stw	r3,4(r5)
 8024910:	39c0004c 	andi	r7,r7,1
 8024914:	3800091e 	bne	r7,zero,802493c <_free_r+0x80>
 8024918:	823ffe17 	ldw	r8,-8(r16)
 802491c:	22400204 	addi	r9,r4,8
 8024920:	320dc83a 	sub	r6,r6,r8
 8024924:	31c00217 	ldw	r7,8(r6)
 8024928:	1205883a 	add	r2,r2,r8
 802492c:	3a406526 	beq	r7,r9,8024ac4 <_free_r+0x208>
 8024930:	32000317 	ldw	r8,12(r6)
 8024934:	3a000315 	stw	r8,12(r7)
 8024938:	41c00215 	stw	r7,8(r8)
 802493c:	28cf883a 	add	r7,r5,r3
 8024940:	39c00117 	ldw	r7,4(r7)
 8024944:	39c0004c 	andi	r7,r7,1
 8024948:	38003a26 	beq	r7,zero,8024a34 <_free_r+0x178>
 802494c:	10c00054 	ori	r3,r2,1
 8024950:	30c00115 	stw	r3,4(r6)
 8024954:	3087883a 	add	r3,r6,r2
 8024958:	18800015 	stw	r2,0(r3)
 802495c:	00c07fc4 	movi	r3,511
 8024960:	18801936 	bltu	r3,r2,80249c8 <_free_r+0x10c>
 8024964:	1004d0fa 	srli	r2,r2,3
 8024968:	01c00044 	movi	r7,1
 802496c:	21400117 	ldw	r5,4(r4)
 8024970:	10c00044 	addi	r3,r2,1
 8024974:	18c7883a 	add	r3,r3,r3
 8024978:	1005d0ba 	srai	r2,r2,2
 802497c:	18c7883a 	add	r3,r3,r3
 8024980:	18c7883a 	add	r3,r3,r3
 8024984:	1907883a 	add	r3,r3,r4
 8024988:	3884983a 	sll	r2,r7,r2
 802498c:	19c00017 	ldw	r7,0(r3)
 8024990:	1a3ffe04 	addi	r8,r3,-8
 8024994:	1144b03a 	or	r2,r2,r5
 8024998:	32000315 	stw	r8,12(r6)
 802499c:	31c00215 	stw	r7,8(r6)
 80249a0:	20800115 	stw	r2,4(r4)
 80249a4:	19800015 	stw	r6,0(r3)
 80249a8:	39800315 	stw	r6,12(r7)
 80249ac:	8809883a 	mov	r4,r17
 80249b0:	dfc00217 	ldw	ra,8(sp)
 80249b4:	dc400117 	ldw	r17,4(sp)
 80249b8:	dc000017 	ldw	r16,0(sp)
 80249bc:	dec00304 	addi	sp,sp,12
 80249c0:	802d7481 	jmpi	802d748 <__malloc_unlock>
 80249c4:	f800283a 	ret
 80249c8:	100ad27a 	srli	r5,r2,9
 80249cc:	00c00104 	movi	r3,4
 80249d0:	19404a36 	bltu	r3,r5,8024afc <_free_r+0x240>
 80249d4:	100ad1ba 	srli	r5,r2,6
 80249d8:	28c00e44 	addi	r3,r5,57
 80249dc:	18c7883a 	add	r3,r3,r3
 80249e0:	29400e04 	addi	r5,r5,56
 80249e4:	18c7883a 	add	r3,r3,r3
 80249e8:	18c7883a 	add	r3,r3,r3
 80249ec:	1909883a 	add	r4,r3,r4
 80249f0:	20c00017 	ldw	r3,0(r4)
 80249f4:	01c00034 	movhi	r7,0
 80249f8:	213ffe04 	addi	r4,r4,-8
 80249fc:	39c1e704 	addi	r7,r7,1948
 8024a00:	20c04426 	beq	r4,r3,8024b14 <_free_r+0x258>
 8024a04:	01ffff04 	movi	r7,-4
 8024a08:	19400117 	ldw	r5,4(r3)
 8024a0c:	29ca703a 	and	r5,r5,r7
 8024a10:	1140022e 	bgeu	r2,r5,8024a1c <_free_r+0x160>
 8024a14:	18c00217 	ldw	r3,8(r3)
 8024a18:	20fffb1e 	bne	r4,r3,8024a08 <__flash_rwdata_start+0xffff4eec>
 8024a1c:	19000317 	ldw	r4,12(r3)
 8024a20:	31000315 	stw	r4,12(r6)
 8024a24:	30c00215 	stw	r3,8(r6)
 8024a28:	21800215 	stw	r6,8(r4)
 8024a2c:	19800315 	stw	r6,12(r3)
 8024a30:	003fde06 	br	80249ac <__flash_rwdata_start+0xffff4e90>
 8024a34:	29c00217 	ldw	r7,8(r5)
 8024a38:	10c5883a 	add	r2,r2,r3
 8024a3c:	00c00034 	movhi	r3,0
 8024a40:	18c1e904 	addi	r3,r3,1956
 8024a44:	38c03b26 	beq	r7,r3,8024b34 <_free_r+0x278>
 8024a48:	2a000317 	ldw	r8,12(r5)
 8024a4c:	11400054 	ori	r5,r2,1
 8024a50:	3087883a 	add	r3,r6,r2
 8024a54:	3a000315 	stw	r8,12(r7)
 8024a58:	41c00215 	stw	r7,8(r8)
 8024a5c:	31400115 	stw	r5,4(r6)
 8024a60:	18800015 	stw	r2,0(r3)
 8024a64:	003fbd06 	br	802495c <__flash_rwdata_start+0xffff4e40>
 8024a68:	39c0004c 	andi	r7,r7,1
 8024a6c:	10c5883a 	add	r2,r2,r3
 8024a70:	3800071e 	bne	r7,zero,8024a90 <_free_r+0x1d4>
 8024a74:	81fffe17 	ldw	r7,-8(r16)
 8024a78:	31cdc83a 	sub	r6,r6,r7
 8024a7c:	30c00317 	ldw	r3,12(r6)
 8024a80:	31400217 	ldw	r5,8(r6)
 8024a84:	11c5883a 	add	r2,r2,r7
 8024a88:	28c00315 	stw	r3,12(r5)
 8024a8c:	19400215 	stw	r5,8(r3)
 8024a90:	10c00054 	ori	r3,r2,1
 8024a94:	30c00115 	stw	r3,4(r6)
 8024a98:	00c00034 	movhi	r3,0
 8024a9c:	18c76f04 	addi	r3,r3,7612
 8024aa0:	18c00017 	ldw	r3,0(r3)
 8024aa4:	21800215 	stw	r6,8(r4)
 8024aa8:	10ffc036 	bltu	r2,r3,80249ac <__flash_rwdata_start+0xffff4e90>
 8024aac:	00800034 	movhi	r2,0
 8024ab0:	10878004 	addi	r2,r2,7680
 8024ab4:	11400017 	ldw	r5,0(r2)
 8024ab8:	8809883a 	mov	r4,r17
 8024abc:	80247980 	call	8024798 <_malloc_trim_r>
 8024ac0:	003fba06 	br	80249ac <__flash_rwdata_start+0xffff4e90>
 8024ac4:	28c9883a 	add	r4,r5,r3
 8024ac8:	21000117 	ldw	r4,4(r4)
 8024acc:	2100004c 	andi	r4,r4,1
 8024ad0:	2000391e 	bne	r4,zero,8024bb8 <_free_r+0x2fc>
 8024ad4:	29c00217 	ldw	r7,8(r5)
 8024ad8:	29000317 	ldw	r4,12(r5)
 8024adc:	1885883a 	add	r2,r3,r2
 8024ae0:	10c00054 	ori	r3,r2,1
 8024ae4:	39000315 	stw	r4,12(r7)
 8024ae8:	21c00215 	stw	r7,8(r4)
 8024aec:	30c00115 	stw	r3,4(r6)
 8024af0:	308d883a 	add	r6,r6,r2
 8024af4:	30800015 	stw	r2,0(r6)
 8024af8:	003fac06 	br	80249ac <__flash_rwdata_start+0xffff4e90>
 8024afc:	00c00504 	movi	r3,20
 8024b00:	19401536 	bltu	r3,r5,8024b58 <_free_r+0x29c>
 8024b04:	28c01704 	addi	r3,r5,92
 8024b08:	18c7883a 	add	r3,r3,r3
 8024b0c:	294016c4 	addi	r5,r5,91
 8024b10:	003fb406 	br	80249e4 <__flash_rwdata_start+0xffff4ec8>
 8024b14:	280bd0ba 	srai	r5,r5,2
 8024b18:	00c00044 	movi	r3,1
 8024b1c:	38800117 	ldw	r2,4(r7)
 8024b20:	194a983a 	sll	r5,r3,r5
 8024b24:	2007883a 	mov	r3,r4
 8024b28:	2884b03a 	or	r2,r5,r2
 8024b2c:	38800115 	stw	r2,4(r7)
 8024b30:	003fbb06 	br	8024a20 <__flash_rwdata_start+0xffff4f04>
 8024b34:	21800515 	stw	r6,20(r4)
 8024b38:	21800415 	stw	r6,16(r4)
 8024b3c:	10c00054 	ori	r3,r2,1
 8024b40:	31c00315 	stw	r7,12(r6)
 8024b44:	31c00215 	stw	r7,8(r6)
 8024b48:	30c00115 	stw	r3,4(r6)
 8024b4c:	308d883a 	add	r6,r6,r2
 8024b50:	30800015 	stw	r2,0(r6)
 8024b54:	003f9506 	br	80249ac <__flash_rwdata_start+0xffff4e90>
 8024b58:	00c01504 	movi	r3,84
 8024b5c:	19400536 	bltu	r3,r5,8024b74 <_free_r+0x2b8>
 8024b60:	100ad33a 	srli	r5,r2,12
 8024b64:	28c01bc4 	addi	r3,r5,111
 8024b68:	18c7883a 	add	r3,r3,r3
 8024b6c:	29401b84 	addi	r5,r5,110
 8024b70:	003f9c06 	br	80249e4 <__flash_rwdata_start+0xffff4ec8>
 8024b74:	00c05504 	movi	r3,340
 8024b78:	19400536 	bltu	r3,r5,8024b90 <_free_r+0x2d4>
 8024b7c:	100ad3fa 	srli	r5,r2,15
 8024b80:	28c01e04 	addi	r3,r5,120
 8024b84:	18c7883a 	add	r3,r3,r3
 8024b88:	29401dc4 	addi	r5,r5,119
 8024b8c:	003f9506 	br	80249e4 <__flash_rwdata_start+0xffff4ec8>
 8024b90:	00c15504 	movi	r3,1364
 8024b94:	19400536 	bltu	r3,r5,8024bac <_free_r+0x2f0>
 8024b98:	100ad4ba 	srli	r5,r2,18
 8024b9c:	28c01f44 	addi	r3,r5,125
 8024ba0:	18c7883a 	add	r3,r3,r3
 8024ba4:	29401f04 	addi	r5,r5,124
 8024ba8:	003f8e06 	br	80249e4 <__flash_rwdata_start+0xffff4ec8>
 8024bac:	00c03f84 	movi	r3,254
 8024bb0:	01401f84 	movi	r5,126
 8024bb4:	003f8b06 	br	80249e4 <__flash_rwdata_start+0xffff4ec8>
 8024bb8:	10c00054 	ori	r3,r2,1
 8024bbc:	30c00115 	stw	r3,4(r6)
 8024bc0:	308d883a 	add	r6,r6,r2
 8024bc4:	30800015 	stw	r2,0(r6)
 8024bc8:	003f7806 	br	80249ac <__flash_rwdata_start+0xffff4e90>

08024bcc <_fwalk>:
 8024bcc:	defff704 	addi	sp,sp,-36
 8024bd0:	dd000415 	stw	r20,16(sp)
 8024bd4:	dfc00815 	stw	ra,32(sp)
 8024bd8:	ddc00715 	stw	r23,28(sp)
 8024bdc:	dd800615 	stw	r22,24(sp)
 8024be0:	dd400515 	stw	r21,20(sp)
 8024be4:	dcc00315 	stw	r19,12(sp)
 8024be8:	dc800215 	stw	r18,8(sp)
 8024bec:	dc400115 	stw	r17,4(sp)
 8024bf0:	dc000015 	stw	r16,0(sp)
 8024bf4:	2500b804 	addi	r20,r4,736
 8024bf8:	a0002326 	beq	r20,zero,8024c88 <_fwalk+0xbc>
 8024bfc:	282b883a 	mov	r21,r5
 8024c00:	002f883a 	mov	r23,zero
 8024c04:	05800044 	movi	r22,1
 8024c08:	04ffffc4 	movi	r19,-1
 8024c0c:	a4400117 	ldw	r17,4(r20)
 8024c10:	a4800217 	ldw	r18,8(r20)
 8024c14:	8c7fffc4 	addi	r17,r17,-1
 8024c18:	88000d16 	blt	r17,zero,8024c50 <_fwalk+0x84>
 8024c1c:	94000304 	addi	r16,r18,12
 8024c20:	94800384 	addi	r18,r18,14
 8024c24:	8080000b 	ldhu	r2,0(r16)
 8024c28:	8c7fffc4 	addi	r17,r17,-1
 8024c2c:	813ffd04 	addi	r4,r16,-12
 8024c30:	b080042e 	bgeu	r22,r2,8024c44 <_fwalk+0x78>
 8024c34:	9080000f 	ldh	r2,0(r18)
 8024c38:	14c00226 	beq	r2,r19,8024c44 <_fwalk+0x78>
 8024c3c:	a83ee83a 	callr	r21
 8024c40:	b8aeb03a 	or	r23,r23,r2
 8024c44:	84001a04 	addi	r16,r16,104
 8024c48:	94801a04 	addi	r18,r18,104
 8024c4c:	8cfff51e 	bne	r17,r19,8024c24 <__flash_rwdata_start+0xffff5108>
 8024c50:	a5000017 	ldw	r20,0(r20)
 8024c54:	a03fed1e 	bne	r20,zero,8024c0c <__flash_rwdata_start+0xffff50f0>
 8024c58:	b805883a 	mov	r2,r23
 8024c5c:	dfc00817 	ldw	ra,32(sp)
 8024c60:	ddc00717 	ldw	r23,28(sp)
 8024c64:	dd800617 	ldw	r22,24(sp)
 8024c68:	dd400517 	ldw	r21,20(sp)
 8024c6c:	dd000417 	ldw	r20,16(sp)
 8024c70:	dcc00317 	ldw	r19,12(sp)
 8024c74:	dc800217 	ldw	r18,8(sp)
 8024c78:	dc400117 	ldw	r17,4(sp)
 8024c7c:	dc000017 	ldw	r16,0(sp)
 8024c80:	dec00904 	addi	sp,sp,36
 8024c84:	f800283a 	ret
 8024c88:	002f883a 	mov	r23,zero
 8024c8c:	003ff206 	br	8024c58 <__flash_rwdata_start+0xffff513c>

08024c90 <_fwalk_reent>:
 8024c90:	defff704 	addi	sp,sp,-36
 8024c94:	dd000415 	stw	r20,16(sp)
 8024c98:	dfc00815 	stw	ra,32(sp)
 8024c9c:	ddc00715 	stw	r23,28(sp)
 8024ca0:	dd800615 	stw	r22,24(sp)
 8024ca4:	dd400515 	stw	r21,20(sp)
 8024ca8:	dcc00315 	stw	r19,12(sp)
 8024cac:	dc800215 	stw	r18,8(sp)
 8024cb0:	dc400115 	stw	r17,4(sp)
 8024cb4:	dc000015 	stw	r16,0(sp)
 8024cb8:	2500b804 	addi	r20,r4,736
 8024cbc:	a0002326 	beq	r20,zero,8024d4c <_fwalk_reent+0xbc>
 8024cc0:	282b883a 	mov	r21,r5
 8024cc4:	2027883a 	mov	r19,r4
 8024cc8:	002f883a 	mov	r23,zero
 8024ccc:	05800044 	movi	r22,1
 8024cd0:	04bfffc4 	movi	r18,-1
 8024cd4:	a4400117 	ldw	r17,4(r20)
 8024cd8:	a4000217 	ldw	r16,8(r20)
 8024cdc:	8c7fffc4 	addi	r17,r17,-1
 8024ce0:	88000c16 	blt	r17,zero,8024d14 <_fwalk_reent+0x84>
 8024ce4:	84000304 	addi	r16,r16,12
 8024ce8:	8080000b 	ldhu	r2,0(r16)
 8024cec:	8c7fffc4 	addi	r17,r17,-1
 8024cf0:	817ffd04 	addi	r5,r16,-12
 8024cf4:	b080052e 	bgeu	r22,r2,8024d0c <_fwalk_reent+0x7c>
 8024cf8:	8080008f 	ldh	r2,2(r16)
 8024cfc:	9809883a 	mov	r4,r19
 8024d00:	14800226 	beq	r2,r18,8024d0c <_fwalk_reent+0x7c>
 8024d04:	a83ee83a 	callr	r21
 8024d08:	b8aeb03a 	or	r23,r23,r2
 8024d0c:	84001a04 	addi	r16,r16,104
 8024d10:	8cbff51e 	bne	r17,r18,8024ce8 <__flash_rwdata_start+0xffff51cc>
 8024d14:	a5000017 	ldw	r20,0(r20)
 8024d18:	a03fee1e 	bne	r20,zero,8024cd4 <__flash_rwdata_start+0xffff51b8>
 8024d1c:	b805883a 	mov	r2,r23
 8024d20:	dfc00817 	ldw	ra,32(sp)
 8024d24:	ddc00717 	ldw	r23,28(sp)
 8024d28:	dd800617 	ldw	r22,24(sp)
 8024d2c:	dd400517 	ldw	r21,20(sp)
 8024d30:	dd000417 	ldw	r20,16(sp)
 8024d34:	dcc00317 	ldw	r19,12(sp)
 8024d38:	dc800217 	ldw	r18,8(sp)
 8024d3c:	dc400117 	ldw	r17,4(sp)
 8024d40:	dc000017 	ldw	r16,0(sp)
 8024d44:	dec00904 	addi	sp,sp,36
 8024d48:	f800283a 	ret
 8024d4c:	002f883a 	mov	r23,zero
 8024d50:	003ff206 	br	8024d1c <__flash_rwdata_start+0xffff5200>

08024d54 <_setlocale_r>:
 8024d54:	30001b26 	beq	r6,zero,8024dc4 <_setlocale_r+0x70>
 8024d58:	01400034 	movhi	r5,0
 8024d5c:	defffe04 	addi	sp,sp,-8
 8024d60:	29402104 	addi	r5,r5,132
 8024d64:	3009883a 	mov	r4,r6
 8024d68:	dc000015 	stw	r16,0(sp)
 8024d6c:	dfc00115 	stw	ra,4(sp)
 8024d70:	3021883a 	mov	r16,r6
 8024d74:	8026e080 	call	8026e08 <strcmp>
 8024d78:	1000061e 	bne	r2,zero,8024d94 <_setlocale_r+0x40>
 8024d7c:	00800034 	movhi	r2,0
 8024d80:	10802004 	addi	r2,r2,128
 8024d84:	dfc00117 	ldw	ra,4(sp)
 8024d88:	dc000017 	ldw	r16,0(sp)
 8024d8c:	dec00204 	addi	sp,sp,8
 8024d90:	f800283a 	ret
 8024d94:	01400034 	movhi	r5,0
 8024d98:	29402004 	addi	r5,r5,128
 8024d9c:	8009883a 	mov	r4,r16
 8024da0:	8026e080 	call	8026e08 <strcmp>
 8024da4:	103ff526 	beq	r2,zero,8024d7c <__flash_rwdata_start+0xffff5260>
 8024da8:	01400034 	movhi	r5,0
 8024dac:	29400b04 	addi	r5,r5,44
 8024db0:	8009883a 	mov	r4,r16
 8024db4:	8026e080 	call	8026e08 <strcmp>
 8024db8:	103ff026 	beq	r2,zero,8024d7c <__flash_rwdata_start+0xffff5260>
 8024dbc:	0005883a 	mov	r2,zero
 8024dc0:	003ff006 	br	8024d84 <__flash_rwdata_start+0xffff5268>
 8024dc4:	00800034 	movhi	r2,0
 8024dc8:	10802004 	addi	r2,r2,128
 8024dcc:	f800283a 	ret

08024dd0 <__locale_charset>:
 8024dd0:	00800034 	movhi	r2,0
 8024dd4:	1081d104 	addi	r2,r2,1860
 8024dd8:	f800283a 	ret

08024ddc <__locale_mb_cur_max>:
 8024ddc:	00800034 	movhi	r2,0
 8024de0:	10876d04 	addi	r2,r2,7604
 8024de4:	10800017 	ldw	r2,0(r2)
 8024de8:	f800283a 	ret

08024dec <__locale_msgcharset>:
 8024dec:	00800034 	movhi	r2,0
 8024df0:	1081c904 	addi	r2,r2,1828
 8024df4:	f800283a 	ret

08024df8 <__locale_cjk_lang>:
 8024df8:	0005883a 	mov	r2,zero
 8024dfc:	f800283a 	ret

08024e00 <_localeconv_r>:
 8024e00:	00800034 	movhi	r2,0
 8024e04:	1081d904 	addi	r2,r2,1892
 8024e08:	f800283a 	ret

08024e0c <setlocale>:
 8024e0c:	00800034 	movhi	r2,0
 8024e10:	10876c04 	addi	r2,r2,7600
 8024e14:	280d883a 	mov	r6,r5
 8024e18:	200b883a 	mov	r5,r4
 8024e1c:	11000017 	ldw	r4,0(r2)
 8024e20:	8024d541 	jmpi	8024d54 <_setlocale_r>

08024e24 <localeconv>:
 8024e24:	00800034 	movhi	r2,0
 8024e28:	1081d904 	addi	r2,r2,1892
 8024e2c:	f800283a 	ret

08024e30 <__smakebuf_r>:
 8024e30:	2880030b 	ldhu	r2,12(r5)
 8024e34:	10c0008c 	andi	r3,r2,2
 8024e38:	1800411e 	bne	r3,zero,8024f40 <__smakebuf_r+0x110>
 8024e3c:	deffec04 	addi	sp,sp,-80
 8024e40:	dc000f15 	stw	r16,60(sp)
 8024e44:	2821883a 	mov	r16,r5
 8024e48:	2940038f 	ldh	r5,14(r5)
 8024e4c:	dc401015 	stw	r17,64(sp)
 8024e50:	dfc01315 	stw	ra,76(sp)
 8024e54:	dcc01215 	stw	r19,72(sp)
 8024e58:	dc801115 	stw	r18,68(sp)
 8024e5c:	2023883a 	mov	r17,r4
 8024e60:	28001c16 	blt	r5,zero,8024ed4 <__smakebuf_r+0xa4>
 8024e64:	d80d883a 	mov	r6,sp
 8024e68:	8028b100 	call	8028b10 <_fstat_r>
 8024e6c:	10001816 	blt	r2,zero,8024ed0 <__smakebuf_r+0xa0>
 8024e70:	d8800117 	ldw	r2,4(sp)
 8024e74:	00e00014 	movui	r3,32768
 8024e78:	10bc000c 	andi	r2,r2,61440
 8024e7c:	14c80020 	cmpeqi	r19,r2,8192
 8024e80:	10c03726 	beq	r2,r3,8024f60 <__smakebuf_r+0x130>
 8024e84:	80c0030b 	ldhu	r3,12(r16)
 8024e88:	18c20014 	ori	r3,r3,2048
 8024e8c:	80c0030d 	sth	r3,12(r16)
 8024e90:	00c80004 	movi	r3,8192
 8024e94:	10c0521e 	bne	r2,r3,8024fe0 <__smakebuf_r+0x1b0>
 8024e98:	8140038f 	ldh	r5,14(r16)
 8024e9c:	8809883a 	mov	r4,r17
 8024ea0:	80290340 	call	8029034 <_isatty_r>
 8024ea4:	10004c26 	beq	r2,zero,8024fd8 <__smakebuf_r+0x1a8>
 8024ea8:	8080030b 	ldhu	r2,12(r16)
 8024eac:	80c010c4 	addi	r3,r16,67
 8024eb0:	80c00015 	stw	r3,0(r16)
 8024eb4:	10800054 	ori	r2,r2,1
 8024eb8:	8080030d 	sth	r2,12(r16)
 8024ebc:	00800044 	movi	r2,1
 8024ec0:	80c00415 	stw	r3,16(r16)
 8024ec4:	80800515 	stw	r2,20(r16)
 8024ec8:	04810004 	movi	r18,1024
 8024ecc:	00000706 	br	8024eec <__smakebuf_r+0xbc>
 8024ed0:	8080030b 	ldhu	r2,12(r16)
 8024ed4:	10c0200c 	andi	r3,r2,128
 8024ed8:	18001f1e 	bne	r3,zero,8024f58 <__smakebuf_r+0x128>
 8024edc:	04810004 	movi	r18,1024
 8024ee0:	10820014 	ori	r2,r2,2048
 8024ee4:	8080030d 	sth	r2,12(r16)
 8024ee8:	0027883a 	mov	r19,zero
 8024eec:	900b883a 	mov	r5,r18
 8024ef0:	8809883a 	mov	r4,r17
 8024ef4:	8024fec0 	call	8024fec <_malloc_r>
 8024ef8:	10002c26 	beq	r2,zero,8024fac <__smakebuf_r+0x17c>
 8024efc:	80c0030b 	ldhu	r3,12(r16)
 8024f00:	010200b4 	movhi	r4,2050
 8024f04:	2110fc04 	addi	r4,r4,17392
 8024f08:	89000f15 	stw	r4,60(r17)
 8024f0c:	18c02014 	ori	r3,r3,128
 8024f10:	80c0030d 	sth	r3,12(r16)
 8024f14:	80800015 	stw	r2,0(r16)
 8024f18:	80800415 	stw	r2,16(r16)
 8024f1c:	84800515 	stw	r18,20(r16)
 8024f20:	98001a1e 	bne	r19,zero,8024f8c <__smakebuf_r+0x15c>
 8024f24:	dfc01317 	ldw	ra,76(sp)
 8024f28:	dcc01217 	ldw	r19,72(sp)
 8024f2c:	dc801117 	ldw	r18,68(sp)
 8024f30:	dc401017 	ldw	r17,64(sp)
 8024f34:	dc000f17 	ldw	r16,60(sp)
 8024f38:	dec01404 	addi	sp,sp,80
 8024f3c:	f800283a 	ret
 8024f40:	288010c4 	addi	r2,r5,67
 8024f44:	28800015 	stw	r2,0(r5)
 8024f48:	28800415 	stw	r2,16(r5)
 8024f4c:	00800044 	movi	r2,1
 8024f50:	28800515 	stw	r2,20(r5)
 8024f54:	f800283a 	ret
 8024f58:	04801004 	movi	r18,64
 8024f5c:	003fe006 	br	8024ee0 <__flash_rwdata_start+0xffff53c4>
 8024f60:	81000a17 	ldw	r4,40(r16)
 8024f64:	00c200b4 	movhi	r3,2050
 8024f68:	18db6904 	addi	r3,r3,28068
 8024f6c:	20ffc51e 	bne	r4,r3,8024e84 <__flash_rwdata_start+0xffff5368>
 8024f70:	8080030b 	ldhu	r2,12(r16)
 8024f74:	04810004 	movi	r18,1024
 8024f78:	84801315 	stw	r18,76(r16)
 8024f7c:	1484b03a 	or	r2,r2,r18
 8024f80:	8080030d 	sth	r2,12(r16)
 8024f84:	0027883a 	mov	r19,zero
 8024f88:	003fd806 	br	8024eec <__flash_rwdata_start+0xffff53d0>
 8024f8c:	8140038f 	ldh	r5,14(r16)
 8024f90:	8809883a 	mov	r4,r17
 8024f94:	80290340 	call	8029034 <_isatty_r>
 8024f98:	103fe226 	beq	r2,zero,8024f24 <__flash_rwdata_start+0xffff5408>
 8024f9c:	8080030b 	ldhu	r2,12(r16)
 8024fa0:	10800054 	ori	r2,r2,1
 8024fa4:	8080030d 	sth	r2,12(r16)
 8024fa8:	003fde06 	br	8024f24 <__flash_rwdata_start+0xffff5408>
 8024fac:	8080030b 	ldhu	r2,12(r16)
 8024fb0:	10c0800c 	andi	r3,r2,512
 8024fb4:	183fdb1e 	bne	r3,zero,8024f24 <__flash_rwdata_start+0xffff5408>
 8024fb8:	10800094 	ori	r2,r2,2
 8024fbc:	80c010c4 	addi	r3,r16,67
 8024fc0:	8080030d 	sth	r2,12(r16)
 8024fc4:	00800044 	movi	r2,1
 8024fc8:	80c00015 	stw	r3,0(r16)
 8024fcc:	80c00415 	stw	r3,16(r16)
 8024fd0:	80800515 	stw	r2,20(r16)
 8024fd4:	003fd306 	br	8024f24 <__flash_rwdata_start+0xffff5408>
 8024fd8:	04810004 	movi	r18,1024
 8024fdc:	003fc306 	br	8024eec <__flash_rwdata_start+0xffff53d0>
 8024fe0:	0027883a 	mov	r19,zero
 8024fe4:	04810004 	movi	r18,1024
 8024fe8:	003fc006 	br	8024eec <__flash_rwdata_start+0xffff53d0>

08024fec <_malloc_r>:
 8024fec:	defff504 	addi	sp,sp,-44
 8024ff0:	dc800315 	stw	r18,12(sp)
 8024ff4:	dfc00a15 	stw	ra,40(sp)
 8024ff8:	df000915 	stw	fp,36(sp)
 8024ffc:	ddc00815 	stw	r23,32(sp)
 8025000:	dd800715 	stw	r22,28(sp)
 8025004:	dd400615 	stw	r21,24(sp)
 8025008:	dd000515 	stw	r20,20(sp)
 802500c:	dcc00415 	stw	r19,16(sp)
 8025010:	dc400215 	stw	r17,8(sp)
 8025014:	dc000115 	stw	r16,4(sp)
 8025018:	288002c4 	addi	r2,r5,11
 802501c:	00c00584 	movi	r3,22
 8025020:	2025883a 	mov	r18,r4
 8025024:	18807f2e 	bgeu	r3,r2,8025224 <_malloc_r+0x238>
 8025028:	047ffe04 	movi	r17,-8
 802502c:	1462703a 	and	r17,r2,r17
 8025030:	8800a316 	blt	r17,zero,80252c0 <_malloc_r+0x2d4>
 8025034:	8940a236 	bltu	r17,r5,80252c0 <_malloc_r+0x2d4>
 8025038:	802d7240 	call	802d724 <__malloc_lock>
 802503c:	00807dc4 	movi	r2,503
 8025040:	1441e92e 	bgeu	r2,r17,80257e8 <_malloc_r+0x7fc>
 8025044:	8804d27a 	srli	r2,r17,9
 8025048:	1000a126 	beq	r2,zero,80252d0 <_malloc_r+0x2e4>
 802504c:	00c00104 	movi	r3,4
 8025050:	18811e36 	bltu	r3,r2,80254cc <_malloc_r+0x4e0>
 8025054:	8804d1ba 	srli	r2,r17,6
 8025058:	12000e44 	addi	r8,r2,57
 802505c:	11c00e04 	addi	r7,r2,56
 8025060:	4209883a 	add	r4,r8,r8
 8025064:	04c00034 	movhi	r19,0
 8025068:	2109883a 	add	r4,r4,r4
 802506c:	9cc1e704 	addi	r19,r19,1948
 8025070:	2109883a 	add	r4,r4,r4
 8025074:	9909883a 	add	r4,r19,r4
 8025078:	24000117 	ldw	r16,4(r4)
 802507c:	213ffe04 	addi	r4,r4,-8
 8025080:	24009726 	beq	r4,r16,80252e0 <_malloc_r+0x2f4>
 8025084:	80800117 	ldw	r2,4(r16)
 8025088:	01bfff04 	movi	r6,-4
 802508c:	014003c4 	movi	r5,15
 8025090:	1184703a 	and	r2,r2,r6
 8025094:	1447c83a 	sub	r3,r2,r17
 8025098:	28c00716 	blt	r5,r3,80250b8 <_malloc_r+0xcc>
 802509c:	1800920e 	bge	r3,zero,80252e8 <_malloc_r+0x2fc>
 80250a0:	84000317 	ldw	r16,12(r16)
 80250a4:	24008e26 	beq	r4,r16,80252e0 <_malloc_r+0x2f4>
 80250a8:	80800117 	ldw	r2,4(r16)
 80250ac:	1184703a 	and	r2,r2,r6
 80250b0:	1447c83a 	sub	r3,r2,r17
 80250b4:	28fff90e 	bge	r5,r3,802509c <__flash_rwdata_start+0xffff5580>
 80250b8:	3809883a 	mov	r4,r7
 80250bc:	01800034 	movhi	r6,0
 80250c0:	9c000417 	ldw	r16,16(r19)
 80250c4:	3181e704 	addi	r6,r6,1948
 80250c8:	32000204 	addi	r8,r6,8
 80250cc:	82013426 	beq	r16,r8,80255a0 <_malloc_r+0x5b4>
 80250d0:	80c00117 	ldw	r3,4(r16)
 80250d4:	00bfff04 	movi	r2,-4
 80250d8:	188e703a 	and	r7,r3,r2
 80250dc:	3c45c83a 	sub	r2,r7,r17
 80250e0:	00c003c4 	movi	r3,15
 80250e4:	18811f16 	blt	r3,r2,8025564 <_malloc_r+0x578>
 80250e8:	32000515 	stw	r8,20(r6)
 80250ec:	32000415 	stw	r8,16(r6)
 80250f0:	10007f0e 	bge	r2,zero,80252f0 <_malloc_r+0x304>
 80250f4:	00807fc4 	movi	r2,511
 80250f8:	11c0fd36 	bltu	r2,r7,80254f0 <_malloc_r+0x504>
 80250fc:	3806d0fa 	srli	r3,r7,3
 8025100:	01c00044 	movi	r7,1
 8025104:	30800117 	ldw	r2,4(r6)
 8025108:	19400044 	addi	r5,r3,1
 802510c:	294b883a 	add	r5,r5,r5
 8025110:	1807d0ba 	srai	r3,r3,2
 8025114:	294b883a 	add	r5,r5,r5
 8025118:	294b883a 	add	r5,r5,r5
 802511c:	298b883a 	add	r5,r5,r6
 8025120:	38c6983a 	sll	r3,r7,r3
 8025124:	29c00017 	ldw	r7,0(r5)
 8025128:	2a7ffe04 	addi	r9,r5,-8
 802512c:	1886b03a 	or	r3,r3,r2
 8025130:	82400315 	stw	r9,12(r16)
 8025134:	81c00215 	stw	r7,8(r16)
 8025138:	30c00115 	stw	r3,4(r6)
 802513c:	2c000015 	stw	r16,0(r5)
 8025140:	3c000315 	stw	r16,12(r7)
 8025144:	2005d0ba 	srai	r2,r4,2
 8025148:	01400044 	movi	r5,1
 802514c:	288a983a 	sll	r5,r5,r2
 8025150:	19406f36 	bltu	r3,r5,8025310 <_malloc_r+0x324>
 8025154:	28c4703a 	and	r2,r5,r3
 8025158:	10000a1e 	bne	r2,zero,8025184 <_malloc_r+0x198>
 802515c:	00bfff04 	movi	r2,-4
 8025160:	294b883a 	add	r5,r5,r5
 8025164:	2088703a 	and	r4,r4,r2
 8025168:	28c4703a 	and	r2,r5,r3
 802516c:	21000104 	addi	r4,r4,4
 8025170:	1000041e 	bne	r2,zero,8025184 <_malloc_r+0x198>
 8025174:	294b883a 	add	r5,r5,r5
 8025178:	28c4703a 	and	r2,r5,r3
 802517c:	21000104 	addi	r4,r4,4
 8025180:	103ffc26 	beq	r2,zero,8025174 <__flash_rwdata_start+0xffff5658>
 8025184:	02bfff04 	movi	r10,-4
 8025188:	024003c4 	movi	r9,15
 802518c:	21800044 	addi	r6,r4,1
 8025190:	318d883a 	add	r6,r6,r6
 8025194:	318d883a 	add	r6,r6,r6
 8025198:	318d883a 	add	r6,r6,r6
 802519c:	998d883a 	add	r6,r19,r6
 80251a0:	333ffe04 	addi	r12,r6,-8
 80251a4:	2017883a 	mov	r11,r4
 80251a8:	31800104 	addi	r6,r6,4
 80251ac:	34000017 	ldw	r16,0(r6)
 80251b0:	31fffd04 	addi	r7,r6,-12
 80251b4:	81c0041e 	bne	r16,r7,80251c8 <_malloc_r+0x1dc>
 80251b8:	0000fb06 	br	80255a8 <_malloc_r+0x5bc>
 80251bc:	1801030e 	bge	r3,zero,80255cc <_malloc_r+0x5e0>
 80251c0:	84000317 	ldw	r16,12(r16)
 80251c4:	81c0f826 	beq	r16,r7,80255a8 <_malloc_r+0x5bc>
 80251c8:	80800117 	ldw	r2,4(r16)
 80251cc:	1284703a 	and	r2,r2,r10
 80251d0:	1447c83a 	sub	r3,r2,r17
 80251d4:	48fff90e 	bge	r9,r3,80251bc <__flash_rwdata_start+0xffff56a0>
 80251d8:	80800317 	ldw	r2,12(r16)
 80251dc:	81000217 	ldw	r4,8(r16)
 80251e0:	89400054 	ori	r5,r17,1
 80251e4:	81400115 	stw	r5,4(r16)
 80251e8:	20800315 	stw	r2,12(r4)
 80251ec:	11000215 	stw	r4,8(r2)
 80251f0:	8463883a 	add	r17,r16,r17
 80251f4:	9c400515 	stw	r17,20(r19)
 80251f8:	9c400415 	stw	r17,16(r19)
 80251fc:	18800054 	ori	r2,r3,1
 8025200:	88800115 	stw	r2,4(r17)
 8025204:	8a000315 	stw	r8,12(r17)
 8025208:	8a000215 	stw	r8,8(r17)
 802520c:	88e3883a 	add	r17,r17,r3
 8025210:	88c00015 	stw	r3,0(r17)
 8025214:	9009883a 	mov	r4,r18
 8025218:	802d7480 	call	802d748 <__malloc_unlock>
 802521c:	80800204 	addi	r2,r16,8
 8025220:	00001b06 	br	8025290 <_malloc_r+0x2a4>
 8025224:	04400404 	movi	r17,16
 8025228:	89402536 	bltu	r17,r5,80252c0 <_malloc_r+0x2d4>
 802522c:	802d7240 	call	802d724 <__malloc_lock>
 8025230:	00800184 	movi	r2,6
 8025234:	01000084 	movi	r4,2
 8025238:	04c00034 	movhi	r19,0
 802523c:	1085883a 	add	r2,r2,r2
 8025240:	9cc1e704 	addi	r19,r19,1948
 8025244:	1085883a 	add	r2,r2,r2
 8025248:	9885883a 	add	r2,r19,r2
 802524c:	14000117 	ldw	r16,4(r2)
 8025250:	10fffe04 	addi	r3,r2,-8
 8025254:	80c0d926 	beq	r16,r3,80255bc <_malloc_r+0x5d0>
 8025258:	80c00117 	ldw	r3,4(r16)
 802525c:	81000317 	ldw	r4,12(r16)
 8025260:	00bfff04 	movi	r2,-4
 8025264:	1884703a 	and	r2,r3,r2
 8025268:	81400217 	ldw	r5,8(r16)
 802526c:	8085883a 	add	r2,r16,r2
 8025270:	10c00117 	ldw	r3,4(r2)
 8025274:	29000315 	stw	r4,12(r5)
 8025278:	21400215 	stw	r5,8(r4)
 802527c:	18c00054 	ori	r3,r3,1
 8025280:	10c00115 	stw	r3,4(r2)
 8025284:	9009883a 	mov	r4,r18
 8025288:	802d7480 	call	802d748 <__malloc_unlock>
 802528c:	80800204 	addi	r2,r16,8
 8025290:	dfc00a17 	ldw	ra,40(sp)
 8025294:	df000917 	ldw	fp,36(sp)
 8025298:	ddc00817 	ldw	r23,32(sp)
 802529c:	dd800717 	ldw	r22,28(sp)
 80252a0:	dd400617 	ldw	r21,24(sp)
 80252a4:	dd000517 	ldw	r20,20(sp)
 80252a8:	dcc00417 	ldw	r19,16(sp)
 80252ac:	dc800317 	ldw	r18,12(sp)
 80252b0:	dc400217 	ldw	r17,8(sp)
 80252b4:	dc000117 	ldw	r16,4(sp)
 80252b8:	dec00b04 	addi	sp,sp,44
 80252bc:	f800283a 	ret
 80252c0:	00800304 	movi	r2,12
 80252c4:	90800015 	stw	r2,0(r18)
 80252c8:	0005883a 	mov	r2,zero
 80252cc:	003ff006 	br	8025290 <__flash_rwdata_start+0xffff5774>
 80252d0:	01002004 	movi	r4,128
 80252d4:	02001004 	movi	r8,64
 80252d8:	01c00fc4 	movi	r7,63
 80252dc:	003f6106 	br	8025064 <__flash_rwdata_start+0xffff5548>
 80252e0:	4009883a 	mov	r4,r8
 80252e4:	003f7506 	br	80250bc <__flash_rwdata_start+0xffff55a0>
 80252e8:	81000317 	ldw	r4,12(r16)
 80252ec:	003fde06 	br	8025268 <__flash_rwdata_start+0xffff574c>
 80252f0:	81c5883a 	add	r2,r16,r7
 80252f4:	11400117 	ldw	r5,4(r2)
 80252f8:	9009883a 	mov	r4,r18
 80252fc:	29400054 	ori	r5,r5,1
 8025300:	11400115 	stw	r5,4(r2)
 8025304:	802d7480 	call	802d748 <__malloc_unlock>
 8025308:	80800204 	addi	r2,r16,8
 802530c:	003fe006 	br	8025290 <__flash_rwdata_start+0xffff5774>
 8025310:	9c000217 	ldw	r16,8(r19)
 8025314:	00bfff04 	movi	r2,-4
 8025318:	85800117 	ldw	r22,4(r16)
 802531c:	b0ac703a 	and	r22,r22,r2
 8025320:	b4400336 	bltu	r22,r17,8025330 <_malloc_r+0x344>
 8025324:	b445c83a 	sub	r2,r22,r17
 8025328:	00c003c4 	movi	r3,15
 802532c:	18805d16 	blt	r3,r2,80254a4 <_malloc_r+0x4b8>
 8025330:	05c00034 	movhi	r23,0
 8025334:	00800034 	movhi	r2,0
 8025338:	10878004 	addi	r2,r2,7680
 802533c:	bdc76e04 	addi	r23,r23,7608
 8025340:	15400017 	ldw	r21,0(r2)
 8025344:	b8c00017 	ldw	r3,0(r23)
 8025348:	00bfffc4 	movi	r2,-1
 802534c:	858d883a 	add	r6,r16,r22
 8025350:	8d6b883a 	add	r21,r17,r21
 8025354:	1880ea26 	beq	r3,r2,8025700 <_malloc_r+0x714>
 8025358:	ad4403c4 	addi	r21,r21,4111
 802535c:	00bc0004 	movi	r2,-4096
 8025360:	a8aa703a 	and	r21,r21,r2
 8025364:	a80b883a 	mov	r5,r21
 8025368:	9009883a 	mov	r4,r18
 802536c:	d9800015 	stw	r6,0(sp)
 8025370:	8026c780 	call	8026c78 <_sbrk_r>
 8025374:	1029883a 	mov	r20,r2
 8025378:	00bfffc4 	movi	r2,-1
 802537c:	d9800017 	ldw	r6,0(sp)
 8025380:	a080e826 	beq	r20,r2,8025724 <_malloc_r+0x738>
 8025384:	a180a636 	bltu	r20,r6,8025620 <_malloc_r+0x634>
 8025388:	07000034 	movhi	fp,0
 802538c:	e7078904 	addi	fp,fp,7716
 8025390:	e0800017 	ldw	r2,0(fp)
 8025394:	a887883a 	add	r3,r21,r2
 8025398:	e0c00015 	stw	r3,0(fp)
 802539c:	3500e626 	beq	r6,r20,8025738 <_malloc_r+0x74c>
 80253a0:	b9000017 	ldw	r4,0(r23)
 80253a4:	00bfffc4 	movi	r2,-1
 80253a8:	2080ee26 	beq	r4,r2,8025764 <_malloc_r+0x778>
 80253ac:	a185c83a 	sub	r2,r20,r6
 80253b0:	10c5883a 	add	r2,r2,r3
 80253b4:	e0800015 	stw	r2,0(fp)
 80253b8:	a0c001cc 	andi	r3,r20,7
 80253bc:	1800bc26 	beq	r3,zero,80256b0 <_malloc_r+0x6c4>
 80253c0:	a0e9c83a 	sub	r20,r20,r3
 80253c4:	00840204 	movi	r2,4104
 80253c8:	a5000204 	addi	r20,r20,8
 80253cc:	10c7c83a 	sub	r3,r2,r3
 80253d0:	a545883a 	add	r2,r20,r21
 80253d4:	1083ffcc 	andi	r2,r2,4095
 80253d8:	18abc83a 	sub	r21,r3,r2
 80253dc:	a80b883a 	mov	r5,r21
 80253e0:	9009883a 	mov	r4,r18
 80253e4:	8026c780 	call	8026c78 <_sbrk_r>
 80253e8:	00ffffc4 	movi	r3,-1
 80253ec:	10c0e126 	beq	r2,r3,8025774 <_malloc_r+0x788>
 80253f0:	1505c83a 	sub	r2,r2,r20
 80253f4:	1545883a 	add	r2,r2,r21
 80253f8:	10800054 	ori	r2,r2,1
 80253fc:	e0c00017 	ldw	r3,0(fp)
 8025400:	9d000215 	stw	r20,8(r19)
 8025404:	a0800115 	stw	r2,4(r20)
 8025408:	a8c7883a 	add	r3,r21,r3
 802540c:	e0c00015 	stw	r3,0(fp)
 8025410:	84c00e26 	beq	r16,r19,802544c <_malloc_r+0x460>
 8025414:	018003c4 	movi	r6,15
 8025418:	3580a72e 	bgeu	r6,r22,80256b8 <_malloc_r+0x6cc>
 802541c:	81400117 	ldw	r5,4(r16)
 8025420:	013ffe04 	movi	r4,-8
 8025424:	b0bffd04 	addi	r2,r22,-12
 8025428:	1104703a 	and	r2,r2,r4
 802542c:	2900004c 	andi	r4,r5,1
 8025430:	2088b03a 	or	r4,r4,r2
 8025434:	81000115 	stw	r4,4(r16)
 8025438:	01400144 	movi	r5,5
 802543c:	8089883a 	add	r4,r16,r2
 8025440:	21400115 	stw	r5,4(r4)
 8025444:	21400215 	stw	r5,8(r4)
 8025448:	3080cd36 	bltu	r6,r2,8025780 <_malloc_r+0x794>
 802544c:	00800034 	movhi	r2,0
 8025450:	10877f04 	addi	r2,r2,7676
 8025454:	11000017 	ldw	r4,0(r2)
 8025458:	20c0012e 	bgeu	r4,r3,8025460 <_malloc_r+0x474>
 802545c:	10c00015 	stw	r3,0(r2)
 8025460:	00800034 	movhi	r2,0
 8025464:	10877e04 	addi	r2,r2,7672
 8025468:	11000017 	ldw	r4,0(r2)
 802546c:	9c000217 	ldw	r16,8(r19)
 8025470:	20c0012e 	bgeu	r4,r3,8025478 <_malloc_r+0x48c>
 8025474:	10c00015 	stw	r3,0(r2)
 8025478:	80c00117 	ldw	r3,4(r16)
 802547c:	00bfff04 	movi	r2,-4
 8025480:	1886703a 	and	r3,r3,r2
 8025484:	1c45c83a 	sub	r2,r3,r17
 8025488:	1c400236 	bltu	r3,r17,8025494 <_malloc_r+0x4a8>
 802548c:	00c003c4 	movi	r3,15
 8025490:	18800416 	blt	r3,r2,80254a4 <_malloc_r+0x4b8>
 8025494:	9009883a 	mov	r4,r18
 8025498:	802d7480 	call	802d748 <__malloc_unlock>
 802549c:	0005883a 	mov	r2,zero
 80254a0:	003f7b06 	br	8025290 <__flash_rwdata_start+0xffff5774>
 80254a4:	88c00054 	ori	r3,r17,1
 80254a8:	80c00115 	stw	r3,4(r16)
 80254ac:	8463883a 	add	r17,r16,r17
 80254b0:	10800054 	ori	r2,r2,1
 80254b4:	9c400215 	stw	r17,8(r19)
 80254b8:	88800115 	stw	r2,4(r17)
 80254bc:	9009883a 	mov	r4,r18
 80254c0:	802d7480 	call	802d748 <__malloc_unlock>
 80254c4:	80800204 	addi	r2,r16,8
 80254c8:	003f7106 	br	8025290 <__flash_rwdata_start+0xffff5774>
 80254cc:	00c00504 	movi	r3,20
 80254d0:	18804a2e 	bgeu	r3,r2,80255fc <_malloc_r+0x610>
 80254d4:	00c01504 	movi	r3,84
 80254d8:	18806e36 	bltu	r3,r2,8025694 <_malloc_r+0x6a8>
 80254dc:	8804d33a 	srli	r2,r17,12
 80254e0:	12001bc4 	addi	r8,r2,111
 80254e4:	11c01b84 	addi	r7,r2,110
 80254e8:	4209883a 	add	r4,r8,r8
 80254ec:	003edd06 	br	8025064 <__flash_rwdata_start+0xffff5548>
 80254f0:	3804d27a 	srli	r2,r7,9
 80254f4:	00c00104 	movi	r3,4
 80254f8:	1880442e 	bgeu	r3,r2,802560c <_malloc_r+0x620>
 80254fc:	00c00504 	movi	r3,20
 8025500:	18808136 	bltu	r3,r2,8025708 <_malloc_r+0x71c>
 8025504:	11401704 	addi	r5,r2,92
 8025508:	10c016c4 	addi	r3,r2,91
 802550c:	294b883a 	add	r5,r5,r5
 8025510:	294b883a 	add	r5,r5,r5
 8025514:	294b883a 	add	r5,r5,r5
 8025518:	994b883a 	add	r5,r19,r5
 802551c:	28800017 	ldw	r2,0(r5)
 8025520:	01800034 	movhi	r6,0
 8025524:	297ffe04 	addi	r5,r5,-8
 8025528:	3181e704 	addi	r6,r6,1948
 802552c:	28806526 	beq	r5,r2,80256c4 <_malloc_r+0x6d8>
 8025530:	01bfff04 	movi	r6,-4
 8025534:	10c00117 	ldw	r3,4(r2)
 8025538:	1986703a 	and	r3,r3,r6
 802553c:	38c0022e 	bgeu	r7,r3,8025548 <_malloc_r+0x55c>
 8025540:	10800217 	ldw	r2,8(r2)
 8025544:	28bffb1e 	bne	r5,r2,8025534 <__flash_rwdata_start+0xffff5a18>
 8025548:	11400317 	ldw	r5,12(r2)
 802554c:	98c00117 	ldw	r3,4(r19)
 8025550:	81400315 	stw	r5,12(r16)
 8025554:	80800215 	stw	r2,8(r16)
 8025558:	2c000215 	stw	r16,8(r5)
 802555c:	14000315 	stw	r16,12(r2)
 8025560:	003ef806 	br	8025144 <__flash_rwdata_start+0xffff5628>
 8025564:	88c00054 	ori	r3,r17,1
 8025568:	80c00115 	stw	r3,4(r16)
 802556c:	8463883a 	add	r17,r16,r17
 8025570:	34400515 	stw	r17,20(r6)
 8025574:	34400415 	stw	r17,16(r6)
 8025578:	10c00054 	ori	r3,r2,1
 802557c:	8a000315 	stw	r8,12(r17)
 8025580:	8a000215 	stw	r8,8(r17)
 8025584:	88c00115 	stw	r3,4(r17)
 8025588:	88a3883a 	add	r17,r17,r2
 802558c:	88800015 	stw	r2,0(r17)
 8025590:	9009883a 	mov	r4,r18
 8025594:	802d7480 	call	802d748 <__malloc_unlock>
 8025598:	80800204 	addi	r2,r16,8
 802559c:	003f3c06 	br	8025290 <__flash_rwdata_start+0xffff5774>
 80255a0:	30c00117 	ldw	r3,4(r6)
 80255a4:	003ee706 	br	8025144 <__flash_rwdata_start+0xffff5628>
 80255a8:	5ac00044 	addi	r11,r11,1
 80255ac:	588000cc 	andi	r2,r11,3
 80255b0:	31800204 	addi	r6,r6,8
 80255b4:	103efd1e 	bne	r2,zero,80251ac <__flash_rwdata_start+0xffff5690>
 80255b8:	00002406 	br	802564c <_malloc_r+0x660>
 80255bc:	14000317 	ldw	r16,12(r2)
 80255c0:	143f251e 	bne	r2,r16,8025258 <__flash_rwdata_start+0xffff573c>
 80255c4:	21000084 	addi	r4,r4,2
 80255c8:	003ebc06 	br	80250bc <__flash_rwdata_start+0xffff55a0>
 80255cc:	8085883a 	add	r2,r16,r2
 80255d0:	10c00117 	ldw	r3,4(r2)
 80255d4:	81000317 	ldw	r4,12(r16)
 80255d8:	81400217 	ldw	r5,8(r16)
 80255dc:	18c00054 	ori	r3,r3,1
 80255e0:	10c00115 	stw	r3,4(r2)
 80255e4:	29000315 	stw	r4,12(r5)
 80255e8:	21400215 	stw	r5,8(r4)
 80255ec:	9009883a 	mov	r4,r18
 80255f0:	802d7480 	call	802d748 <__malloc_unlock>
 80255f4:	80800204 	addi	r2,r16,8
 80255f8:	003f2506 	br	8025290 <__flash_rwdata_start+0xffff5774>
 80255fc:	12001704 	addi	r8,r2,92
 8025600:	11c016c4 	addi	r7,r2,91
 8025604:	4209883a 	add	r4,r8,r8
 8025608:	003e9606 	br	8025064 <__flash_rwdata_start+0xffff5548>
 802560c:	3804d1ba 	srli	r2,r7,6
 8025610:	11400e44 	addi	r5,r2,57
 8025614:	10c00e04 	addi	r3,r2,56
 8025618:	294b883a 	add	r5,r5,r5
 802561c:	003fbc06 	br	8025510 <__flash_rwdata_start+0xffff59f4>
 8025620:	84ff5926 	beq	r16,r19,8025388 <__flash_rwdata_start+0xffff586c>
 8025624:	00800034 	movhi	r2,0
 8025628:	1081e704 	addi	r2,r2,1948
 802562c:	14000217 	ldw	r16,8(r2)
 8025630:	00bfff04 	movi	r2,-4
 8025634:	80c00117 	ldw	r3,4(r16)
 8025638:	1886703a 	and	r3,r3,r2
 802563c:	003f9106 	br	8025484 <__flash_rwdata_start+0xffff5968>
 8025640:	60800217 	ldw	r2,8(r12)
 8025644:	213fffc4 	addi	r4,r4,-1
 8025648:	1300651e 	bne	r2,r12,80257e0 <_malloc_r+0x7f4>
 802564c:	208000cc 	andi	r2,r4,3
 8025650:	633ffe04 	addi	r12,r12,-8
 8025654:	103ffa1e 	bne	r2,zero,8025640 <__flash_rwdata_start+0xffff5b24>
 8025658:	98800117 	ldw	r2,4(r19)
 802565c:	0146303a 	nor	r3,zero,r5
 8025660:	1884703a 	and	r2,r3,r2
 8025664:	98800115 	stw	r2,4(r19)
 8025668:	294b883a 	add	r5,r5,r5
 802566c:	117f2836 	bltu	r2,r5,8025310 <__flash_rwdata_start+0xffff57f4>
 8025670:	283f2726 	beq	r5,zero,8025310 <__flash_rwdata_start+0xffff57f4>
 8025674:	2886703a 	and	r3,r5,r2
 8025678:	5809883a 	mov	r4,r11
 802567c:	183ec31e 	bne	r3,zero,802518c <__flash_rwdata_start+0xffff5670>
 8025680:	294b883a 	add	r5,r5,r5
 8025684:	2886703a 	and	r3,r5,r2
 8025688:	21000104 	addi	r4,r4,4
 802568c:	183ffc26 	beq	r3,zero,8025680 <__flash_rwdata_start+0xffff5b64>
 8025690:	003ebe06 	br	802518c <__flash_rwdata_start+0xffff5670>
 8025694:	00c05504 	movi	r3,340
 8025698:	18801236 	bltu	r3,r2,80256e4 <_malloc_r+0x6f8>
 802569c:	8804d3fa 	srli	r2,r17,15
 80256a0:	12001e04 	addi	r8,r2,120
 80256a4:	11c01dc4 	addi	r7,r2,119
 80256a8:	4209883a 	add	r4,r8,r8
 80256ac:	003e6d06 	br	8025064 <__flash_rwdata_start+0xffff5548>
 80256b0:	00c40004 	movi	r3,4096
 80256b4:	003f4606 	br	80253d0 <__flash_rwdata_start+0xffff58b4>
 80256b8:	00800044 	movi	r2,1
 80256bc:	a0800115 	stw	r2,4(r20)
 80256c0:	003f7406 	br	8025494 <__flash_rwdata_start+0xffff5978>
 80256c4:	1805d0ba 	srai	r2,r3,2
 80256c8:	01c00044 	movi	r7,1
 80256cc:	30c00117 	ldw	r3,4(r6)
 80256d0:	388e983a 	sll	r7,r7,r2
 80256d4:	2805883a 	mov	r2,r5
 80256d8:	38c6b03a 	or	r3,r7,r3
 80256dc:	30c00115 	stw	r3,4(r6)
 80256e0:	003f9b06 	br	8025550 <__flash_rwdata_start+0xffff5a34>
 80256e4:	00c15504 	movi	r3,1364
 80256e8:	18801a36 	bltu	r3,r2,8025754 <_malloc_r+0x768>
 80256ec:	8804d4ba 	srli	r2,r17,18
 80256f0:	12001f44 	addi	r8,r2,125
 80256f4:	11c01f04 	addi	r7,r2,124
 80256f8:	4209883a 	add	r4,r8,r8
 80256fc:	003e5906 	br	8025064 <__flash_rwdata_start+0xffff5548>
 8025700:	ad400404 	addi	r21,r21,16
 8025704:	003f1706 	br	8025364 <__flash_rwdata_start+0xffff5848>
 8025708:	00c01504 	movi	r3,84
 802570c:	18802336 	bltu	r3,r2,802579c <_malloc_r+0x7b0>
 8025710:	3804d33a 	srli	r2,r7,12
 8025714:	11401bc4 	addi	r5,r2,111
 8025718:	10c01b84 	addi	r3,r2,110
 802571c:	294b883a 	add	r5,r5,r5
 8025720:	003f7b06 	br	8025510 <__flash_rwdata_start+0xffff59f4>
 8025724:	9c000217 	ldw	r16,8(r19)
 8025728:	00bfff04 	movi	r2,-4
 802572c:	80c00117 	ldw	r3,4(r16)
 8025730:	1886703a 	and	r3,r3,r2
 8025734:	003f5306 	br	8025484 <__flash_rwdata_start+0xffff5968>
 8025738:	3083ffcc 	andi	r2,r6,4095
 802573c:	103f181e 	bne	r2,zero,80253a0 <__flash_rwdata_start+0xffff5884>
 8025740:	99000217 	ldw	r4,8(r19)
 8025744:	b545883a 	add	r2,r22,r21
 8025748:	10800054 	ori	r2,r2,1
 802574c:	20800115 	stw	r2,4(r4)
 8025750:	003f3e06 	br	802544c <__flash_rwdata_start+0xffff5930>
 8025754:	01003f84 	movi	r4,254
 8025758:	02001fc4 	movi	r8,127
 802575c:	01c01f84 	movi	r7,126
 8025760:	003e4006 	br	8025064 <__flash_rwdata_start+0xffff5548>
 8025764:	00800034 	movhi	r2,0
 8025768:	10876e04 	addi	r2,r2,7608
 802576c:	15000015 	stw	r20,0(r2)
 8025770:	003f1106 	br	80253b8 <__flash_rwdata_start+0xffff589c>
 8025774:	00800044 	movi	r2,1
 8025778:	002b883a 	mov	r21,zero
 802577c:	003f1f06 	br	80253fc <__flash_rwdata_start+0xffff58e0>
 8025780:	81400204 	addi	r5,r16,8
 8025784:	9009883a 	mov	r4,r18
 8025788:	80248bc0 	call	80248bc <_free_r>
 802578c:	00800034 	movhi	r2,0
 8025790:	10878904 	addi	r2,r2,7716
 8025794:	10c00017 	ldw	r3,0(r2)
 8025798:	003f2c06 	br	802544c <__flash_rwdata_start+0xffff5930>
 802579c:	00c05504 	movi	r3,340
 80257a0:	18800536 	bltu	r3,r2,80257b8 <_malloc_r+0x7cc>
 80257a4:	3804d3fa 	srli	r2,r7,15
 80257a8:	11401e04 	addi	r5,r2,120
 80257ac:	10c01dc4 	addi	r3,r2,119
 80257b0:	294b883a 	add	r5,r5,r5
 80257b4:	003f5606 	br	8025510 <__flash_rwdata_start+0xffff59f4>
 80257b8:	00c15504 	movi	r3,1364
 80257bc:	18800536 	bltu	r3,r2,80257d4 <_malloc_r+0x7e8>
 80257c0:	3804d4ba 	srli	r2,r7,18
 80257c4:	11401f44 	addi	r5,r2,125
 80257c8:	10c01f04 	addi	r3,r2,124
 80257cc:	294b883a 	add	r5,r5,r5
 80257d0:	003f4f06 	br	8025510 <__flash_rwdata_start+0xffff59f4>
 80257d4:	01403f84 	movi	r5,254
 80257d8:	00c01f84 	movi	r3,126
 80257dc:	003f4c06 	br	8025510 <__flash_rwdata_start+0xffff59f4>
 80257e0:	98800117 	ldw	r2,4(r19)
 80257e4:	003fa006 	br	8025668 <__flash_rwdata_start+0xffff5b4c>
 80257e8:	8808d0fa 	srli	r4,r17,3
 80257ec:	20800044 	addi	r2,r4,1
 80257f0:	1085883a 	add	r2,r2,r2
 80257f4:	003e9006 	br	8025238 <__flash_rwdata_start+0xffff571c>

080257f8 <memchr>:
 80257f8:	208000cc 	andi	r2,r4,3
 80257fc:	280f883a 	mov	r7,r5
 8025800:	10003426 	beq	r2,zero,80258d4 <memchr+0xdc>
 8025804:	30bfffc4 	addi	r2,r6,-1
 8025808:	30001a26 	beq	r6,zero,8025874 <memchr+0x7c>
 802580c:	20c00003 	ldbu	r3,0(r4)
 8025810:	29803fcc 	andi	r6,r5,255
 8025814:	30c0051e 	bne	r6,r3,802582c <memchr+0x34>
 8025818:	00001806 	br	802587c <memchr+0x84>
 802581c:	10001526 	beq	r2,zero,8025874 <memchr+0x7c>
 8025820:	20c00003 	ldbu	r3,0(r4)
 8025824:	10bfffc4 	addi	r2,r2,-1
 8025828:	30c01426 	beq	r6,r3,802587c <memchr+0x84>
 802582c:	21000044 	addi	r4,r4,1
 8025830:	20c000cc 	andi	r3,r4,3
 8025834:	183ff91e 	bne	r3,zero,802581c <__flash_rwdata_start+0xffff5d00>
 8025838:	020000c4 	movi	r8,3
 802583c:	40801136 	bltu	r8,r2,8025884 <memchr+0x8c>
 8025840:	10000c26 	beq	r2,zero,8025874 <memchr+0x7c>
 8025844:	20c00003 	ldbu	r3,0(r4)
 8025848:	29403fcc 	andi	r5,r5,255
 802584c:	28c00b26 	beq	r5,r3,802587c <memchr+0x84>
 8025850:	20c00044 	addi	r3,r4,1
 8025854:	39803fcc 	andi	r6,r7,255
 8025858:	2089883a 	add	r4,r4,r2
 802585c:	00000306 	br	802586c <memchr+0x74>
 8025860:	18c00044 	addi	r3,r3,1
 8025864:	197fffc3 	ldbu	r5,-1(r3)
 8025868:	31400526 	beq	r6,r5,8025880 <memchr+0x88>
 802586c:	1805883a 	mov	r2,r3
 8025870:	20fffb1e 	bne	r4,r3,8025860 <__flash_rwdata_start+0xffff5d44>
 8025874:	0005883a 	mov	r2,zero
 8025878:	f800283a 	ret
 802587c:	2005883a 	mov	r2,r4
 8025880:	f800283a 	ret
 8025884:	28c03fcc 	andi	r3,r5,255
 8025888:	1812923a 	slli	r9,r3,8
 802588c:	02ffbff4 	movhi	r11,65279
 8025890:	02a02074 	movhi	r10,32897
 8025894:	48d2b03a 	or	r9,r9,r3
 8025898:	4806943a 	slli	r3,r9,16
 802589c:	5affbfc4 	addi	r11,r11,-257
 80258a0:	52a02004 	addi	r10,r10,-32640
 80258a4:	48d2b03a 	or	r9,r9,r3
 80258a8:	20c00017 	ldw	r3,0(r4)
 80258ac:	48c6f03a 	xor	r3,r9,r3
 80258b0:	1acd883a 	add	r6,r3,r11
 80258b4:	00c6303a 	nor	r3,zero,r3
 80258b8:	30c6703a 	and	r3,r6,r3
 80258bc:	1a86703a 	and	r3,r3,r10
 80258c0:	183fe01e 	bne	r3,zero,8025844 <__flash_rwdata_start+0xffff5d28>
 80258c4:	10bfff04 	addi	r2,r2,-4
 80258c8:	21000104 	addi	r4,r4,4
 80258cc:	40bff636 	bltu	r8,r2,80258a8 <__flash_rwdata_start+0xffff5d8c>
 80258d0:	003fdb06 	br	8025840 <__flash_rwdata_start+0xffff5d24>
 80258d4:	3005883a 	mov	r2,r6
 80258d8:	003fd706 	br	8025838 <__flash_rwdata_start+0xffff5d1c>

080258dc <memcpy>:
 80258dc:	defffd04 	addi	sp,sp,-12
 80258e0:	dfc00215 	stw	ra,8(sp)
 80258e4:	dc400115 	stw	r17,4(sp)
 80258e8:	dc000015 	stw	r16,0(sp)
 80258ec:	00c003c4 	movi	r3,15
 80258f0:	2005883a 	mov	r2,r4
 80258f4:	1980452e 	bgeu	r3,r6,8025a0c <memcpy+0x130>
 80258f8:	2906b03a 	or	r3,r5,r4
 80258fc:	18c000cc 	andi	r3,r3,3
 8025900:	1800441e 	bne	r3,zero,8025a14 <memcpy+0x138>
 8025904:	347ffc04 	addi	r17,r6,-16
 8025908:	8822d13a 	srli	r17,r17,4
 802590c:	28c00104 	addi	r3,r5,4
 8025910:	23400104 	addi	r13,r4,4
 8025914:	8820913a 	slli	r16,r17,4
 8025918:	2b000204 	addi	r12,r5,8
 802591c:	22c00204 	addi	r11,r4,8
 8025920:	84000504 	addi	r16,r16,20
 8025924:	2a800304 	addi	r10,r5,12
 8025928:	22400304 	addi	r9,r4,12
 802592c:	2c21883a 	add	r16,r5,r16
 8025930:	2811883a 	mov	r8,r5
 8025934:	200f883a 	mov	r7,r4
 8025938:	41000017 	ldw	r4,0(r8)
 802593c:	1fc00017 	ldw	ra,0(r3)
 8025940:	63c00017 	ldw	r15,0(r12)
 8025944:	39000015 	stw	r4,0(r7)
 8025948:	53800017 	ldw	r14,0(r10)
 802594c:	6fc00015 	stw	ra,0(r13)
 8025950:	5bc00015 	stw	r15,0(r11)
 8025954:	4b800015 	stw	r14,0(r9)
 8025958:	18c00404 	addi	r3,r3,16
 802595c:	39c00404 	addi	r7,r7,16
 8025960:	42000404 	addi	r8,r8,16
 8025964:	6b400404 	addi	r13,r13,16
 8025968:	63000404 	addi	r12,r12,16
 802596c:	5ac00404 	addi	r11,r11,16
 8025970:	52800404 	addi	r10,r10,16
 8025974:	4a400404 	addi	r9,r9,16
 8025978:	1c3fef1e 	bne	r3,r16,8025938 <__flash_rwdata_start+0xffff5e1c>
 802597c:	89c00044 	addi	r7,r17,1
 8025980:	380e913a 	slli	r7,r7,4
 8025984:	310003cc 	andi	r4,r6,15
 8025988:	02c000c4 	movi	r11,3
 802598c:	11c7883a 	add	r3,r2,r7
 8025990:	29cb883a 	add	r5,r5,r7
 8025994:	5900212e 	bgeu	r11,r4,8025a1c <memcpy+0x140>
 8025998:	1813883a 	mov	r9,r3
 802599c:	2811883a 	mov	r8,r5
 80259a0:	200f883a 	mov	r7,r4
 80259a4:	42800017 	ldw	r10,0(r8)
 80259a8:	4a400104 	addi	r9,r9,4
 80259ac:	39ffff04 	addi	r7,r7,-4
 80259b0:	4abfff15 	stw	r10,-4(r9)
 80259b4:	42000104 	addi	r8,r8,4
 80259b8:	59fffa36 	bltu	r11,r7,80259a4 <__flash_rwdata_start+0xffff5e88>
 80259bc:	213fff04 	addi	r4,r4,-4
 80259c0:	2008d0ba 	srli	r4,r4,2
 80259c4:	318000cc 	andi	r6,r6,3
 80259c8:	21000044 	addi	r4,r4,1
 80259cc:	2109883a 	add	r4,r4,r4
 80259d0:	2109883a 	add	r4,r4,r4
 80259d4:	1907883a 	add	r3,r3,r4
 80259d8:	290b883a 	add	r5,r5,r4
 80259dc:	30000626 	beq	r6,zero,80259f8 <memcpy+0x11c>
 80259e0:	198d883a 	add	r6,r3,r6
 80259e4:	29c00003 	ldbu	r7,0(r5)
 80259e8:	18c00044 	addi	r3,r3,1
 80259ec:	29400044 	addi	r5,r5,1
 80259f0:	19ffffc5 	stb	r7,-1(r3)
 80259f4:	19bffb1e 	bne	r3,r6,80259e4 <__flash_rwdata_start+0xffff5ec8>
 80259f8:	dfc00217 	ldw	ra,8(sp)
 80259fc:	dc400117 	ldw	r17,4(sp)
 8025a00:	dc000017 	ldw	r16,0(sp)
 8025a04:	dec00304 	addi	sp,sp,12
 8025a08:	f800283a 	ret
 8025a0c:	2007883a 	mov	r3,r4
 8025a10:	003ff206 	br	80259dc <__flash_rwdata_start+0xffff5ec0>
 8025a14:	2007883a 	mov	r3,r4
 8025a18:	003ff106 	br	80259e0 <__flash_rwdata_start+0xffff5ec4>
 8025a1c:	200d883a 	mov	r6,r4
 8025a20:	003fee06 	br	80259dc <__flash_rwdata_start+0xffff5ec0>

08025a24 <memset>:
 8025a24:	20c000cc 	andi	r3,r4,3
 8025a28:	2005883a 	mov	r2,r4
 8025a2c:	18004426 	beq	r3,zero,8025b40 <memset+0x11c>
 8025a30:	31ffffc4 	addi	r7,r6,-1
 8025a34:	30004026 	beq	r6,zero,8025b38 <memset+0x114>
 8025a38:	2813883a 	mov	r9,r5
 8025a3c:	200d883a 	mov	r6,r4
 8025a40:	2007883a 	mov	r3,r4
 8025a44:	00000406 	br	8025a58 <memset+0x34>
 8025a48:	3a3fffc4 	addi	r8,r7,-1
 8025a4c:	31800044 	addi	r6,r6,1
 8025a50:	38003926 	beq	r7,zero,8025b38 <memset+0x114>
 8025a54:	400f883a 	mov	r7,r8
 8025a58:	18c00044 	addi	r3,r3,1
 8025a5c:	32400005 	stb	r9,0(r6)
 8025a60:	1a0000cc 	andi	r8,r3,3
 8025a64:	403ff81e 	bne	r8,zero,8025a48 <__flash_rwdata_start+0xffff5f2c>
 8025a68:	010000c4 	movi	r4,3
 8025a6c:	21c02d2e 	bgeu	r4,r7,8025b24 <memset+0x100>
 8025a70:	29003fcc 	andi	r4,r5,255
 8025a74:	200c923a 	slli	r6,r4,8
 8025a78:	3108b03a 	or	r4,r6,r4
 8025a7c:	200c943a 	slli	r6,r4,16
 8025a80:	218cb03a 	or	r6,r4,r6
 8025a84:	010003c4 	movi	r4,15
 8025a88:	21c0182e 	bgeu	r4,r7,8025aec <memset+0xc8>
 8025a8c:	3b3ffc04 	addi	r12,r7,-16
 8025a90:	6018d13a 	srli	r12,r12,4
 8025a94:	1a000104 	addi	r8,r3,4
 8025a98:	1ac00204 	addi	r11,r3,8
 8025a9c:	6008913a 	slli	r4,r12,4
 8025aa0:	1a800304 	addi	r10,r3,12
 8025aa4:	1813883a 	mov	r9,r3
 8025aa8:	21000504 	addi	r4,r4,20
 8025aac:	1909883a 	add	r4,r3,r4
 8025ab0:	49800015 	stw	r6,0(r9)
 8025ab4:	41800015 	stw	r6,0(r8)
 8025ab8:	59800015 	stw	r6,0(r11)
 8025abc:	51800015 	stw	r6,0(r10)
 8025ac0:	42000404 	addi	r8,r8,16
 8025ac4:	4a400404 	addi	r9,r9,16
 8025ac8:	5ac00404 	addi	r11,r11,16
 8025acc:	52800404 	addi	r10,r10,16
 8025ad0:	413ff71e 	bne	r8,r4,8025ab0 <__flash_rwdata_start+0xffff5f94>
 8025ad4:	63000044 	addi	r12,r12,1
 8025ad8:	6018913a 	slli	r12,r12,4
 8025adc:	39c003cc 	andi	r7,r7,15
 8025ae0:	010000c4 	movi	r4,3
 8025ae4:	1b07883a 	add	r3,r3,r12
 8025ae8:	21c00e2e 	bgeu	r4,r7,8025b24 <memset+0x100>
 8025aec:	1813883a 	mov	r9,r3
 8025af0:	3811883a 	mov	r8,r7
 8025af4:	010000c4 	movi	r4,3
 8025af8:	49800015 	stw	r6,0(r9)
 8025afc:	423fff04 	addi	r8,r8,-4
 8025b00:	4a400104 	addi	r9,r9,4
 8025b04:	223ffc36 	bltu	r4,r8,8025af8 <__flash_rwdata_start+0xffff5fdc>
 8025b08:	393fff04 	addi	r4,r7,-4
 8025b0c:	2008d0ba 	srli	r4,r4,2
 8025b10:	39c000cc 	andi	r7,r7,3
 8025b14:	21000044 	addi	r4,r4,1
 8025b18:	2109883a 	add	r4,r4,r4
 8025b1c:	2109883a 	add	r4,r4,r4
 8025b20:	1907883a 	add	r3,r3,r4
 8025b24:	38000526 	beq	r7,zero,8025b3c <memset+0x118>
 8025b28:	19cf883a 	add	r7,r3,r7
 8025b2c:	19400005 	stb	r5,0(r3)
 8025b30:	18c00044 	addi	r3,r3,1
 8025b34:	38fffd1e 	bne	r7,r3,8025b2c <__flash_rwdata_start+0xffff6010>
 8025b38:	f800283a 	ret
 8025b3c:	f800283a 	ret
 8025b40:	2007883a 	mov	r3,r4
 8025b44:	300f883a 	mov	r7,r6
 8025b48:	003fc706 	br	8025a68 <__flash_rwdata_start+0xffff5f4c>

08025b4c <_Balloc>:
 8025b4c:	20801317 	ldw	r2,76(r4)
 8025b50:	defffc04 	addi	sp,sp,-16
 8025b54:	dc400115 	stw	r17,4(sp)
 8025b58:	dc000015 	stw	r16,0(sp)
 8025b5c:	dfc00315 	stw	ra,12(sp)
 8025b60:	dc800215 	stw	r18,8(sp)
 8025b64:	2023883a 	mov	r17,r4
 8025b68:	2821883a 	mov	r16,r5
 8025b6c:	10000f26 	beq	r2,zero,8025bac <_Balloc+0x60>
 8025b70:	8407883a 	add	r3,r16,r16
 8025b74:	18c7883a 	add	r3,r3,r3
 8025b78:	10c7883a 	add	r3,r2,r3
 8025b7c:	18800017 	ldw	r2,0(r3)
 8025b80:	10001126 	beq	r2,zero,8025bc8 <_Balloc+0x7c>
 8025b84:	11000017 	ldw	r4,0(r2)
 8025b88:	19000015 	stw	r4,0(r3)
 8025b8c:	10000415 	stw	zero,16(r2)
 8025b90:	10000315 	stw	zero,12(r2)
 8025b94:	dfc00317 	ldw	ra,12(sp)
 8025b98:	dc800217 	ldw	r18,8(sp)
 8025b9c:	dc400117 	ldw	r17,4(sp)
 8025ba0:	dc000017 	ldw	r16,0(sp)
 8025ba4:	dec00404 	addi	sp,sp,16
 8025ba8:	f800283a 	ret
 8025bac:	01800844 	movi	r6,33
 8025bb0:	01400104 	movi	r5,4
 8025bb4:	80287280 	call	8028728 <_calloc_r>
 8025bb8:	88801315 	stw	r2,76(r17)
 8025bbc:	103fec1e 	bne	r2,zero,8025b70 <__flash_rwdata_start+0xffff6054>
 8025bc0:	0005883a 	mov	r2,zero
 8025bc4:	003ff306 	br	8025b94 <__flash_rwdata_start+0xffff6078>
 8025bc8:	01400044 	movi	r5,1
 8025bcc:	2c24983a 	sll	r18,r5,r16
 8025bd0:	8809883a 	mov	r4,r17
 8025bd4:	91800144 	addi	r6,r18,5
 8025bd8:	318d883a 	add	r6,r6,r6
 8025bdc:	318d883a 	add	r6,r6,r6
 8025be0:	80287280 	call	8028728 <_calloc_r>
 8025be4:	103ff626 	beq	r2,zero,8025bc0 <__flash_rwdata_start+0xffff60a4>
 8025be8:	14000115 	stw	r16,4(r2)
 8025bec:	14800215 	stw	r18,8(r2)
 8025bf0:	003fe606 	br	8025b8c <__flash_rwdata_start+0xffff6070>

08025bf4 <_Bfree>:
 8025bf4:	28000826 	beq	r5,zero,8025c18 <_Bfree+0x24>
 8025bf8:	28c00117 	ldw	r3,4(r5)
 8025bfc:	20801317 	ldw	r2,76(r4)
 8025c00:	18c7883a 	add	r3,r3,r3
 8025c04:	18c7883a 	add	r3,r3,r3
 8025c08:	10c5883a 	add	r2,r2,r3
 8025c0c:	10c00017 	ldw	r3,0(r2)
 8025c10:	28c00015 	stw	r3,0(r5)
 8025c14:	11400015 	stw	r5,0(r2)
 8025c18:	f800283a 	ret

08025c1c <__multadd>:
 8025c1c:	defff704 	addi	sp,sp,-36
 8025c20:	dc800215 	stw	r18,8(sp)
 8025c24:	2c800417 	ldw	r18,16(r5)
 8025c28:	dd800615 	stw	r22,24(sp)
 8025c2c:	dd400515 	stw	r21,20(sp)
 8025c30:	dd000415 	stw	r20,16(sp)
 8025c34:	dcc00315 	stw	r19,12(sp)
 8025c38:	dc400115 	stw	r17,4(sp)
 8025c3c:	dc000015 	stw	r16,0(sp)
 8025c40:	dfc00815 	stw	ra,32(sp)
 8025c44:	ddc00715 	stw	r23,28(sp)
 8025c48:	2827883a 	mov	r19,r5
 8025c4c:	2029883a 	mov	r20,r4
 8025c50:	3023883a 	mov	r17,r6
 8025c54:	3821883a 	mov	r16,r7
 8025c58:	2d400504 	addi	r21,r5,20
 8025c5c:	002d883a 	mov	r22,zero
 8025c60:	adc00017 	ldw	r23,0(r21)
 8025c64:	880b883a 	mov	r5,r17
 8025c68:	ad400104 	addi	r21,r21,4
 8025c6c:	b93fffcc 	andi	r4,r23,65535
 8025c70:	802a8bc0 	call	802a8bc <__mulsi3>
 8025c74:	b808d43a 	srli	r4,r23,16
 8025c78:	880b883a 	mov	r5,r17
 8025c7c:	1421883a 	add	r16,r2,r16
 8025c80:	802a8bc0 	call	802a8bc <__mulsi3>
 8025c84:	800ed43a 	srli	r7,r16,16
 8025c88:	80ffffcc 	andi	r3,r16,65535
 8025c8c:	b5800044 	addi	r22,r22,1
 8025c90:	11c5883a 	add	r2,r2,r7
 8025c94:	100e943a 	slli	r7,r2,16
 8025c98:	1020d43a 	srli	r16,r2,16
 8025c9c:	38c7883a 	add	r3,r7,r3
 8025ca0:	a8ffff15 	stw	r3,-4(r21)
 8025ca4:	b4bfee16 	blt	r22,r18,8025c60 <__flash_rwdata_start+0xffff6144>
 8025ca8:	80000926 	beq	r16,zero,8025cd0 <__multadd+0xb4>
 8025cac:	98800217 	ldw	r2,8(r19)
 8025cb0:	9080130e 	bge	r18,r2,8025d00 <__multadd+0xe4>
 8025cb4:	90800144 	addi	r2,r18,5
 8025cb8:	1085883a 	add	r2,r2,r2
 8025cbc:	1085883a 	add	r2,r2,r2
 8025cc0:	9885883a 	add	r2,r19,r2
 8025cc4:	14000015 	stw	r16,0(r2)
 8025cc8:	94800044 	addi	r18,r18,1
 8025ccc:	9c800415 	stw	r18,16(r19)
 8025cd0:	9805883a 	mov	r2,r19
 8025cd4:	dfc00817 	ldw	ra,32(sp)
 8025cd8:	ddc00717 	ldw	r23,28(sp)
 8025cdc:	dd800617 	ldw	r22,24(sp)
 8025ce0:	dd400517 	ldw	r21,20(sp)
 8025ce4:	dd000417 	ldw	r20,16(sp)
 8025ce8:	dcc00317 	ldw	r19,12(sp)
 8025cec:	dc800217 	ldw	r18,8(sp)
 8025cf0:	dc400117 	ldw	r17,4(sp)
 8025cf4:	dc000017 	ldw	r16,0(sp)
 8025cf8:	dec00904 	addi	sp,sp,36
 8025cfc:	f800283a 	ret
 8025d00:	99400117 	ldw	r5,4(r19)
 8025d04:	a009883a 	mov	r4,r20
 8025d08:	29400044 	addi	r5,r5,1
 8025d0c:	8025b4c0 	call	8025b4c <_Balloc>
 8025d10:	99800417 	ldw	r6,16(r19)
 8025d14:	99400304 	addi	r5,r19,12
 8025d18:	11000304 	addi	r4,r2,12
 8025d1c:	31800084 	addi	r6,r6,2
 8025d20:	318d883a 	add	r6,r6,r6
 8025d24:	318d883a 	add	r6,r6,r6
 8025d28:	1023883a 	mov	r17,r2
 8025d2c:	80258dc0 	call	80258dc <memcpy>
 8025d30:	98000a26 	beq	r19,zero,8025d5c <__multadd+0x140>
 8025d34:	98c00117 	ldw	r3,4(r19)
 8025d38:	a0801317 	ldw	r2,76(r20)
 8025d3c:	18c7883a 	add	r3,r3,r3
 8025d40:	18c7883a 	add	r3,r3,r3
 8025d44:	10c5883a 	add	r2,r2,r3
 8025d48:	10c00017 	ldw	r3,0(r2)
 8025d4c:	98c00015 	stw	r3,0(r19)
 8025d50:	14c00015 	stw	r19,0(r2)
 8025d54:	8827883a 	mov	r19,r17
 8025d58:	003fd606 	br	8025cb4 <__flash_rwdata_start+0xffff6198>
 8025d5c:	8827883a 	mov	r19,r17
 8025d60:	003fd406 	br	8025cb4 <__flash_rwdata_start+0xffff6198>

08025d64 <__s2b>:
 8025d64:	defff904 	addi	sp,sp,-28
 8025d68:	dc400115 	stw	r17,4(sp)
 8025d6c:	dc000015 	stw	r16,0(sp)
 8025d70:	2023883a 	mov	r17,r4
 8025d74:	2821883a 	mov	r16,r5
 8025d78:	39000204 	addi	r4,r7,8
 8025d7c:	01400244 	movi	r5,9
 8025d80:	dcc00315 	stw	r19,12(sp)
 8025d84:	dc800215 	stw	r18,8(sp)
 8025d88:	dfc00615 	stw	ra,24(sp)
 8025d8c:	dd400515 	stw	r21,20(sp)
 8025d90:	dd000415 	stw	r20,16(sp)
 8025d94:	3825883a 	mov	r18,r7
 8025d98:	3027883a 	mov	r19,r6
 8025d9c:	802a7080 	call	802a708 <__divsi3>
 8025da0:	00c00044 	movi	r3,1
 8025da4:	000b883a 	mov	r5,zero
 8025da8:	1880030e 	bge	r3,r2,8025db8 <__s2b+0x54>
 8025dac:	18c7883a 	add	r3,r3,r3
 8025db0:	29400044 	addi	r5,r5,1
 8025db4:	18bffd16 	blt	r3,r2,8025dac <__flash_rwdata_start+0xffff6290>
 8025db8:	8809883a 	mov	r4,r17
 8025dbc:	8025b4c0 	call	8025b4c <_Balloc>
 8025dc0:	d8c00717 	ldw	r3,28(sp)
 8025dc4:	10c00515 	stw	r3,20(r2)
 8025dc8:	00c00044 	movi	r3,1
 8025dcc:	10c00415 	stw	r3,16(r2)
 8025dd0:	00c00244 	movi	r3,9
 8025dd4:	1cc0210e 	bge	r3,r19,8025e5c <__s2b+0xf8>
 8025dd8:	80eb883a 	add	r21,r16,r3
 8025ddc:	a829883a 	mov	r20,r21
 8025de0:	84e1883a 	add	r16,r16,r19
 8025de4:	a1c00007 	ldb	r7,0(r20)
 8025de8:	01800284 	movi	r6,10
 8025dec:	a5000044 	addi	r20,r20,1
 8025df0:	100b883a 	mov	r5,r2
 8025df4:	39fff404 	addi	r7,r7,-48
 8025df8:	8809883a 	mov	r4,r17
 8025dfc:	8025c1c0 	call	8025c1c <__multadd>
 8025e00:	a43ff81e 	bne	r20,r16,8025de4 <__flash_rwdata_start+0xffff62c8>
 8025e04:	ace1883a 	add	r16,r21,r19
 8025e08:	843ffe04 	addi	r16,r16,-8
 8025e0c:	9c800a0e 	bge	r19,r18,8025e38 <__s2b+0xd4>
 8025e10:	94e5c83a 	sub	r18,r18,r19
 8025e14:	84a5883a 	add	r18,r16,r18
 8025e18:	81c00007 	ldb	r7,0(r16)
 8025e1c:	01800284 	movi	r6,10
 8025e20:	84000044 	addi	r16,r16,1
 8025e24:	100b883a 	mov	r5,r2
 8025e28:	39fff404 	addi	r7,r7,-48
 8025e2c:	8809883a 	mov	r4,r17
 8025e30:	8025c1c0 	call	8025c1c <__multadd>
 8025e34:	84bff81e 	bne	r16,r18,8025e18 <__flash_rwdata_start+0xffff62fc>
 8025e38:	dfc00617 	ldw	ra,24(sp)
 8025e3c:	dd400517 	ldw	r21,20(sp)
 8025e40:	dd000417 	ldw	r20,16(sp)
 8025e44:	dcc00317 	ldw	r19,12(sp)
 8025e48:	dc800217 	ldw	r18,8(sp)
 8025e4c:	dc400117 	ldw	r17,4(sp)
 8025e50:	dc000017 	ldw	r16,0(sp)
 8025e54:	dec00704 	addi	sp,sp,28
 8025e58:	f800283a 	ret
 8025e5c:	84000284 	addi	r16,r16,10
 8025e60:	1827883a 	mov	r19,r3
 8025e64:	003fe906 	br	8025e0c <__flash_rwdata_start+0xffff62f0>

08025e68 <__hi0bits>:
 8025e68:	20bfffec 	andhi	r2,r4,65535
 8025e6c:	1000141e 	bne	r2,zero,8025ec0 <__hi0bits+0x58>
 8025e70:	2008943a 	slli	r4,r4,16
 8025e74:	00800404 	movi	r2,16
 8025e78:	20ffc02c 	andhi	r3,r4,65280
 8025e7c:	1800021e 	bne	r3,zero,8025e88 <__hi0bits+0x20>
 8025e80:	2008923a 	slli	r4,r4,8
 8025e84:	10800204 	addi	r2,r2,8
 8025e88:	20fc002c 	andhi	r3,r4,61440
 8025e8c:	1800021e 	bne	r3,zero,8025e98 <__hi0bits+0x30>
 8025e90:	2008913a 	slli	r4,r4,4
 8025e94:	10800104 	addi	r2,r2,4
 8025e98:	20f0002c 	andhi	r3,r4,49152
 8025e9c:	1800031e 	bne	r3,zero,8025eac <__hi0bits+0x44>
 8025ea0:	2109883a 	add	r4,r4,r4
 8025ea4:	10800084 	addi	r2,r2,2
 8025ea8:	2109883a 	add	r4,r4,r4
 8025eac:	20000316 	blt	r4,zero,8025ebc <__hi0bits+0x54>
 8025eb0:	2110002c 	andhi	r4,r4,16384
 8025eb4:	2000041e 	bne	r4,zero,8025ec8 <__hi0bits+0x60>
 8025eb8:	00800804 	movi	r2,32
 8025ebc:	f800283a 	ret
 8025ec0:	0005883a 	mov	r2,zero
 8025ec4:	003fec06 	br	8025e78 <__flash_rwdata_start+0xffff635c>
 8025ec8:	10800044 	addi	r2,r2,1
 8025ecc:	f800283a 	ret

08025ed0 <__lo0bits>:
 8025ed0:	20c00017 	ldw	r3,0(r4)
 8025ed4:	188001cc 	andi	r2,r3,7
 8025ed8:	10000826 	beq	r2,zero,8025efc <__lo0bits+0x2c>
 8025edc:	1880004c 	andi	r2,r3,1
 8025ee0:	1000211e 	bne	r2,zero,8025f68 <__lo0bits+0x98>
 8025ee4:	1880008c 	andi	r2,r3,2
 8025ee8:	1000211e 	bne	r2,zero,8025f70 <__lo0bits+0xa0>
 8025eec:	1806d0ba 	srli	r3,r3,2
 8025ef0:	00800084 	movi	r2,2
 8025ef4:	20c00015 	stw	r3,0(r4)
 8025ef8:	f800283a 	ret
 8025efc:	18bfffcc 	andi	r2,r3,65535
 8025f00:	10001326 	beq	r2,zero,8025f50 <__lo0bits+0x80>
 8025f04:	0005883a 	mov	r2,zero
 8025f08:	19403fcc 	andi	r5,r3,255
 8025f0c:	2800021e 	bne	r5,zero,8025f18 <__lo0bits+0x48>
 8025f10:	1806d23a 	srli	r3,r3,8
 8025f14:	10800204 	addi	r2,r2,8
 8025f18:	194003cc 	andi	r5,r3,15
 8025f1c:	2800021e 	bne	r5,zero,8025f28 <__lo0bits+0x58>
 8025f20:	1806d13a 	srli	r3,r3,4
 8025f24:	10800104 	addi	r2,r2,4
 8025f28:	194000cc 	andi	r5,r3,3
 8025f2c:	2800021e 	bne	r5,zero,8025f38 <__lo0bits+0x68>
 8025f30:	1806d0ba 	srli	r3,r3,2
 8025f34:	10800084 	addi	r2,r2,2
 8025f38:	1940004c 	andi	r5,r3,1
 8025f3c:	2800081e 	bne	r5,zero,8025f60 <__lo0bits+0x90>
 8025f40:	1806d07a 	srli	r3,r3,1
 8025f44:	1800051e 	bne	r3,zero,8025f5c <__lo0bits+0x8c>
 8025f48:	00800804 	movi	r2,32
 8025f4c:	f800283a 	ret
 8025f50:	1806d43a 	srli	r3,r3,16
 8025f54:	00800404 	movi	r2,16
 8025f58:	003feb06 	br	8025f08 <__flash_rwdata_start+0xffff63ec>
 8025f5c:	10800044 	addi	r2,r2,1
 8025f60:	20c00015 	stw	r3,0(r4)
 8025f64:	f800283a 	ret
 8025f68:	0005883a 	mov	r2,zero
 8025f6c:	f800283a 	ret
 8025f70:	1806d07a 	srli	r3,r3,1
 8025f74:	00800044 	movi	r2,1
 8025f78:	20c00015 	stw	r3,0(r4)
 8025f7c:	f800283a 	ret

08025f80 <__i2b>:
 8025f80:	defffd04 	addi	sp,sp,-12
 8025f84:	dc000015 	stw	r16,0(sp)
 8025f88:	04000044 	movi	r16,1
 8025f8c:	dc400115 	stw	r17,4(sp)
 8025f90:	2823883a 	mov	r17,r5
 8025f94:	800b883a 	mov	r5,r16
 8025f98:	dfc00215 	stw	ra,8(sp)
 8025f9c:	8025b4c0 	call	8025b4c <_Balloc>
 8025fa0:	14400515 	stw	r17,20(r2)
 8025fa4:	14000415 	stw	r16,16(r2)
 8025fa8:	dfc00217 	ldw	ra,8(sp)
 8025fac:	dc400117 	ldw	r17,4(sp)
 8025fb0:	dc000017 	ldw	r16,0(sp)
 8025fb4:	dec00304 	addi	sp,sp,12
 8025fb8:	f800283a 	ret

08025fbc <__multiply>:
 8025fbc:	deffef04 	addi	sp,sp,-68
 8025fc0:	dc400815 	stw	r17,32(sp)
 8025fc4:	dc000715 	stw	r16,28(sp)
 8025fc8:	34400417 	ldw	r17,16(r6)
 8025fcc:	2c000417 	ldw	r16,16(r5)
 8025fd0:	dd800d15 	stw	r22,52(sp)
 8025fd4:	dc800915 	stw	r18,36(sp)
 8025fd8:	dfc01015 	stw	ra,64(sp)
 8025fdc:	df000f15 	stw	fp,60(sp)
 8025fe0:	ddc00e15 	stw	r23,56(sp)
 8025fe4:	dd400c15 	stw	r21,48(sp)
 8025fe8:	dd000b15 	stw	r20,44(sp)
 8025fec:	dcc00a15 	stw	r19,40(sp)
 8025ff0:	2825883a 	mov	r18,r5
 8025ff4:	302d883a 	mov	r22,r6
 8025ff8:	8440050e 	bge	r16,r17,8026010 <__multiply+0x54>
 8025ffc:	8007883a 	mov	r3,r16
 8026000:	3025883a 	mov	r18,r6
 8026004:	8821883a 	mov	r16,r17
 8026008:	282d883a 	mov	r22,r5
 802600c:	1823883a 	mov	r17,r3
 8026010:	90800217 	ldw	r2,8(r18)
 8026014:	8447883a 	add	r3,r16,r17
 8026018:	d8c00215 	stw	r3,8(sp)
 802601c:	91400117 	ldw	r5,4(r18)
 8026020:	10c0010e 	bge	r2,r3,8026028 <__multiply+0x6c>
 8026024:	29400044 	addi	r5,r5,1
 8026028:	8025b4c0 	call	8025b4c <_Balloc>
 802602c:	d8c00217 	ldw	r3,8(sp)
 8026030:	d8800615 	stw	r2,24(sp)
 8026034:	18eb883a 	add	r21,r3,r3
 8026038:	ad6b883a 	add	r21,r21,r21
 802603c:	10c00504 	addi	r3,r2,20
 8026040:	1d6b883a 	add	r21,r3,r21
 8026044:	d8c00115 	stw	r3,4(sp)
 8026048:	dd400315 	stw	r21,12(sp)
 802604c:	1805883a 	mov	r2,r3
 8026050:	1d40042e 	bgeu	r3,r21,8026064 <__multiply+0xa8>
 8026054:	d8c00317 	ldw	r3,12(sp)
 8026058:	10000015 	stw	zero,0(r2)
 802605c:	10800104 	addi	r2,r2,4
 8026060:	10fffc36 	bltu	r2,r3,8026054 <__flash_rwdata_start+0xffff6538>
 8026064:	8c63883a 	add	r17,r17,r17
 8026068:	b5800504 	addi	r22,r22,20
 802606c:	8c63883a 	add	r17,r17,r17
 8026070:	94800504 	addi	r18,r18,20
 8026074:	8421883a 	add	r16,r16,r16
 8026078:	b463883a 	add	r17,r22,r17
 802607c:	8421883a 	add	r16,r16,r16
 8026080:	dd800015 	stw	r22,0(sp)
 8026084:	dc800415 	stw	r18,16(sp)
 8026088:	dc400515 	stw	r17,20(sp)
 802608c:	9429883a 	add	r20,r18,r16
 8026090:	b4404f2e 	bgeu	r22,r17,80261d0 <__multiply+0x214>
 8026094:	d8c00017 	ldw	r3,0(sp)
 8026098:	1c800017 	ldw	r18,0(r3)
 802609c:	947fffcc 	andi	r17,r18,65535
 80260a0:	88001e26 	beq	r17,zero,802611c <__multiply+0x160>
 80260a4:	dd800117 	ldw	r22,4(sp)
 80260a8:	dd400417 	ldw	r21,16(sp)
 80260ac:	0027883a 	mov	r19,zero
 80260b0:	ac800017 	ldw	r18,0(r21)
 80260b4:	b4000017 	ldw	r16,0(r22)
 80260b8:	880b883a 	mov	r5,r17
 80260bc:	913fffcc 	andi	r4,r18,65535
 80260c0:	802a8bc0 	call	802a8bc <__mulsi3>
 80260c4:	9008d43a 	srli	r4,r18,16
 80260c8:	84bfffcc 	andi	r18,r16,65535
 80260cc:	1485883a 	add	r2,r2,r18
 80260d0:	14e5883a 	add	r18,r2,r19
 80260d4:	8020d43a 	srli	r16,r16,16
 80260d8:	9026d43a 	srli	r19,r18,16
 80260dc:	880b883a 	mov	r5,r17
 80260e0:	802a8bc0 	call	802a8bc <__mulsi3>
 80260e4:	1405883a 	add	r2,r2,r16
 80260e8:	14e1883a 	add	r16,r2,r19
 80260ec:	90ffffcc 	andi	r3,r18,65535
 80260f0:	8024943a 	slli	r18,r16,16
 80260f4:	ad400104 	addi	r21,r21,4
 80260f8:	b005883a 	mov	r2,r22
 80260fc:	90c6b03a 	or	r3,r18,r3
 8026100:	b0c00015 	stw	r3,0(r22)
 8026104:	8026d43a 	srli	r19,r16,16
 8026108:	b5800104 	addi	r22,r22,4
 802610c:	ad3fe836 	bltu	r21,r20,80260b0 <__flash_rwdata_start+0xffff6594>
 8026110:	d8c00017 	ldw	r3,0(sp)
 8026114:	14c00115 	stw	r19,4(r2)
 8026118:	1c800017 	ldw	r18,0(r3)
 802611c:	9024d43a 	srli	r18,r18,16
 8026120:	90002226 	beq	r18,zero,80261ac <__multiply+0x1f0>
 8026124:	d8c00117 	ldw	r3,4(sp)
 8026128:	dd800417 	ldw	r22,16(sp)
 802612c:	002f883a 	mov	r23,zero
 8026130:	1f000017 	ldw	fp,0(r3)
 8026134:	1823883a 	mov	r17,r3
 8026138:	182b883a 	mov	r21,r3
 802613c:	e021883a 	mov	r16,fp
 8026140:	00000106 	br	8026148 <__multiply+0x18c>
 8026144:	982b883a 	mov	r21,r19
 8026148:	b100000b 	ldhu	r4,0(r22)
 802614c:	8020d43a 	srli	r16,r16,16
 8026150:	900b883a 	mov	r5,r18
 8026154:	802a8bc0 	call	802a8bc <__mulsi3>
 8026158:	1405883a 	add	r2,r2,r16
 802615c:	15ef883a 	add	r23,r2,r23
 8026160:	b804943a 	slli	r2,r23,16
 8026164:	e0ffffcc 	andi	r3,fp,65535
 8026168:	8c400104 	addi	r17,r17,4
 802616c:	10c6b03a 	or	r3,r2,r3
 8026170:	88ffff15 	stw	r3,-4(r17)
 8026174:	b5800104 	addi	r22,r22,4
 8026178:	b13fff17 	ldw	r4,-4(r22)
 802617c:	acc00104 	addi	r19,r21,4
 8026180:	900b883a 	mov	r5,r18
 8026184:	2008d43a 	srli	r4,r4,16
 8026188:	9c000017 	ldw	r16,0(r19)
 802618c:	802a8bc0 	call	802a8bc <__mulsi3>
 8026190:	b806d43a 	srli	r3,r23,16
 8026194:	813fffcc 	andi	r4,r16,65535
 8026198:	1105883a 	add	r2,r2,r4
 802619c:	10f9883a 	add	fp,r2,r3
 80261a0:	e02ed43a 	srli	r23,fp,16
 80261a4:	b53fe736 	bltu	r22,r20,8026144 <__flash_rwdata_start+0xffff6628>
 80261a8:	af000115 	stw	fp,4(r21)
 80261ac:	d8c00017 	ldw	r3,0(sp)
 80261b0:	d9000517 	ldw	r4,20(sp)
 80261b4:	18c00104 	addi	r3,r3,4
 80261b8:	d8c00015 	stw	r3,0(sp)
 80261bc:	d8c00117 	ldw	r3,4(sp)
 80261c0:	18c00104 	addi	r3,r3,4
 80261c4:	d8c00115 	stw	r3,4(sp)
 80261c8:	d8c00017 	ldw	r3,0(sp)
 80261cc:	193fb136 	bltu	r3,r4,8026094 <__flash_rwdata_start+0xffff6578>
 80261d0:	d8c00217 	ldw	r3,8(sp)
 80261d4:	00c00c0e 	bge	zero,r3,8026208 <__multiply+0x24c>
 80261d8:	d8c00317 	ldw	r3,12(sp)
 80261dc:	18bfff17 	ldw	r2,-4(r3)
 80261e0:	1d7fff04 	addi	r21,r3,-4
 80261e4:	10000326 	beq	r2,zero,80261f4 <__multiply+0x238>
 80261e8:	00000706 	br	8026208 <__multiply+0x24c>
 80261ec:	a8800017 	ldw	r2,0(r21)
 80261f0:	1000051e 	bne	r2,zero,8026208 <__multiply+0x24c>
 80261f4:	d8c00217 	ldw	r3,8(sp)
 80261f8:	ad7fff04 	addi	r21,r21,-4
 80261fc:	18ffffc4 	addi	r3,r3,-1
 8026200:	d8c00215 	stw	r3,8(sp)
 8026204:	183ff91e 	bne	r3,zero,80261ec <__flash_rwdata_start+0xffff66d0>
 8026208:	d8c00617 	ldw	r3,24(sp)
 802620c:	d9000217 	ldw	r4,8(sp)
 8026210:	1805883a 	mov	r2,r3
 8026214:	19000415 	stw	r4,16(r3)
 8026218:	dfc01017 	ldw	ra,64(sp)
 802621c:	df000f17 	ldw	fp,60(sp)
 8026220:	ddc00e17 	ldw	r23,56(sp)
 8026224:	dd800d17 	ldw	r22,52(sp)
 8026228:	dd400c17 	ldw	r21,48(sp)
 802622c:	dd000b17 	ldw	r20,44(sp)
 8026230:	dcc00a17 	ldw	r19,40(sp)
 8026234:	dc800917 	ldw	r18,36(sp)
 8026238:	dc400817 	ldw	r17,32(sp)
 802623c:	dc000717 	ldw	r16,28(sp)
 8026240:	dec01104 	addi	sp,sp,68
 8026244:	f800283a 	ret

08026248 <__pow5mult>:
 8026248:	defffa04 	addi	sp,sp,-24
 802624c:	dcc00315 	stw	r19,12(sp)
 8026250:	dc000015 	stw	r16,0(sp)
 8026254:	dfc00515 	stw	ra,20(sp)
 8026258:	dd000415 	stw	r20,16(sp)
 802625c:	dc800215 	stw	r18,8(sp)
 8026260:	dc400115 	stw	r17,4(sp)
 8026264:	308000cc 	andi	r2,r6,3
 8026268:	3021883a 	mov	r16,r6
 802626c:	2027883a 	mov	r19,r4
 8026270:	10002f1e 	bne	r2,zero,8026330 <__pow5mult+0xe8>
 8026274:	2825883a 	mov	r18,r5
 8026278:	8021d0ba 	srai	r16,r16,2
 802627c:	80001a26 	beq	r16,zero,80262e8 <__pow5mult+0xa0>
 8026280:	9c401217 	ldw	r17,72(r19)
 8026284:	8800061e 	bne	r17,zero,80262a0 <__pow5mult+0x58>
 8026288:	00003406 	br	802635c <__pow5mult+0x114>
 802628c:	8021d07a 	srai	r16,r16,1
 8026290:	80001526 	beq	r16,zero,80262e8 <__pow5mult+0xa0>
 8026294:	88800017 	ldw	r2,0(r17)
 8026298:	10001c26 	beq	r2,zero,802630c <__pow5mult+0xc4>
 802629c:	1023883a 	mov	r17,r2
 80262a0:	8080004c 	andi	r2,r16,1
 80262a4:	103ff926 	beq	r2,zero,802628c <__flash_rwdata_start+0xffff6770>
 80262a8:	880d883a 	mov	r6,r17
 80262ac:	900b883a 	mov	r5,r18
 80262b0:	9809883a 	mov	r4,r19
 80262b4:	8025fbc0 	call	8025fbc <__multiply>
 80262b8:	90001b26 	beq	r18,zero,8026328 <__pow5mult+0xe0>
 80262bc:	91000117 	ldw	r4,4(r18)
 80262c0:	98c01317 	ldw	r3,76(r19)
 80262c4:	8021d07a 	srai	r16,r16,1
 80262c8:	2109883a 	add	r4,r4,r4
 80262cc:	2109883a 	add	r4,r4,r4
 80262d0:	1907883a 	add	r3,r3,r4
 80262d4:	19000017 	ldw	r4,0(r3)
 80262d8:	91000015 	stw	r4,0(r18)
 80262dc:	1c800015 	stw	r18,0(r3)
 80262e0:	1025883a 	mov	r18,r2
 80262e4:	803feb1e 	bne	r16,zero,8026294 <__flash_rwdata_start+0xffff6778>
 80262e8:	9005883a 	mov	r2,r18
 80262ec:	dfc00517 	ldw	ra,20(sp)
 80262f0:	dd000417 	ldw	r20,16(sp)
 80262f4:	dcc00317 	ldw	r19,12(sp)
 80262f8:	dc800217 	ldw	r18,8(sp)
 80262fc:	dc400117 	ldw	r17,4(sp)
 8026300:	dc000017 	ldw	r16,0(sp)
 8026304:	dec00604 	addi	sp,sp,24
 8026308:	f800283a 	ret
 802630c:	880d883a 	mov	r6,r17
 8026310:	880b883a 	mov	r5,r17
 8026314:	9809883a 	mov	r4,r19
 8026318:	8025fbc0 	call	8025fbc <__multiply>
 802631c:	88800015 	stw	r2,0(r17)
 8026320:	10000015 	stw	zero,0(r2)
 8026324:	003fdd06 	br	802629c <__flash_rwdata_start+0xffff6780>
 8026328:	1025883a 	mov	r18,r2
 802632c:	003fd706 	br	802628c <__flash_rwdata_start+0xffff6770>
 8026330:	10bfffc4 	addi	r2,r2,-1
 8026334:	1085883a 	add	r2,r2,r2
 8026338:	00c00034 	movhi	r3,0
 802633c:	18c02404 	addi	r3,r3,144
 8026340:	1085883a 	add	r2,r2,r2
 8026344:	1885883a 	add	r2,r3,r2
 8026348:	11800017 	ldw	r6,0(r2)
 802634c:	000f883a 	mov	r7,zero
 8026350:	8025c1c0 	call	8025c1c <__multadd>
 8026354:	1025883a 	mov	r18,r2
 8026358:	003fc706 	br	8026278 <__flash_rwdata_start+0xffff675c>
 802635c:	05000044 	movi	r20,1
 8026360:	a00b883a 	mov	r5,r20
 8026364:	9809883a 	mov	r4,r19
 8026368:	8025b4c0 	call	8025b4c <_Balloc>
 802636c:	1023883a 	mov	r17,r2
 8026370:	00809c44 	movi	r2,625
 8026374:	88800515 	stw	r2,20(r17)
 8026378:	8d000415 	stw	r20,16(r17)
 802637c:	9c401215 	stw	r17,72(r19)
 8026380:	88000015 	stw	zero,0(r17)
 8026384:	003fc606 	br	80262a0 <__flash_rwdata_start+0xffff6784>

08026388 <__lshift>:
 8026388:	defff904 	addi	sp,sp,-28
 802638c:	dd400515 	stw	r21,20(sp)
 8026390:	dcc00315 	stw	r19,12(sp)
 8026394:	302bd17a 	srai	r21,r6,5
 8026398:	2cc00417 	ldw	r19,16(r5)
 802639c:	28800217 	ldw	r2,8(r5)
 80263a0:	dd000415 	stw	r20,16(sp)
 80263a4:	ace7883a 	add	r19,r21,r19
 80263a8:	dc800215 	stw	r18,8(sp)
 80263ac:	dc400115 	stw	r17,4(sp)
 80263b0:	dc000015 	stw	r16,0(sp)
 80263b4:	dfc00615 	stw	ra,24(sp)
 80263b8:	9c000044 	addi	r16,r19,1
 80263bc:	2823883a 	mov	r17,r5
 80263c0:	3029883a 	mov	r20,r6
 80263c4:	2025883a 	mov	r18,r4
 80263c8:	29400117 	ldw	r5,4(r5)
 80263cc:	1400030e 	bge	r2,r16,80263dc <__lshift+0x54>
 80263d0:	1085883a 	add	r2,r2,r2
 80263d4:	29400044 	addi	r5,r5,1
 80263d8:	143ffd16 	blt	r2,r16,80263d0 <__flash_rwdata_start+0xffff68b4>
 80263dc:	9009883a 	mov	r4,r18
 80263e0:	8025b4c0 	call	8025b4c <_Balloc>
 80263e4:	10c00504 	addi	r3,r2,20
 80263e8:	0540070e 	bge	zero,r21,8026408 <__lshift+0x80>
 80263ec:	ad6b883a 	add	r21,r21,r21
 80263f0:	ad6b883a 	add	r21,r21,r21
 80263f4:	1809883a 	mov	r4,r3
 80263f8:	1d47883a 	add	r3,r3,r21
 80263fc:	20000015 	stw	zero,0(r4)
 8026400:	21000104 	addi	r4,r4,4
 8026404:	193ffd1e 	bne	r3,r4,80263fc <__flash_rwdata_start+0xffff68e0>
 8026408:	8a000417 	ldw	r8,16(r17)
 802640c:	89000504 	addi	r4,r17,20
 8026410:	a18007cc 	andi	r6,r20,31
 8026414:	4211883a 	add	r8,r8,r8
 8026418:	4211883a 	add	r8,r8,r8
 802641c:	2211883a 	add	r8,r4,r8
 8026420:	30002326 	beq	r6,zero,80264b0 <__lshift+0x128>
 8026424:	02400804 	movi	r9,32
 8026428:	4993c83a 	sub	r9,r9,r6
 802642c:	000b883a 	mov	r5,zero
 8026430:	21c00017 	ldw	r7,0(r4)
 8026434:	1815883a 	mov	r10,r3
 8026438:	18c00104 	addi	r3,r3,4
 802643c:	398e983a 	sll	r7,r7,r6
 8026440:	21000104 	addi	r4,r4,4
 8026444:	394ab03a 	or	r5,r7,r5
 8026448:	197fff15 	stw	r5,-4(r3)
 802644c:	217fff17 	ldw	r5,-4(r4)
 8026450:	2a4ad83a 	srl	r5,r5,r9
 8026454:	223ff636 	bltu	r4,r8,8026430 <__flash_rwdata_start+0xffff6914>
 8026458:	51400115 	stw	r5,4(r10)
 802645c:	28001a1e 	bne	r5,zero,80264c8 <__lshift+0x140>
 8026460:	843fffc4 	addi	r16,r16,-1
 8026464:	14000415 	stw	r16,16(r2)
 8026468:	88000826 	beq	r17,zero,802648c <__lshift+0x104>
 802646c:	89000117 	ldw	r4,4(r17)
 8026470:	90c01317 	ldw	r3,76(r18)
 8026474:	2109883a 	add	r4,r4,r4
 8026478:	2109883a 	add	r4,r4,r4
 802647c:	1907883a 	add	r3,r3,r4
 8026480:	19000017 	ldw	r4,0(r3)
 8026484:	89000015 	stw	r4,0(r17)
 8026488:	1c400015 	stw	r17,0(r3)
 802648c:	dfc00617 	ldw	ra,24(sp)
 8026490:	dd400517 	ldw	r21,20(sp)
 8026494:	dd000417 	ldw	r20,16(sp)
 8026498:	dcc00317 	ldw	r19,12(sp)
 802649c:	dc800217 	ldw	r18,8(sp)
 80264a0:	dc400117 	ldw	r17,4(sp)
 80264a4:	dc000017 	ldw	r16,0(sp)
 80264a8:	dec00704 	addi	sp,sp,28
 80264ac:	f800283a 	ret
 80264b0:	21400017 	ldw	r5,0(r4)
 80264b4:	18c00104 	addi	r3,r3,4
 80264b8:	21000104 	addi	r4,r4,4
 80264bc:	197fff15 	stw	r5,-4(r3)
 80264c0:	223ffb36 	bltu	r4,r8,80264b0 <__flash_rwdata_start+0xffff6994>
 80264c4:	003fe606 	br	8026460 <__flash_rwdata_start+0xffff6944>
 80264c8:	9c000084 	addi	r16,r19,2
 80264cc:	003fe406 	br	8026460 <__flash_rwdata_start+0xffff6944>

080264d0 <__mcmp>:
 80264d0:	20800417 	ldw	r2,16(r4)
 80264d4:	28c00417 	ldw	r3,16(r5)
 80264d8:	10c5c83a 	sub	r2,r2,r3
 80264dc:	1000111e 	bne	r2,zero,8026524 <__mcmp+0x54>
 80264e0:	18c7883a 	add	r3,r3,r3
 80264e4:	18c7883a 	add	r3,r3,r3
 80264e8:	21000504 	addi	r4,r4,20
 80264ec:	29400504 	addi	r5,r5,20
 80264f0:	20c5883a 	add	r2,r4,r3
 80264f4:	28cb883a 	add	r5,r5,r3
 80264f8:	00000106 	br	8026500 <__mcmp+0x30>
 80264fc:	20800a2e 	bgeu	r4,r2,8026528 <__mcmp+0x58>
 8026500:	10bfff04 	addi	r2,r2,-4
 8026504:	297fff04 	addi	r5,r5,-4
 8026508:	11800017 	ldw	r6,0(r2)
 802650c:	28c00017 	ldw	r3,0(r5)
 8026510:	30fffa26 	beq	r6,r3,80264fc <__flash_rwdata_start+0xffff69e0>
 8026514:	30c00236 	bltu	r6,r3,8026520 <__mcmp+0x50>
 8026518:	00800044 	movi	r2,1
 802651c:	f800283a 	ret
 8026520:	00bfffc4 	movi	r2,-1
 8026524:	f800283a 	ret
 8026528:	0005883a 	mov	r2,zero
 802652c:	f800283a 	ret

08026530 <__mdiff>:
 8026530:	28c00417 	ldw	r3,16(r5)
 8026534:	30800417 	ldw	r2,16(r6)
 8026538:	defffa04 	addi	sp,sp,-24
 802653c:	dcc00315 	stw	r19,12(sp)
 8026540:	dc800215 	stw	r18,8(sp)
 8026544:	dfc00515 	stw	ra,20(sp)
 8026548:	dd000415 	stw	r20,16(sp)
 802654c:	dc400115 	stw	r17,4(sp)
 8026550:	dc000015 	stw	r16,0(sp)
 8026554:	1887c83a 	sub	r3,r3,r2
 8026558:	2825883a 	mov	r18,r5
 802655c:	3027883a 	mov	r19,r6
 8026560:	1800141e 	bne	r3,zero,80265b4 <__mdiff+0x84>
 8026564:	1085883a 	add	r2,r2,r2
 8026568:	1085883a 	add	r2,r2,r2
 802656c:	2a000504 	addi	r8,r5,20
 8026570:	34000504 	addi	r16,r6,20
 8026574:	4087883a 	add	r3,r8,r2
 8026578:	8085883a 	add	r2,r16,r2
 802657c:	00000106 	br	8026584 <__mdiff+0x54>
 8026580:	40c0592e 	bgeu	r8,r3,80266e8 <__mdiff+0x1b8>
 8026584:	18ffff04 	addi	r3,r3,-4
 8026588:	10bfff04 	addi	r2,r2,-4
 802658c:	19c00017 	ldw	r7,0(r3)
 8026590:	11400017 	ldw	r5,0(r2)
 8026594:	397ffa26 	beq	r7,r5,8026580 <__flash_rwdata_start+0xffff6a64>
 8026598:	3940592e 	bgeu	r7,r5,8026700 <__mdiff+0x1d0>
 802659c:	9005883a 	mov	r2,r18
 80265a0:	4023883a 	mov	r17,r8
 80265a4:	9825883a 	mov	r18,r19
 80265a8:	05000044 	movi	r20,1
 80265ac:	1027883a 	mov	r19,r2
 80265b0:	00000406 	br	80265c4 <__mdiff+0x94>
 80265b4:	18005616 	blt	r3,zero,8026710 <__mdiff+0x1e0>
 80265b8:	34400504 	addi	r17,r6,20
 80265bc:	2c000504 	addi	r16,r5,20
 80265c0:	0029883a 	mov	r20,zero
 80265c4:	91400117 	ldw	r5,4(r18)
 80265c8:	8025b4c0 	call	8025b4c <_Balloc>
 80265cc:	92400417 	ldw	r9,16(r18)
 80265d0:	9b000417 	ldw	r12,16(r19)
 80265d4:	12c00504 	addi	r11,r2,20
 80265d8:	4a51883a 	add	r8,r9,r9
 80265dc:	6319883a 	add	r12,r12,r12
 80265e0:	4211883a 	add	r8,r8,r8
 80265e4:	6319883a 	add	r12,r12,r12
 80265e8:	15000315 	stw	r20,12(r2)
 80265ec:	8211883a 	add	r8,r16,r8
 80265f0:	8b19883a 	add	r12,r17,r12
 80265f4:	0007883a 	mov	r3,zero
 80265f8:	81400017 	ldw	r5,0(r16)
 80265fc:	89c00017 	ldw	r7,0(r17)
 8026600:	59800104 	addi	r6,r11,4
 8026604:	293fffcc 	andi	r4,r5,65535
 8026608:	20c7883a 	add	r3,r4,r3
 802660c:	393fffcc 	andi	r4,r7,65535
 8026610:	1909c83a 	sub	r4,r3,r4
 8026614:	280ad43a 	srli	r5,r5,16
 8026618:	380ed43a 	srli	r7,r7,16
 802661c:	2007d43a 	srai	r3,r4,16
 8026620:	213fffcc 	andi	r4,r4,65535
 8026624:	29cbc83a 	sub	r5,r5,r7
 8026628:	28c7883a 	add	r3,r5,r3
 802662c:	180a943a 	slli	r5,r3,16
 8026630:	8c400104 	addi	r17,r17,4
 8026634:	84000104 	addi	r16,r16,4
 8026638:	2908b03a 	or	r4,r5,r4
 802663c:	59000015 	stw	r4,0(r11)
 8026640:	1807d43a 	srai	r3,r3,16
 8026644:	3015883a 	mov	r10,r6
 8026648:	3017883a 	mov	r11,r6
 802664c:	8b3fea36 	bltu	r17,r12,80265f8 <__flash_rwdata_start+0xffff6adc>
 8026650:	8200162e 	bgeu	r16,r8,80266ac <__mdiff+0x17c>
 8026654:	8017883a 	mov	r11,r16
 8026658:	59400017 	ldw	r5,0(r11)
 802665c:	31800104 	addi	r6,r6,4
 8026660:	5ac00104 	addi	r11,r11,4
 8026664:	293fffcc 	andi	r4,r5,65535
 8026668:	20c7883a 	add	r3,r4,r3
 802666c:	280ed43a 	srli	r7,r5,16
 8026670:	180bd43a 	srai	r5,r3,16
 8026674:	193fffcc 	andi	r4,r3,65535
 8026678:	3947883a 	add	r3,r7,r5
 802667c:	180a943a 	slli	r5,r3,16
 8026680:	1807d43a 	srai	r3,r3,16
 8026684:	2908b03a 	or	r4,r5,r4
 8026688:	313fff15 	stw	r4,-4(r6)
 802668c:	5a3ff236 	bltu	r11,r8,8026658 <__flash_rwdata_start+0xffff6b3c>
 8026690:	0406303a 	nor	r3,zero,r16
 8026694:	1a07883a 	add	r3,r3,r8
 8026698:	1806d0ba 	srli	r3,r3,2
 802669c:	18c00044 	addi	r3,r3,1
 80266a0:	18c7883a 	add	r3,r3,r3
 80266a4:	18c7883a 	add	r3,r3,r3
 80266a8:	50d5883a 	add	r10,r10,r3
 80266ac:	50ffff04 	addi	r3,r10,-4
 80266b0:	2000041e 	bne	r4,zero,80266c4 <__mdiff+0x194>
 80266b4:	18ffff04 	addi	r3,r3,-4
 80266b8:	19000017 	ldw	r4,0(r3)
 80266bc:	4a7fffc4 	addi	r9,r9,-1
 80266c0:	203ffc26 	beq	r4,zero,80266b4 <__flash_rwdata_start+0xffff6b98>
 80266c4:	12400415 	stw	r9,16(r2)
 80266c8:	dfc00517 	ldw	ra,20(sp)
 80266cc:	dd000417 	ldw	r20,16(sp)
 80266d0:	dcc00317 	ldw	r19,12(sp)
 80266d4:	dc800217 	ldw	r18,8(sp)
 80266d8:	dc400117 	ldw	r17,4(sp)
 80266dc:	dc000017 	ldw	r16,0(sp)
 80266e0:	dec00604 	addi	sp,sp,24
 80266e4:	f800283a 	ret
 80266e8:	000b883a 	mov	r5,zero
 80266ec:	8025b4c0 	call	8025b4c <_Balloc>
 80266f0:	00c00044 	movi	r3,1
 80266f4:	10c00415 	stw	r3,16(r2)
 80266f8:	10000515 	stw	zero,20(r2)
 80266fc:	003ff206 	br	80266c8 <__flash_rwdata_start+0xffff6bac>
 8026700:	8023883a 	mov	r17,r16
 8026704:	0029883a 	mov	r20,zero
 8026708:	4021883a 	mov	r16,r8
 802670c:	003fad06 	br	80265c4 <__flash_rwdata_start+0xffff6aa8>
 8026710:	9005883a 	mov	r2,r18
 8026714:	94400504 	addi	r17,r18,20
 8026718:	9c000504 	addi	r16,r19,20
 802671c:	9825883a 	mov	r18,r19
 8026720:	05000044 	movi	r20,1
 8026724:	1027883a 	mov	r19,r2
 8026728:	003fa606 	br	80265c4 <__flash_rwdata_start+0xffff6aa8>

0802672c <__ulp>:
 802672c:	295ffc2c 	andhi	r5,r5,32752
 8026730:	00bf3034 	movhi	r2,64704
 8026734:	2887883a 	add	r3,r5,r2
 8026738:	00c0020e 	bge	zero,r3,8026744 <__ulp+0x18>
 802673c:	0005883a 	mov	r2,zero
 8026740:	f800283a 	ret
 8026744:	00c7c83a 	sub	r3,zero,r3
 8026748:	1807d53a 	srai	r3,r3,20
 802674c:	008004c4 	movi	r2,19
 8026750:	10c00b0e 	bge	r2,r3,8026780 <__ulp+0x54>
 8026754:	18bffb04 	addi	r2,r3,-20
 8026758:	01000784 	movi	r4,30
 802675c:	0007883a 	mov	r3,zero
 8026760:	20800516 	blt	r4,r2,8026778 <__ulp+0x4c>
 8026764:	010007c4 	movi	r4,31
 8026768:	2089c83a 	sub	r4,r4,r2
 802676c:	00800044 	movi	r2,1
 8026770:	1104983a 	sll	r2,r2,r4
 8026774:	f800283a 	ret
 8026778:	00800044 	movi	r2,1
 802677c:	f800283a 	ret
 8026780:	01400234 	movhi	r5,8
 8026784:	28c7d83a 	sra	r3,r5,r3
 8026788:	0005883a 	mov	r2,zero
 802678c:	f800283a 	ret

08026790 <__b2d>:
 8026790:	defffa04 	addi	sp,sp,-24
 8026794:	dc000015 	stw	r16,0(sp)
 8026798:	24000417 	ldw	r16,16(r4)
 802679c:	dc400115 	stw	r17,4(sp)
 80267a0:	24400504 	addi	r17,r4,20
 80267a4:	8421883a 	add	r16,r16,r16
 80267a8:	8421883a 	add	r16,r16,r16
 80267ac:	8c21883a 	add	r16,r17,r16
 80267b0:	dc800215 	stw	r18,8(sp)
 80267b4:	84bfff17 	ldw	r18,-4(r16)
 80267b8:	dd000415 	stw	r20,16(sp)
 80267bc:	dcc00315 	stw	r19,12(sp)
 80267c0:	9009883a 	mov	r4,r18
 80267c4:	2829883a 	mov	r20,r5
 80267c8:	dfc00515 	stw	ra,20(sp)
 80267cc:	8025e680 	call	8025e68 <__hi0bits>
 80267d0:	00c00804 	movi	r3,32
 80267d4:	1889c83a 	sub	r4,r3,r2
 80267d8:	a1000015 	stw	r4,0(r20)
 80267dc:	01000284 	movi	r4,10
 80267e0:	84ffff04 	addi	r19,r16,-4
 80267e4:	20801216 	blt	r4,r2,8026830 <__b2d+0xa0>
 80267e8:	018002c4 	movi	r6,11
 80267ec:	308dc83a 	sub	r6,r6,r2
 80267f0:	9186d83a 	srl	r3,r18,r6
 80267f4:	18cffc34 	orhi	r3,r3,16368
 80267f8:	8cc0212e 	bgeu	r17,r19,8026880 <__b2d+0xf0>
 80267fc:	813ffe17 	ldw	r4,-8(r16)
 8026800:	218cd83a 	srl	r6,r4,r6
 8026804:	10800544 	addi	r2,r2,21
 8026808:	9084983a 	sll	r2,r18,r2
 802680c:	1184b03a 	or	r2,r2,r6
 8026810:	dfc00517 	ldw	ra,20(sp)
 8026814:	dd000417 	ldw	r20,16(sp)
 8026818:	dcc00317 	ldw	r19,12(sp)
 802681c:	dc800217 	ldw	r18,8(sp)
 8026820:	dc400117 	ldw	r17,4(sp)
 8026824:	dc000017 	ldw	r16,0(sp)
 8026828:	dec00604 	addi	sp,sp,24
 802682c:	f800283a 	ret
 8026830:	8cc00f2e 	bgeu	r17,r19,8026870 <__b2d+0xe0>
 8026834:	117ffd44 	addi	r5,r2,-11
 8026838:	80bffe17 	ldw	r2,-8(r16)
 802683c:	28000e26 	beq	r5,zero,8026878 <__b2d+0xe8>
 8026840:	1949c83a 	sub	r4,r3,r5
 8026844:	9164983a 	sll	r18,r18,r5
 8026848:	1106d83a 	srl	r3,r2,r4
 802684c:	81bffe04 	addi	r6,r16,-8
 8026850:	948ffc34 	orhi	r18,r18,16368
 8026854:	90c6b03a 	or	r3,r18,r3
 8026858:	89800e2e 	bgeu	r17,r6,8026894 <__b2d+0x104>
 802685c:	81bffd17 	ldw	r6,-12(r16)
 8026860:	1144983a 	sll	r2,r2,r5
 8026864:	310ad83a 	srl	r5,r6,r4
 8026868:	2884b03a 	or	r2,r5,r2
 802686c:	003fe806 	br	8026810 <__flash_rwdata_start+0xffff6cf4>
 8026870:	10bffd44 	addi	r2,r2,-11
 8026874:	1000041e 	bne	r2,zero,8026888 <__b2d+0xf8>
 8026878:	90cffc34 	orhi	r3,r18,16368
 802687c:	003fe406 	br	8026810 <__flash_rwdata_start+0xffff6cf4>
 8026880:	000d883a 	mov	r6,zero
 8026884:	003fdf06 	br	8026804 <__flash_rwdata_start+0xffff6ce8>
 8026888:	90a4983a 	sll	r18,r18,r2
 802688c:	0005883a 	mov	r2,zero
 8026890:	003ff906 	br	8026878 <__flash_rwdata_start+0xffff6d5c>
 8026894:	1144983a 	sll	r2,r2,r5
 8026898:	003fdd06 	br	8026810 <__flash_rwdata_start+0xffff6cf4>

0802689c <__d2b>:
 802689c:	defff804 	addi	sp,sp,-32
 80268a0:	dc000215 	stw	r16,8(sp)
 80268a4:	3021883a 	mov	r16,r6
 80268a8:	dc400315 	stw	r17,12(sp)
 80268ac:	8022907a 	slli	r17,r16,1
 80268b0:	dd000615 	stw	r20,24(sp)
 80268b4:	2829883a 	mov	r20,r5
 80268b8:	01400044 	movi	r5,1
 80268bc:	dcc00515 	stw	r19,20(sp)
 80268c0:	dc800415 	stw	r18,16(sp)
 80268c4:	dfc00715 	stw	ra,28(sp)
 80268c8:	3825883a 	mov	r18,r7
 80268cc:	8822d57a 	srli	r17,r17,21
 80268d0:	8025b4c0 	call	8025b4c <_Balloc>
 80268d4:	1027883a 	mov	r19,r2
 80268d8:	00800434 	movhi	r2,16
 80268dc:	10bfffc4 	addi	r2,r2,-1
 80268e0:	808c703a 	and	r6,r16,r2
 80268e4:	88000126 	beq	r17,zero,80268ec <__d2b+0x50>
 80268e8:	31800434 	orhi	r6,r6,16
 80268ec:	d9800015 	stw	r6,0(sp)
 80268f0:	a0002426 	beq	r20,zero,8026984 <__d2b+0xe8>
 80268f4:	d9000104 	addi	r4,sp,4
 80268f8:	dd000115 	stw	r20,4(sp)
 80268fc:	8025ed00 	call	8025ed0 <__lo0bits>
 8026900:	d8c00017 	ldw	r3,0(sp)
 8026904:	10002f1e 	bne	r2,zero,80269c4 <__d2b+0x128>
 8026908:	d9000117 	ldw	r4,4(sp)
 802690c:	99000515 	stw	r4,20(r19)
 8026910:	1821003a 	cmpeq	r16,r3,zero
 8026914:	01000084 	movi	r4,2
 8026918:	2421c83a 	sub	r16,r4,r16
 802691c:	98c00615 	stw	r3,24(r19)
 8026920:	9c000415 	stw	r16,16(r19)
 8026924:	88001f1e 	bne	r17,zero,80269a4 <__d2b+0x108>
 8026928:	10bef384 	addi	r2,r2,-1074
 802692c:	90800015 	stw	r2,0(r18)
 8026930:	00900034 	movhi	r2,16384
 8026934:	10bfffc4 	addi	r2,r2,-1
 8026938:	8085883a 	add	r2,r16,r2
 802693c:	1085883a 	add	r2,r2,r2
 8026940:	1085883a 	add	r2,r2,r2
 8026944:	9885883a 	add	r2,r19,r2
 8026948:	11000517 	ldw	r4,20(r2)
 802694c:	8020917a 	slli	r16,r16,5
 8026950:	8025e680 	call	8025e68 <__hi0bits>
 8026954:	d8c00817 	ldw	r3,32(sp)
 8026958:	8085c83a 	sub	r2,r16,r2
 802695c:	18800015 	stw	r2,0(r3)
 8026960:	9805883a 	mov	r2,r19
 8026964:	dfc00717 	ldw	ra,28(sp)
 8026968:	dd000617 	ldw	r20,24(sp)
 802696c:	dcc00517 	ldw	r19,20(sp)
 8026970:	dc800417 	ldw	r18,16(sp)
 8026974:	dc400317 	ldw	r17,12(sp)
 8026978:	dc000217 	ldw	r16,8(sp)
 802697c:	dec00804 	addi	sp,sp,32
 8026980:	f800283a 	ret
 8026984:	d809883a 	mov	r4,sp
 8026988:	8025ed00 	call	8025ed0 <__lo0bits>
 802698c:	d8c00017 	ldw	r3,0(sp)
 8026990:	04000044 	movi	r16,1
 8026994:	9c000415 	stw	r16,16(r19)
 8026998:	98c00515 	stw	r3,20(r19)
 802699c:	10800804 	addi	r2,r2,32
 80269a0:	883fe126 	beq	r17,zero,8026928 <__flash_rwdata_start+0xffff6e0c>
 80269a4:	00c00d44 	movi	r3,53
 80269a8:	8c7ef344 	addi	r17,r17,-1075
 80269ac:	88a3883a 	add	r17,r17,r2
 80269b0:	1885c83a 	sub	r2,r3,r2
 80269b4:	d8c00817 	ldw	r3,32(sp)
 80269b8:	94400015 	stw	r17,0(r18)
 80269bc:	18800015 	stw	r2,0(r3)
 80269c0:	003fe706 	br	8026960 <__flash_rwdata_start+0xffff6e44>
 80269c4:	01000804 	movi	r4,32
 80269c8:	2089c83a 	sub	r4,r4,r2
 80269cc:	1908983a 	sll	r4,r3,r4
 80269d0:	d9400117 	ldw	r5,4(sp)
 80269d4:	1886d83a 	srl	r3,r3,r2
 80269d8:	2148b03a 	or	r4,r4,r5
 80269dc:	99000515 	stw	r4,20(r19)
 80269e0:	d8c00015 	stw	r3,0(sp)
 80269e4:	003fca06 	br	8026910 <__flash_rwdata_start+0xffff6df4>

080269e8 <__ratio>:
 80269e8:	defff904 	addi	sp,sp,-28
 80269ec:	dc400315 	stw	r17,12(sp)
 80269f0:	2823883a 	mov	r17,r5
 80269f4:	d9400104 	addi	r5,sp,4
 80269f8:	dfc00615 	stw	ra,24(sp)
 80269fc:	dcc00515 	stw	r19,20(sp)
 8026a00:	dc800415 	stw	r18,16(sp)
 8026a04:	2027883a 	mov	r19,r4
 8026a08:	dc000215 	stw	r16,8(sp)
 8026a0c:	80267900 	call	8026790 <__b2d>
 8026a10:	d80b883a 	mov	r5,sp
 8026a14:	8809883a 	mov	r4,r17
 8026a18:	1025883a 	mov	r18,r2
 8026a1c:	1821883a 	mov	r16,r3
 8026a20:	80267900 	call	8026790 <__b2d>
 8026a24:	8a000417 	ldw	r8,16(r17)
 8026a28:	99000417 	ldw	r4,16(r19)
 8026a2c:	d9400117 	ldw	r5,4(sp)
 8026a30:	2209c83a 	sub	r4,r4,r8
 8026a34:	2010917a 	slli	r8,r4,5
 8026a38:	d9000017 	ldw	r4,0(sp)
 8026a3c:	2909c83a 	sub	r4,r5,r4
 8026a40:	4109883a 	add	r4,r8,r4
 8026a44:	01000e0e 	bge	zero,r4,8026a80 <__ratio+0x98>
 8026a48:	2008953a 	slli	r4,r4,20
 8026a4c:	2421883a 	add	r16,r4,r16
 8026a50:	100d883a 	mov	r6,r2
 8026a54:	180f883a 	mov	r7,r3
 8026a58:	9009883a 	mov	r4,r18
 8026a5c:	800b883a 	mov	r5,r16
 8026a60:	802b1900 	call	802b190 <__divdf3>
 8026a64:	dfc00617 	ldw	ra,24(sp)
 8026a68:	dcc00517 	ldw	r19,20(sp)
 8026a6c:	dc800417 	ldw	r18,16(sp)
 8026a70:	dc400317 	ldw	r17,12(sp)
 8026a74:	dc000217 	ldw	r16,8(sp)
 8026a78:	dec00704 	addi	sp,sp,28
 8026a7c:	f800283a 	ret
 8026a80:	2008953a 	slli	r4,r4,20
 8026a84:	1907c83a 	sub	r3,r3,r4
 8026a88:	003ff106 	br	8026a50 <__flash_rwdata_start+0xffff6f34>

08026a8c <_mprec_log10>:
 8026a8c:	defffe04 	addi	sp,sp,-8
 8026a90:	dc000015 	stw	r16,0(sp)
 8026a94:	dfc00115 	stw	ra,4(sp)
 8026a98:	008005c4 	movi	r2,23
 8026a9c:	2021883a 	mov	r16,r4
 8026aa0:	11000d0e 	bge	r2,r4,8026ad8 <_mprec_log10+0x4c>
 8026aa4:	0005883a 	mov	r2,zero
 8026aa8:	00cffc34 	movhi	r3,16368
 8026aac:	843fffc4 	addi	r16,r16,-1
 8026ab0:	000d883a 	mov	r6,zero
 8026ab4:	01d00934 	movhi	r7,16420
 8026ab8:	1009883a 	mov	r4,r2
 8026abc:	180b883a 	mov	r5,r3
 8026ac0:	802bdb80 	call	802bdb8 <__muldf3>
 8026ac4:	803ff91e 	bne	r16,zero,8026aac <__flash_rwdata_start+0xffff6f90>
 8026ac8:	dfc00117 	ldw	ra,4(sp)
 8026acc:	dc000017 	ldw	r16,0(sp)
 8026ad0:	dec00204 	addi	sp,sp,8
 8026ad4:	f800283a 	ret
 8026ad8:	202090fa 	slli	r16,r4,3
 8026adc:	00800034 	movhi	r2,0
 8026ae0:	10803b04 	addi	r2,r2,236
 8026ae4:	1421883a 	add	r16,r2,r16
 8026ae8:	80800017 	ldw	r2,0(r16)
 8026aec:	80c00117 	ldw	r3,4(r16)
 8026af0:	dfc00117 	ldw	ra,4(sp)
 8026af4:	dc000017 	ldw	r16,0(sp)
 8026af8:	dec00204 	addi	sp,sp,8
 8026afc:	f800283a 	ret

08026b00 <__copybits>:
 8026b00:	297fffc4 	addi	r5,r5,-1
 8026b04:	280fd17a 	srai	r7,r5,5
 8026b08:	30c00417 	ldw	r3,16(r6)
 8026b0c:	30800504 	addi	r2,r6,20
 8026b10:	39c00044 	addi	r7,r7,1
 8026b14:	18c7883a 	add	r3,r3,r3
 8026b18:	39cf883a 	add	r7,r7,r7
 8026b1c:	18c7883a 	add	r3,r3,r3
 8026b20:	39cf883a 	add	r7,r7,r7
 8026b24:	10c7883a 	add	r3,r2,r3
 8026b28:	21cf883a 	add	r7,r4,r7
 8026b2c:	10c00d2e 	bgeu	r2,r3,8026b64 <__copybits+0x64>
 8026b30:	200b883a 	mov	r5,r4
 8026b34:	12000017 	ldw	r8,0(r2)
 8026b38:	29400104 	addi	r5,r5,4
 8026b3c:	10800104 	addi	r2,r2,4
 8026b40:	2a3fff15 	stw	r8,-4(r5)
 8026b44:	10fffb36 	bltu	r2,r3,8026b34 <__flash_rwdata_start+0xffff7018>
 8026b48:	1985c83a 	sub	r2,r3,r6
 8026b4c:	10bffac4 	addi	r2,r2,-21
 8026b50:	1004d0ba 	srli	r2,r2,2
 8026b54:	10800044 	addi	r2,r2,1
 8026b58:	1085883a 	add	r2,r2,r2
 8026b5c:	1085883a 	add	r2,r2,r2
 8026b60:	2089883a 	add	r4,r4,r2
 8026b64:	21c0032e 	bgeu	r4,r7,8026b74 <__copybits+0x74>
 8026b68:	20000015 	stw	zero,0(r4)
 8026b6c:	21000104 	addi	r4,r4,4
 8026b70:	21fffd36 	bltu	r4,r7,8026b68 <__flash_rwdata_start+0xffff704c>
 8026b74:	f800283a 	ret

08026b78 <__any_on>:
 8026b78:	20c00417 	ldw	r3,16(r4)
 8026b7c:	2805d17a 	srai	r2,r5,5
 8026b80:	21000504 	addi	r4,r4,20
 8026b84:	18800d0e 	bge	r3,r2,8026bbc <__any_on+0x44>
 8026b88:	18c7883a 	add	r3,r3,r3
 8026b8c:	18c7883a 	add	r3,r3,r3
 8026b90:	20c7883a 	add	r3,r4,r3
 8026b94:	20c0192e 	bgeu	r4,r3,8026bfc <__any_on+0x84>
 8026b98:	18bfff17 	ldw	r2,-4(r3)
 8026b9c:	18ffff04 	addi	r3,r3,-4
 8026ba0:	1000041e 	bne	r2,zero,8026bb4 <__any_on+0x3c>
 8026ba4:	20c0142e 	bgeu	r4,r3,8026bf8 <__any_on+0x80>
 8026ba8:	18ffff04 	addi	r3,r3,-4
 8026bac:	19400017 	ldw	r5,0(r3)
 8026bb0:	283ffc26 	beq	r5,zero,8026ba4 <__flash_rwdata_start+0xffff7088>
 8026bb4:	00800044 	movi	r2,1
 8026bb8:	f800283a 	ret
 8026bbc:	10c00a0e 	bge	r2,r3,8026be8 <__any_on+0x70>
 8026bc0:	1085883a 	add	r2,r2,r2
 8026bc4:	1085883a 	add	r2,r2,r2
 8026bc8:	294007cc 	andi	r5,r5,31
 8026bcc:	2087883a 	add	r3,r4,r2
 8026bd0:	283ff026 	beq	r5,zero,8026b94 <__flash_rwdata_start+0xffff7078>
 8026bd4:	19800017 	ldw	r6,0(r3)
 8026bd8:	3144d83a 	srl	r2,r6,r5
 8026bdc:	114a983a 	sll	r5,r2,r5
 8026be0:	317ff41e 	bne	r6,r5,8026bb4 <__flash_rwdata_start+0xffff7098>
 8026be4:	003feb06 	br	8026b94 <__flash_rwdata_start+0xffff7078>
 8026be8:	1085883a 	add	r2,r2,r2
 8026bec:	1085883a 	add	r2,r2,r2
 8026bf0:	2087883a 	add	r3,r4,r2
 8026bf4:	003fe706 	br	8026b94 <__flash_rwdata_start+0xffff7078>
 8026bf8:	f800283a 	ret
 8026bfc:	0005883a 	mov	r2,zero
 8026c00:	f800283a 	ret

08026c04 <__fpclassifyd>:
 8026c04:	00a00034 	movhi	r2,32768
 8026c08:	10bfffc4 	addi	r2,r2,-1
 8026c0c:	2884703a 	and	r2,r5,r2
 8026c10:	10000726 	beq	r2,zero,8026c30 <__fpclassifyd+0x2c>
 8026c14:	00fffc34 	movhi	r3,65520
 8026c18:	019ff834 	movhi	r6,32736
 8026c1c:	28c7883a 	add	r3,r5,r3
 8026c20:	31bfffc4 	addi	r6,r6,-1
 8026c24:	30c00536 	bltu	r6,r3,8026c3c <__fpclassifyd+0x38>
 8026c28:	00800104 	movi	r2,4
 8026c2c:	f800283a 	ret
 8026c30:	2000021e 	bne	r4,zero,8026c3c <__fpclassifyd+0x38>
 8026c34:	00800084 	movi	r2,2
 8026c38:	f800283a 	ret
 8026c3c:	00dffc34 	movhi	r3,32752
 8026c40:	019ff834 	movhi	r6,32736
 8026c44:	28cb883a 	add	r5,r5,r3
 8026c48:	31bfffc4 	addi	r6,r6,-1
 8026c4c:	317ff62e 	bgeu	r6,r5,8026c28 <__flash_rwdata_start+0xffff710c>
 8026c50:	01400434 	movhi	r5,16
 8026c54:	297fffc4 	addi	r5,r5,-1
 8026c58:	28800236 	bltu	r5,r2,8026c64 <__fpclassifyd+0x60>
 8026c5c:	008000c4 	movi	r2,3
 8026c60:	f800283a 	ret
 8026c64:	10c00226 	beq	r2,r3,8026c70 <__fpclassifyd+0x6c>
 8026c68:	0005883a 	mov	r2,zero
 8026c6c:	f800283a 	ret
 8026c70:	2005003a 	cmpeq	r2,r4,zero
 8026c74:	f800283a 	ret

08026c78 <_sbrk_r>:
 8026c78:	defffd04 	addi	sp,sp,-12
 8026c7c:	dc000015 	stw	r16,0(sp)
 8026c80:	04000034 	movhi	r16,0
 8026c84:	dc400115 	stw	r17,4(sp)
 8026c88:	84078104 	addi	r16,r16,7684
 8026c8c:	2023883a 	mov	r17,r4
 8026c90:	2809883a 	mov	r4,r5
 8026c94:	dfc00215 	stw	ra,8(sp)
 8026c98:	80000015 	stw	zero,0(r16)
 8026c9c:	802d9300 	call	802d930 <sbrk>
 8026ca0:	00ffffc4 	movi	r3,-1
 8026ca4:	10c00526 	beq	r2,r3,8026cbc <_sbrk_r+0x44>
 8026ca8:	dfc00217 	ldw	ra,8(sp)
 8026cac:	dc400117 	ldw	r17,4(sp)
 8026cb0:	dc000017 	ldw	r16,0(sp)
 8026cb4:	dec00304 	addi	sp,sp,12
 8026cb8:	f800283a 	ret
 8026cbc:	80c00017 	ldw	r3,0(r16)
 8026cc0:	183ff926 	beq	r3,zero,8026ca8 <__flash_rwdata_start+0xffff718c>
 8026cc4:	88c00015 	stw	r3,0(r17)
 8026cc8:	003ff706 	br	8026ca8 <__flash_rwdata_start+0xffff718c>

08026ccc <__sread>:
 8026ccc:	defffe04 	addi	sp,sp,-8
 8026cd0:	dc000015 	stw	r16,0(sp)
 8026cd4:	2821883a 	mov	r16,r5
 8026cd8:	2940038f 	ldh	r5,14(r5)
 8026cdc:	dfc00115 	stw	ra,4(sp)
 8026ce0:	80292440 	call	8029244 <_read_r>
 8026ce4:	10000716 	blt	r2,zero,8026d04 <__sread+0x38>
 8026ce8:	80c01417 	ldw	r3,80(r16)
 8026cec:	1887883a 	add	r3,r3,r2
 8026cf0:	80c01415 	stw	r3,80(r16)
 8026cf4:	dfc00117 	ldw	ra,4(sp)
 8026cf8:	dc000017 	ldw	r16,0(sp)
 8026cfc:	dec00204 	addi	sp,sp,8
 8026d00:	f800283a 	ret
 8026d04:	80c0030b 	ldhu	r3,12(r16)
 8026d08:	18fbffcc 	andi	r3,r3,61439
 8026d0c:	80c0030d 	sth	r3,12(r16)
 8026d10:	dfc00117 	ldw	ra,4(sp)
 8026d14:	dc000017 	ldw	r16,0(sp)
 8026d18:	dec00204 	addi	sp,sp,8
 8026d1c:	f800283a 	ret

08026d20 <__seofread>:
 8026d20:	0005883a 	mov	r2,zero
 8026d24:	f800283a 	ret

08026d28 <__swrite>:
 8026d28:	2880030b 	ldhu	r2,12(r5)
 8026d2c:	defffb04 	addi	sp,sp,-20
 8026d30:	dcc00315 	stw	r19,12(sp)
 8026d34:	dc800215 	stw	r18,8(sp)
 8026d38:	dc400115 	stw	r17,4(sp)
 8026d3c:	dc000015 	stw	r16,0(sp)
 8026d40:	dfc00415 	stw	ra,16(sp)
 8026d44:	10c0400c 	andi	r3,r2,256
 8026d48:	2821883a 	mov	r16,r5
 8026d4c:	2023883a 	mov	r17,r4
 8026d50:	3025883a 	mov	r18,r6
 8026d54:	3827883a 	mov	r19,r7
 8026d58:	18000526 	beq	r3,zero,8026d70 <__swrite+0x48>
 8026d5c:	2940038f 	ldh	r5,14(r5)
 8026d60:	01c00084 	movi	r7,2
 8026d64:	000d883a 	mov	r6,zero
 8026d68:	80290880 	call	8029088 <_lseek_r>
 8026d6c:	8080030b 	ldhu	r2,12(r16)
 8026d70:	8140038f 	ldh	r5,14(r16)
 8026d74:	10bbffcc 	andi	r2,r2,61439
 8026d78:	980f883a 	mov	r7,r19
 8026d7c:	900d883a 	mov	r6,r18
 8026d80:	8809883a 	mov	r4,r17
 8026d84:	8080030d 	sth	r2,12(r16)
 8026d88:	dfc00417 	ldw	ra,16(sp)
 8026d8c:	dcc00317 	ldw	r19,12(sp)
 8026d90:	dc800217 	ldw	r18,8(sp)
 8026d94:	dc400117 	ldw	r17,4(sp)
 8026d98:	dc000017 	ldw	r16,0(sp)
 8026d9c:	dec00504 	addi	sp,sp,20
 8026da0:	80286741 	jmpi	8028674 <_write_r>

08026da4 <__sseek>:
 8026da4:	defffe04 	addi	sp,sp,-8
 8026da8:	dc000015 	stw	r16,0(sp)
 8026dac:	2821883a 	mov	r16,r5
 8026db0:	2940038f 	ldh	r5,14(r5)
 8026db4:	dfc00115 	stw	ra,4(sp)
 8026db8:	80290880 	call	8029088 <_lseek_r>
 8026dbc:	00ffffc4 	movi	r3,-1
 8026dc0:	10c00826 	beq	r2,r3,8026de4 <__sseek+0x40>
 8026dc4:	80c0030b 	ldhu	r3,12(r16)
 8026dc8:	80801415 	stw	r2,80(r16)
 8026dcc:	18c40014 	ori	r3,r3,4096
 8026dd0:	80c0030d 	sth	r3,12(r16)
 8026dd4:	dfc00117 	ldw	ra,4(sp)
 8026dd8:	dc000017 	ldw	r16,0(sp)
 8026ddc:	dec00204 	addi	sp,sp,8
 8026de0:	f800283a 	ret
 8026de4:	80c0030b 	ldhu	r3,12(r16)
 8026de8:	18fbffcc 	andi	r3,r3,61439
 8026dec:	80c0030d 	sth	r3,12(r16)
 8026df0:	dfc00117 	ldw	ra,4(sp)
 8026df4:	dc000017 	ldw	r16,0(sp)
 8026df8:	dec00204 	addi	sp,sp,8
 8026dfc:	f800283a 	ret

08026e00 <__sclose>:
 8026e00:	2940038f 	ldh	r5,14(r5)
 8026e04:	80286d41 	jmpi	80286d4 <_close_r>

08026e08 <strcmp>:
 8026e08:	2144b03a 	or	r2,r4,r5
 8026e0c:	108000cc 	andi	r2,r2,3
 8026e10:	1000171e 	bne	r2,zero,8026e70 <strcmp+0x68>
 8026e14:	20800017 	ldw	r2,0(r4)
 8026e18:	28c00017 	ldw	r3,0(r5)
 8026e1c:	10c0141e 	bne	r2,r3,8026e70 <strcmp+0x68>
 8026e20:	027fbff4 	movhi	r9,65279
 8026e24:	4a7fbfc4 	addi	r9,r9,-257
 8026e28:	0086303a 	nor	r3,zero,r2
 8026e2c:	02202074 	movhi	r8,32897
 8026e30:	1245883a 	add	r2,r2,r9
 8026e34:	42202004 	addi	r8,r8,-32640
 8026e38:	10c4703a 	and	r2,r2,r3
 8026e3c:	1204703a 	and	r2,r2,r8
 8026e40:	10000226 	beq	r2,zero,8026e4c <strcmp+0x44>
 8026e44:	00002306 	br	8026ed4 <strcmp+0xcc>
 8026e48:	1000221e 	bne	r2,zero,8026ed4 <strcmp+0xcc>
 8026e4c:	21000104 	addi	r4,r4,4
 8026e50:	20c00017 	ldw	r3,0(r4)
 8026e54:	29400104 	addi	r5,r5,4
 8026e58:	29800017 	ldw	r6,0(r5)
 8026e5c:	1a4f883a 	add	r7,r3,r9
 8026e60:	00c4303a 	nor	r2,zero,r3
 8026e64:	3884703a 	and	r2,r7,r2
 8026e68:	1204703a 	and	r2,r2,r8
 8026e6c:	19bff626 	beq	r3,r6,8026e48 <__flash_rwdata_start+0xffff732c>
 8026e70:	20800003 	ldbu	r2,0(r4)
 8026e74:	10c03fcc 	andi	r3,r2,255
 8026e78:	18c0201c 	xori	r3,r3,128
 8026e7c:	18ffe004 	addi	r3,r3,-128
 8026e80:	18000c26 	beq	r3,zero,8026eb4 <strcmp+0xac>
 8026e84:	29800007 	ldb	r6,0(r5)
 8026e88:	19800326 	beq	r3,r6,8026e98 <strcmp+0x90>
 8026e8c:	00001306 	br	8026edc <strcmp+0xd4>
 8026e90:	29800007 	ldb	r6,0(r5)
 8026e94:	11800b1e 	bne	r2,r6,8026ec4 <strcmp+0xbc>
 8026e98:	21000044 	addi	r4,r4,1
 8026e9c:	20c00003 	ldbu	r3,0(r4)
 8026ea0:	29400044 	addi	r5,r5,1
 8026ea4:	18803fcc 	andi	r2,r3,255
 8026ea8:	1080201c 	xori	r2,r2,128
 8026eac:	10bfe004 	addi	r2,r2,-128
 8026eb0:	103ff71e 	bne	r2,zero,8026e90 <__flash_rwdata_start+0xffff7374>
 8026eb4:	0007883a 	mov	r3,zero
 8026eb8:	28800003 	ldbu	r2,0(r5)
 8026ebc:	1885c83a 	sub	r2,r3,r2
 8026ec0:	f800283a 	ret
 8026ec4:	28800003 	ldbu	r2,0(r5)
 8026ec8:	18c03fcc 	andi	r3,r3,255
 8026ecc:	1885c83a 	sub	r2,r3,r2
 8026ed0:	f800283a 	ret
 8026ed4:	0005883a 	mov	r2,zero
 8026ed8:	f800283a 	ret
 8026edc:	10c03fcc 	andi	r3,r2,255
 8026ee0:	003ff506 	br	8026eb8 <__flash_rwdata_start+0xffff739c>

08026ee4 <strlen>:
 8026ee4:	208000cc 	andi	r2,r4,3
 8026ee8:	10002026 	beq	r2,zero,8026f6c <strlen+0x88>
 8026eec:	20800007 	ldb	r2,0(r4)
 8026ef0:	10002026 	beq	r2,zero,8026f74 <strlen+0x90>
 8026ef4:	2005883a 	mov	r2,r4
 8026ef8:	00000206 	br	8026f04 <strlen+0x20>
 8026efc:	10c00007 	ldb	r3,0(r2)
 8026f00:	18001826 	beq	r3,zero,8026f64 <strlen+0x80>
 8026f04:	10800044 	addi	r2,r2,1
 8026f08:	10c000cc 	andi	r3,r2,3
 8026f0c:	183ffb1e 	bne	r3,zero,8026efc <__flash_rwdata_start+0xffff73e0>
 8026f10:	10c00017 	ldw	r3,0(r2)
 8026f14:	01ffbff4 	movhi	r7,65279
 8026f18:	39ffbfc4 	addi	r7,r7,-257
 8026f1c:	00ca303a 	nor	r5,zero,r3
 8026f20:	01a02074 	movhi	r6,32897
 8026f24:	19c7883a 	add	r3,r3,r7
 8026f28:	31a02004 	addi	r6,r6,-32640
 8026f2c:	1946703a 	and	r3,r3,r5
 8026f30:	1986703a 	and	r3,r3,r6
 8026f34:	1800091e 	bne	r3,zero,8026f5c <strlen+0x78>
 8026f38:	10800104 	addi	r2,r2,4
 8026f3c:	10c00017 	ldw	r3,0(r2)
 8026f40:	19cb883a 	add	r5,r3,r7
 8026f44:	00c6303a 	nor	r3,zero,r3
 8026f48:	28c6703a 	and	r3,r5,r3
 8026f4c:	1986703a 	and	r3,r3,r6
 8026f50:	183ff926 	beq	r3,zero,8026f38 <__flash_rwdata_start+0xffff741c>
 8026f54:	00000106 	br	8026f5c <strlen+0x78>
 8026f58:	10800044 	addi	r2,r2,1
 8026f5c:	10c00007 	ldb	r3,0(r2)
 8026f60:	183ffd1e 	bne	r3,zero,8026f58 <__flash_rwdata_start+0xffff743c>
 8026f64:	1105c83a 	sub	r2,r2,r4
 8026f68:	f800283a 	ret
 8026f6c:	2005883a 	mov	r2,r4
 8026f70:	003fe706 	br	8026f10 <__flash_rwdata_start+0xffff73f4>
 8026f74:	0005883a 	mov	r2,zero
 8026f78:	f800283a 	ret

08026f7c <__sprint_r.part.0>:
 8026f7c:	28801917 	ldw	r2,100(r5)
 8026f80:	defff604 	addi	sp,sp,-40
 8026f84:	dd400515 	stw	r21,20(sp)
 8026f88:	dfc00915 	stw	ra,36(sp)
 8026f8c:	df000815 	stw	fp,32(sp)
 8026f90:	ddc00715 	stw	r23,28(sp)
 8026f94:	dd800615 	stw	r22,24(sp)
 8026f98:	dd000415 	stw	r20,16(sp)
 8026f9c:	dcc00315 	stw	r19,12(sp)
 8026fa0:	dc800215 	stw	r18,8(sp)
 8026fa4:	dc400115 	stw	r17,4(sp)
 8026fa8:	dc000015 	stw	r16,0(sp)
 8026fac:	1088000c 	andi	r2,r2,8192
 8026fb0:	302b883a 	mov	r21,r6
 8026fb4:	10002e26 	beq	r2,zero,8027070 <__sprint_r.part.0+0xf4>
 8026fb8:	30800217 	ldw	r2,8(r6)
 8026fbc:	35800017 	ldw	r22,0(r6)
 8026fc0:	10002926 	beq	r2,zero,8027068 <__sprint_r.part.0+0xec>
 8026fc4:	2827883a 	mov	r19,r5
 8026fc8:	2029883a 	mov	r20,r4
 8026fcc:	b5c00104 	addi	r23,r22,4
 8026fd0:	04bfffc4 	movi	r18,-1
 8026fd4:	bc400017 	ldw	r17,0(r23)
 8026fd8:	b4000017 	ldw	r16,0(r22)
 8026fdc:	0039883a 	mov	fp,zero
 8026fe0:	8822d0ba 	srli	r17,r17,2
 8026fe4:	8800031e 	bne	r17,zero,8026ff4 <__sprint_r.part.0+0x78>
 8026fe8:	00001806 	br	802704c <__sprint_r.part.0+0xd0>
 8026fec:	84000104 	addi	r16,r16,4
 8026ff0:	8f001526 	beq	r17,fp,8027048 <__sprint_r.part.0+0xcc>
 8026ff4:	81400017 	ldw	r5,0(r16)
 8026ff8:	980d883a 	mov	r6,r19
 8026ffc:	a009883a 	mov	r4,r20
 8027000:	8028a6c0 	call	8028a6c <_fputwc_r>
 8027004:	e7000044 	addi	fp,fp,1
 8027008:	14bff81e 	bne	r2,r18,8026fec <__flash_rwdata_start+0xffff74d0>
 802700c:	9005883a 	mov	r2,r18
 8027010:	a8000215 	stw	zero,8(r21)
 8027014:	a8000115 	stw	zero,4(r21)
 8027018:	dfc00917 	ldw	ra,36(sp)
 802701c:	df000817 	ldw	fp,32(sp)
 8027020:	ddc00717 	ldw	r23,28(sp)
 8027024:	dd800617 	ldw	r22,24(sp)
 8027028:	dd400517 	ldw	r21,20(sp)
 802702c:	dd000417 	ldw	r20,16(sp)
 8027030:	dcc00317 	ldw	r19,12(sp)
 8027034:	dc800217 	ldw	r18,8(sp)
 8027038:	dc400117 	ldw	r17,4(sp)
 802703c:	dc000017 	ldw	r16,0(sp)
 8027040:	dec00a04 	addi	sp,sp,40
 8027044:	f800283a 	ret
 8027048:	a8800217 	ldw	r2,8(r21)
 802704c:	8c63883a 	add	r17,r17,r17
 8027050:	8c63883a 	add	r17,r17,r17
 8027054:	1445c83a 	sub	r2,r2,r17
 8027058:	a8800215 	stw	r2,8(r21)
 802705c:	b5800204 	addi	r22,r22,8
 8027060:	bdc00204 	addi	r23,r23,8
 8027064:	103fdb1e 	bne	r2,zero,8026fd4 <__flash_rwdata_start+0xffff74b8>
 8027068:	0005883a 	mov	r2,zero
 802706c:	003fe806 	br	8027010 <__flash_rwdata_start+0xffff74f4>
 8027070:	8028b6c0 	call	8028b6c <__sfvwrite_r>
 8027074:	003fe606 	br	8027010 <__flash_rwdata_start+0xffff74f4>

08027078 <__sprint_r>:
 8027078:	30c00217 	ldw	r3,8(r6)
 802707c:	18000126 	beq	r3,zero,8027084 <__sprint_r+0xc>
 8027080:	8026f7c1 	jmpi	8026f7c <__sprint_r.part.0>
 8027084:	30000115 	stw	zero,4(r6)
 8027088:	0005883a 	mov	r2,zero
 802708c:	f800283a 	ret

08027090 <___vfiprintf_internal_r>:
 8027090:	deffca04 	addi	sp,sp,-216
 8027094:	dd403115 	stw	r21,196(sp)
 8027098:	dfc03515 	stw	ra,212(sp)
 802709c:	df003415 	stw	fp,208(sp)
 80270a0:	ddc03315 	stw	r23,204(sp)
 80270a4:	dd803215 	stw	r22,200(sp)
 80270a8:	dd003015 	stw	r20,192(sp)
 80270ac:	dcc02f15 	stw	r19,188(sp)
 80270b0:	dc802e15 	stw	r18,184(sp)
 80270b4:	dc402d15 	stw	r17,180(sp)
 80270b8:	dc002c15 	stw	r16,176(sp)
 80270bc:	d9002115 	stw	r4,132(sp)
 80270c0:	d9402015 	stw	r5,128(sp)
 80270c4:	d9c02215 	stw	r7,136(sp)
 80270c8:	302b883a 	mov	r21,r6
 80270cc:	20000226 	beq	r4,zero,80270d8 <___vfiprintf_internal_r+0x48>
 80270d0:	20800e17 	ldw	r2,56(r4)
 80270d4:	1000cf26 	beq	r2,zero,8027414 <___vfiprintf_internal_r+0x384>
 80270d8:	d8c02017 	ldw	r3,128(sp)
 80270dc:	1880030b 	ldhu	r2,12(r3)
 80270e0:	10c8000c 	andi	r3,r2,8192
 80270e4:	1800071e 	bne	r3,zero,8027104 <___vfiprintf_internal_r+0x74>
 80270e8:	d9402017 	ldw	r5,128(sp)
 80270ec:	00f7ffc4 	movi	r3,-8193
 80270f0:	10880014 	ori	r2,r2,8192
 80270f4:	29001917 	ldw	r4,100(r5)
 80270f8:	2880030d 	sth	r2,12(r5)
 80270fc:	20c6703a 	and	r3,r4,r3
 8027100:	28c01915 	stw	r3,100(r5)
 8027104:	10c0020c 	andi	r3,r2,8
 8027108:	1800a526 	beq	r3,zero,80273a0 <___vfiprintf_internal_r+0x310>
 802710c:	d9002017 	ldw	r4,128(sp)
 8027110:	20c00417 	ldw	r3,16(r4)
 8027114:	1800a226 	beq	r3,zero,80273a0 <___vfiprintf_internal_r+0x310>
 8027118:	1080068c 	andi	r2,r2,26
 802711c:	00c00284 	movi	r3,10
 8027120:	10c0a826 	beq	r2,r3,80273c4 <___vfiprintf_internal_r+0x334>
 8027124:	d9001a04 	addi	r4,sp,104
 8027128:	d94019c4 	addi	r5,sp,103
 802712c:	04800034 	movhi	r18,0
 8027130:	2145c83a 	sub	r2,r4,r5
 8027134:	94806d04 	addi	r18,r18,436
 8027138:	d9001e15 	stw	r4,120(sp)
 802713c:	d9401f15 	stw	r5,124(sp)
 8027140:	dec01a15 	stw	sp,104(sp)
 8027144:	d8001c15 	stw	zero,112(sp)
 8027148:	d8001b15 	stw	zero,108(sp)
 802714c:	d811883a 	mov	r8,sp
 8027150:	d8002615 	stw	zero,152(sp)
 8027154:	d8002415 	stw	zero,144(sp)
 8027158:	d8802815 	stw	r2,160(sp)
 802715c:	a82d883a 	mov	r22,r21
 8027160:	b0800007 	ldb	r2,0(r22)
 8027164:	10040d26 	beq	r2,zero,802819c <___vfiprintf_internal_r+0x110c>
 8027168:	00c00944 	movi	r3,37
 802716c:	b029883a 	mov	r20,r22
 8027170:	10c0021e 	bne	r2,r3,802717c <___vfiprintf_internal_r+0xec>
 8027174:	00001606 	br	80271d0 <___vfiprintf_internal_r+0x140>
 8027178:	10c00326 	beq	r2,r3,8027188 <___vfiprintf_internal_r+0xf8>
 802717c:	a5000044 	addi	r20,r20,1
 8027180:	a0800007 	ldb	r2,0(r20)
 8027184:	103ffc1e 	bne	r2,zero,8027178 <__flash_rwdata_start+0xffff765c>
 8027188:	a5a1c83a 	sub	r16,r20,r22
 802718c:	80001026 	beq	r16,zero,80271d0 <___vfiprintf_internal_r+0x140>
 8027190:	d8c01c17 	ldw	r3,112(sp)
 8027194:	d8801b17 	ldw	r2,108(sp)
 8027198:	45800015 	stw	r22,0(r8)
 802719c:	80c7883a 	add	r3,r16,r3
 80271a0:	10800044 	addi	r2,r2,1
 80271a4:	44000115 	stw	r16,4(r8)
 80271a8:	d8c01c15 	stw	r3,112(sp)
 80271ac:	d8801b15 	stw	r2,108(sp)
 80271b0:	010001c4 	movi	r4,7
 80271b4:	2080750e 	bge	r4,r2,802738c <___vfiprintf_internal_r+0x2fc>
 80271b8:	1803951e 	bne	r3,zero,8028010 <___vfiprintf_internal_r+0xf80>
 80271bc:	d8c02417 	ldw	r3,144(sp)
 80271c0:	d8001b15 	stw	zero,108(sp)
 80271c4:	d811883a 	mov	r8,sp
 80271c8:	1c07883a 	add	r3,r3,r16
 80271cc:	d8c02415 	stw	r3,144(sp)
 80271d0:	a0800007 	ldb	r2,0(r20)
 80271d4:	1002e026 	beq	r2,zero,8027d58 <___vfiprintf_internal_r+0xcc8>
 80271d8:	a5800044 	addi	r22,r20,1
 80271dc:	a0c00047 	ldb	r3,1(r20)
 80271e0:	d8001d85 	stb	zero,118(sp)
 80271e4:	0027883a 	mov	r19,zero
 80271e8:	d8002305 	stb	zero,140(sp)
 80271ec:	043fffc4 	movi	r16,-1
 80271f0:	d8002515 	stw	zero,148(sp)
 80271f4:	0023883a 	mov	r17,zero
 80271f8:	05001604 	movi	r20,88
 80271fc:	05400244 	movi	r21,9
 8027200:	402f883a 	mov	r23,r8
 8027204:	b5800044 	addi	r22,r22,1
 8027208:	18bff804 	addi	r2,r3,-32
 802720c:	a0827736 	bltu	r20,r2,8027bec <___vfiprintf_internal_r+0xb5c>
 8027210:	100490ba 	slli	r2,r2,2
 8027214:	010200b4 	movhi	r4,2050
 8027218:	211c8a04 	addi	r4,r4,29224
 802721c:	1105883a 	add	r2,r2,r4
 8027220:	10800017 	ldw	r2,0(r2)
 8027224:	1000683a 	jmp	r2
 8027228:	080278ec 	andhi	zero,at,2531
 802722c:	08027bec 	andhi	zero,at,2543
 8027230:	08027bec 	andhi	zero,at,2543
 8027234:	08027908 	cmpgei	zero,at,2532
 8027238:	08027bec 	andhi	zero,at,2543
 802723c:	08027bec 	andhi	zero,at,2543
 8027240:	08027bec 	andhi	zero,at,2543
 8027244:	08027bec 	andhi	zero,at,2543
 8027248:	08027bec 	andhi	zero,at,2543
 802724c:	08027bec 	andhi	zero,at,2543
 8027250:	08027b10 	cmplti	zero,at,2540
 8027254:	08027b34 	orhi	zero,at,2540
 8027258:	08027bec 	andhi	zero,at,2543
 802725c:	0802742c 	andhi	zero,at,2512
 8027260:	08027b48 	cmpgei	zero,at,2541
 8027264:	08027bec 	andhi	zero,at,2543
 8027268:	08027914 	ori	zero,at,2532
 802726c:	08027920 	cmpeqi	zero,at,2532
 8027270:	08027920 	cmpeqi	zero,at,2532
 8027274:	08027920 	cmpeqi	zero,at,2532
 8027278:	08027920 	cmpeqi	zero,at,2532
 802727c:	08027920 	cmpeqi	zero,at,2532
 8027280:	08027920 	cmpeqi	zero,at,2532
 8027284:	08027920 	cmpeqi	zero,at,2532
 8027288:	08027920 	cmpeqi	zero,at,2532
 802728c:	08027920 	cmpeqi	zero,at,2532
 8027290:	08027bec 	andhi	zero,at,2543
 8027294:	08027bec 	andhi	zero,at,2543
 8027298:	08027bec 	andhi	zero,at,2543
 802729c:	08027bec 	andhi	zero,at,2543
 80272a0:	08027bec 	andhi	zero,at,2543
 80272a4:	08027bec 	andhi	zero,at,2543
 80272a8:	08027bec 	andhi	zero,at,2543
 80272ac:	08027bec 	andhi	zero,at,2543
 80272b0:	08027bec 	andhi	zero,at,2543
 80272b4:	08027bec 	andhi	zero,at,2543
 80272b8:	08027960 	cmpeqi	zero,at,2533
 80272bc:	08027bec 	andhi	zero,at,2543
 80272c0:	08027bec 	andhi	zero,at,2543
 80272c4:	08027bec 	andhi	zero,at,2543
 80272c8:	08027bec 	andhi	zero,at,2543
 80272cc:	08027bec 	andhi	zero,at,2543
 80272d0:	08027bec 	andhi	zero,at,2543
 80272d4:	08027bec 	andhi	zero,at,2543
 80272d8:	08027bec 	andhi	zero,at,2543
 80272dc:	08027bec 	andhi	zero,at,2543
 80272e0:	08027bec 	andhi	zero,at,2543
 80272e4:	0802799c 	xori	zero,at,2534
 80272e8:	08027bec 	andhi	zero,at,2543
 80272ec:	08027bec 	andhi	zero,at,2543
 80272f0:	08027bec 	andhi	zero,at,2543
 80272f4:	08027bec 	andhi	zero,at,2543
 80272f8:	08027bec 	andhi	zero,at,2543
 80272fc:	080279f8 	rdprs	zero,at,2535
 8027300:	08027bec 	andhi	zero,at,2543
 8027304:	08027bec 	andhi	zero,at,2543
 8027308:	08027a6c 	andhi	zero,at,2537
 802730c:	08027bec 	andhi	zero,at,2543
 8027310:	08027bec 	andhi	zero,at,2543
 8027314:	08027bec 	andhi	zero,at,2543
 8027318:	08027bec 	andhi	zero,at,2543
 802731c:	08027bec 	andhi	zero,at,2543
 8027320:	08027bec 	andhi	zero,at,2543
 8027324:	08027bec 	andhi	zero,at,2543
 8027328:	08027bec 	andhi	zero,at,2543
 802732c:	08027bec 	andhi	zero,at,2543
 8027330:	08027bec 	andhi	zero,at,2543
 8027334:	08027814 	ori	zero,at,2528
 8027338:	08027844 	addi	zero,at,2529
 802733c:	08027bec 	andhi	zero,at,2543
 8027340:	08027bec 	andhi	zero,at,2543
 8027344:	08027bec 	andhi	zero,at,2543
 8027348:	08027b94 	ori	zero,at,2542
 802734c:	08027844 	addi	zero,at,2529
 8027350:	08027bec 	andhi	zero,at,2543
 8027354:	08027bec 	andhi	zero,at,2543
 8027358:	080276ec 	andhi	zero,at,2523
 802735c:	08027bec 	andhi	zero,at,2543
 8027360:	08027700 	call	802770 <_gp+0x7f89c4>
 8027364:	08027738 	rdprs	zero,at,2524
 8027368:	08027438 	rdprs	zero,at,2512
 802736c:	080276e0 	cmpeqi	zero,at,2523
 8027370:	08027bec 	andhi	zero,at,2543
 8027374:	08027aac 	andhi	zero,at,2538
 8027378:	08027bec 	andhi	zero,at,2543
 802737c:	08027af8 	rdprs	zero,at,2539
 8027380:	08027bec 	andhi	zero,at,2543
 8027384:	08027bec 	andhi	zero,at,2543
 8027388:	080277bc 	xorhi	zero,at,2526
 802738c:	42000204 	addi	r8,r8,8
 8027390:	d8c02417 	ldw	r3,144(sp)
 8027394:	1c07883a 	add	r3,r3,r16
 8027398:	d8c02415 	stw	r3,144(sp)
 802739c:	003f8c06 	br	80271d0 <__flash_rwdata_start+0xffff76b4>
 80273a0:	d9402017 	ldw	r5,128(sp)
 80273a4:	d9002117 	ldw	r4,132(sp)
 80273a8:	802273c0 	call	802273c <__swsetup_r>
 80273ac:	1003c11e 	bne	r2,zero,80282b4 <___vfiprintf_internal_r+0x1224>
 80273b0:	d9402017 	ldw	r5,128(sp)
 80273b4:	00c00284 	movi	r3,10
 80273b8:	2880030b 	ldhu	r2,12(r5)
 80273bc:	1080068c 	andi	r2,r2,26
 80273c0:	10ff581e 	bne	r2,r3,8027124 <__flash_rwdata_start+0xffff7608>
 80273c4:	d8c02017 	ldw	r3,128(sp)
 80273c8:	1880038f 	ldh	r2,14(r3)
 80273cc:	103f5516 	blt	r2,zero,8027124 <__flash_rwdata_start+0xffff7608>
 80273d0:	d9c02217 	ldw	r7,136(sp)
 80273d4:	d9002117 	ldw	r4,132(sp)
 80273d8:	a80d883a 	mov	r6,r21
 80273dc:	180b883a 	mov	r5,r3
 80273e0:	80285b80 	call	80285b8 <__sbprintf>
 80273e4:	dfc03517 	ldw	ra,212(sp)
 80273e8:	df003417 	ldw	fp,208(sp)
 80273ec:	ddc03317 	ldw	r23,204(sp)
 80273f0:	dd803217 	ldw	r22,200(sp)
 80273f4:	dd403117 	ldw	r21,196(sp)
 80273f8:	dd003017 	ldw	r20,192(sp)
 80273fc:	dcc02f17 	ldw	r19,188(sp)
 8027400:	dc802e17 	ldw	r18,184(sp)
 8027404:	dc402d17 	ldw	r17,180(sp)
 8027408:	dc002c17 	ldw	r16,176(sp)
 802740c:	dec03604 	addi	sp,sp,216
 8027410:	f800283a 	ret
 8027414:	80247480 	call	8024748 <__sinit>
 8027418:	003f2f06 	br	80270d8 <__flash_rwdata_start+0xffff75bc>
 802741c:	d8c02517 	ldw	r3,148(sp)
 8027420:	d8802215 	stw	r2,136(sp)
 8027424:	00c7c83a 	sub	r3,zero,r3
 8027428:	d8c02515 	stw	r3,148(sp)
 802742c:	8c400114 	ori	r17,r17,4
 8027430:	b0c00007 	ldb	r3,0(r22)
 8027434:	003f7306 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027438:	00800c04 	movi	r2,48
 802743c:	d9402217 	ldw	r5,136(sp)
 8027440:	d8801d05 	stb	r2,116(sp)
 8027444:	00801e04 	movi	r2,120
 8027448:	d8801d45 	stb	r2,117(sp)
 802744c:	d8001d85 	stb	zero,118(sp)
 8027450:	b811883a 	mov	r8,r23
 8027454:	28c00104 	addi	r3,r5,4
 8027458:	2cc00017 	ldw	r19,0(r5)
 802745c:	0029883a 	mov	r20,zero
 8027460:	88800094 	ori	r2,r17,2
 8027464:	80032516 	blt	r16,zero,80280fc <___vfiprintf_internal_r+0x106c>
 8027468:	00bfdfc4 	movi	r2,-129
 802746c:	88a2703a 	and	r17,r17,r2
 8027470:	d8c02215 	stw	r3,136(sp)
 8027474:	8c400094 	ori	r17,r17,2
 8027478:	98032a1e 	bne	r19,zero,8028124 <___vfiprintf_internal_r+0x1094>
 802747c:	00800034 	movhi	r2,0
 8027480:	10800c04 	addi	r2,r2,48
 8027484:	d8802615 	stw	r2,152(sp)
 8027488:	002b883a 	mov	r21,zero
 802748c:	8001741e 	bne	r16,zero,8027a60 <___vfiprintf_internal_r+0x9d0>
 8027490:	0021883a 	mov	r16,zero
 8027494:	0029883a 	mov	r20,zero
 8027498:	ddc01a04 	addi	r23,sp,104
 802749c:	8027883a 	mov	r19,r16
 80274a0:	8500010e 	bge	r16,r20,80274a8 <___vfiprintf_internal_r+0x418>
 80274a4:	a027883a 	mov	r19,r20
 80274a8:	ad403fcc 	andi	r21,r21,255
 80274ac:	ad40201c 	xori	r21,r21,128
 80274b0:	ad7fe004 	addi	r21,r21,-128
 80274b4:	a8000126 	beq	r21,zero,80274bc <___vfiprintf_internal_r+0x42c>
 80274b8:	9cc00044 	addi	r19,r19,1
 80274bc:	89c0008c 	andi	r7,r17,2
 80274c0:	38000126 	beq	r7,zero,80274c8 <___vfiprintf_internal_r+0x438>
 80274c4:	9cc00084 	addi	r19,r19,2
 80274c8:	88c0210c 	andi	r3,r17,132
 80274cc:	1801dd1e 	bne	r3,zero,8027c44 <___vfiprintf_internal_r+0xbb4>
 80274d0:	d9402517 	ldw	r5,148(sp)
 80274d4:	2cebc83a 	sub	r21,r5,r19
 80274d8:	0541da0e 	bge	zero,r21,8027c44 <___vfiprintf_internal_r+0xbb4>
 80274dc:	07000404 	movi	fp,16
 80274e0:	d8801c17 	ldw	r2,112(sp)
 80274e4:	e543be0e 	bge	fp,r21,80283e0 <___vfiprintf_internal_r+0x1350>
 80274e8:	01400034 	movhi	r5,0
 80274ec:	29407104 	addi	r5,r5,452
 80274f0:	dc002715 	stw	r16,156(sp)
 80274f4:	d9801b17 	ldw	r6,108(sp)
 80274f8:	a821883a 	mov	r16,r21
 80274fc:	d9402315 	stw	r5,140(sp)
 8027500:	028001c4 	movi	r10,7
 8027504:	d9c02915 	stw	r7,164(sp)
 8027508:	182b883a 	mov	r21,r3
 802750c:	00000506 	br	8027524 <___vfiprintf_internal_r+0x494>
 8027510:	31000084 	addi	r4,r6,2
 8027514:	42000204 	addi	r8,r8,8
 8027518:	180d883a 	mov	r6,r3
 802751c:	843ffc04 	addi	r16,r16,-16
 8027520:	e4000f0e 	bge	fp,r16,8027560 <___vfiprintf_internal_r+0x4d0>
 8027524:	01000034 	movhi	r4,0
 8027528:	10800404 	addi	r2,r2,16
 802752c:	30c00044 	addi	r3,r6,1
 8027530:	21007104 	addi	r4,r4,452
 8027534:	41000015 	stw	r4,0(r8)
 8027538:	47000115 	stw	fp,4(r8)
 802753c:	d8801c15 	stw	r2,112(sp)
 8027540:	d8c01b15 	stw	r3,108(sp)
 8027544:	50fff20e 	bge	r10,r3,8027510 <__flash_rwdata_start+0xffff79f4>
 8027548:	1001b21e 	bne	r2,zero,8027c14 <___vfiprintf_internal_r+0xb84>
 802754c:	843ffc04 	addi	r16,r16,-16
 8027550:	000d883a 	mov	r6,zero
 8027554:	01000044 	movi	r4,1
 8027558:	d811883a 	mov	r8,sp
 802755c:	e43ff116 	blt	fp,r16,8027524 <__flash_rwdata_start+0xffff7a08>
 8027560:	a807883a 	mov	r3,r21
 8027564:	d9c02917 	ldw	r7,164(sp)
 8027568:	802b883a 	mov	r21,r16
 802756c:	dc002717 	ldw	r16,156(sp)
 8027570:	d9402317 	ldw	r5,140(sp)
 8027574:	a885883a 	add	r2,r21,r2
 8027578:	45400115 	stw	r21,4(r8)
 802757c:	41400015 	stw	r5,0(r8)
 8027580:	d8801c15 	stw	r2,112(sp)
 8027584:	d9001b15 	stw	r4,108(sp)
 8027588:	014001c4 	movi	r5,7
 802758c:	29026216 	blt	r5,r4,8027f18 <___vfiprintf_internal_r+0xe88>
 8027590:	d9801d87 	ldb	r6,118(sp)
 8027594:	42000204 	addi	r8,r8,8
 8027598:	21400044 	addi	r5,r4,1
 802759c:	3001ae1e 	bne	r6,zero,8027c58 <___vfiprintf_internal_r+0xbc8>
 80275a0:	3801bb26 	beq	r7,zero,8027c90 <___vfiprintf_internal_r+0xc00>
 80275a4:	d9001d04 	addi	r4,sp,116
 80275a8:	10800084 	addi	r2,r2,2
 80275ac:	41000015 	stw	r4,0(r8)
 80275b0:	01000084 	movi	r4,2
 80275b4:	41000115 	stw	r4,4(r8)
 80275b8:	d8801c15 	stw	r2,112(sp)
 80275bc:	d9401b15 	stw	r5,108(sp)
 80275c0:	010001c4 	movi	r4,7
 80275c4:	2142680e 	bge	r4,r5,8027f68 <___vfiprintf_internal_r+0xed8>
 80275c8:	1002b11e 	bne	r2,zero,8028090 <___vfiprintf_internal_r+0x1000>
 80275cc:	01802004 	movi	r6,128
 80275d0:	01400044 	movi	r5,1
 80275d4:	0009883a 	mov	r4,zero
 80275d8:	d811883a 	mov	r8,sp
 80275dc:	1981ae1e 	bne	r3,r6,8027c98 <___vfiprintf_internal_r+0xc08>
 80275e0:	d8c02517 	ldw	r3,148(sp)
 80275e4:	1cf9c83a 	sub	fp,r3,r19
 80275e8:	0701ab0e 	bge	zero,fp,8027c98 <___vfiprintf_internal_r+0xc08>
 80275ec:	05400404 	movi	r21,16
 80275f0:	af03a90e 	bge	r21,fp,8028498 <___vfiprintf_internal_r+0x1408>
 80275f4:	01400034 	movhi	r5,0
 80275f8:	29406d04 	addi	r5,r5,436
 80275fc:	d9402315 	stw	r5,140(sp)
 8027600:	01c001c4 	movi	r7,7
 8027604:	00000506 	br	802761c <___vfiprintf_internal_r+0x58c>
 8027608:	21800084 	addi	r6,r4,2
 802760c:	42000204 	addi	r8,r8,8
 8027610:	1809883a 	mov	r4,r3
 8027614:	e73ffc04 	addi	fp,fp,-16
 8027618:	af000d0e 	bge	r21,fp,8027650 <___vfiprintf_internal_r+0x5c0>
 802761c:	10800404 	addi	r2,r2,16
 8027620:	20c00044 	addi	r3,r4,1
 8027624:	44800015 	stw	r18,0(r8)
 8027628:	45400115 	stw	r21,4(r8)
 802762c:	d8801c15 	stw	r2,112(sp)
 8027630:	d8c01b15 	stw	r3,108(sp)
 8027634:	38fff40e 	bge	r7,r3,8027608 <__flash_rwdata_start+0xffff7aec>
 8027638:	10022b1e 	bne	r2,zero,8027ee8 <___vfiprintf_internal_r+0xe58>
 802763c:	e73ffc04 	addi	fp,fp,-16
 8027640:	01800044 	movi	r6,1
 8027644:	0009883a 	mov	r4,zero
 8027648:	d811883a 	mov	r8,sp
 802764c:	af3ff316 	blt	r21,fp,802761c <__flash_rwdata_start+0xffff7b00>
 8027650:	d8c02317 	ldw	r3,140(sp)
 8027654:	1705883a 	add	r2,r2,fp
 8027658:	47000115 	stw	fp,4(r8)
 802765c:	40c00015 	stw	r3,0(r8)
 8027660:	d8801c15 	stw	r2,112(sp)
 8027664:	d9801b15 	stw	r6,108(sp)
 8027668:	00c001c4 	movi	r3,7
 802766c:	19829416 	blt	r3,r6,80280c0 <___vfiprintf_internal_r+0x1030>
 8027670:	8521c83a 	sub	r16,r16,r20
 8027674:	42000204 	addi	r8,r8,8
 8027678:	31400044 	addi	r5,r6,1
 802767c:	3009883a 	mov	r4,r6
 8027680:	04018716 	blt	zero,r16,8027ca0 <___vfiprintf_internal_r+0xc10>
 8027684:	a085883a 	add	r2,r20,r2
 8027688:	45c00015 	stw	r23,0(r8)
 802768c:	45000115 	stw	r20,4(r8)
 8027690:	d8801c15 	stw	r2,112(sp)
 8027694:	d9401b15 	stw	r5,108(sp)
 8027698:	00c001c4 	movi	r3,7
 802769c:	1941c20e 	bge	r3,r5,8027da8 <___vfiprintf_internal_r+0xd18>
 80276a0:	1002531e 	bne	r2,zero,8027ff0 <___vfiprintf_internal_r+0xf60>
 80276a4:	d8001b15 	stw	zero,108(sp)
 80276a8:	8c40010c 	andi	r17,r17,4
 80276ac:	88023226 	beq	r17,zero,8027f78 <___vfiprintf_internal_r+0xee8>
 80276b0:	d9002517 	ldw	r4,148(sp)
 80276b4:	24e3c83a 	sub	r17,r4,r19
 80276b8:	04432916 	blt	zero,r17,8028360 <___vfiprintf_internal_r+0x12d0>
 80276bc:	d8802517 	ldw	r2,148(sp)
 80276c0:	14c0010e 	bge	r2,r19,80276c8 <___vfiprintf_internal_r+0x638>
 80276c4:	9805883a 	mov	r2,r19
 80276c8:	d8c02417 	ldw	r3,144(sp)
 80276cc:	1887883a 	add	r3,r3,r2
 80276d0:	d8c02415 	stw	r3,144(sp)
 80276d4:	d8001b15 	stw	zero,108(sp)
 80276d8:	d811883a 	mov	r8,sp
 80276dc:	003ea006 	br	8027160 <__flash_rwdata_start+0xffff7644>
 80276e0:	8c400814 	ori	r17,r17,32
 80276e4:	b0c00007 	ldb	r3,0(r22)
 80276e8:	003ec606 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 80276ec:	b0c00007 	ldb	r3,0(r22)
 80276f0:	00801b04 	movi	r2,108
 80276f4:	18832026 	beq	r3,r2,8028378 <___vfiprintf_internal_r+0x12e8>
 80276f8:	8c400414 	ori	r17,r17,16
 80276fc:	003ec106 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027700:	9cc03fcc 	andi	r19,r19,255
 8027704:	b811883a 	mov	r8,r23
 8027708:	9803981e 	bne	r19,zero,802856c <___vfiprintf_internal_r+0x14dc>
 802770c:	8880080c 	andi	r2,r17,32
 8027710:	1002be26 	beq	r2,zero,802820c <___vfiprintf_internal_r+0x117c>
 8027714:	d9002217 	ldw	r4,136(sp)
 8027718:	d9402417 	ldw	r5,144(sp)
 802771c:	20800017 	ldw	r2,0(r4)
 8027720:	2807d7fa 	srai	r3,r5,31
 8027724:	21000104 	addi	r4,r4,4
 8027728:	d9002215 	stw	r4,136(sp)
 802772c:	11400015 	stw	r5,0(r2)
 8027730:	10c00115 	stw	r3,4(r2)
 8027734:	003e8a06 	br	8027160 <__flash_rwdata_start+0xffff7644>
 8027738:	9cc03fcc 	andi	r19,r19,255
 802773c:	b811883a 	mov	r8,r23
 8027740:	9803871e 	bne	r19,zero,8028560 <___vfiprintf_internal_r+0x14d0>
 8027744:	8880080c 	andi	r2,r17,32
 8027748:	10009a26 	beq	r2,zero,80279b4 <___vfiprintf_internal_r+0x924>
 802774c:	d9002217 	ldw	r4,136(sp)
 8027750:	d8001d85 	stb	zero,118(sp)
 8027754:	20800204 	addi	r2,r4,8
 8027758:	24c00017 	ldw	r19,0(r4)
 802775c:	25000117 	ldw	r20,4(r4)
 8027760:	8002a416 	blt	r16,zero,80281f4 <___vfiprintf_internal_r+0x1164>
 8027764:	013fdfc4 	movi	r4,-129
 8027768:	9d06b03a 	or	r3,r19,r20
 802776c:	d8802215 	stw	r2,136(sp)
 8027770:	8922703a 	and	r17,r17,r4
 8027774:	18009b26 	beq	r3,zero,80279e4 <___vfiprintf_internal_r+0x954>
 8027778:	002b883a 	mov	r21,zero
 802777c:	ddc01a04 	addi	r23,sp,104
 8027780:	9806d0fa 	srli	r3,r19,3
 8027784:	a008977a 	slli	r4,r20,29
 8027788:	a028d0fa 	srli	r20,r20,3
 802778c:	9cc001cc 	andi	r19,r19,7
 8027790:	98800c04 	addi	r2,r19,48
 8027794:	bdffffc4 	addi	r23,r23,-1
 8027798:	20e6b03a 	or	r19,r4,r3
 802779c:	b8800005 	stb	r2,0(r23)
 80277a0:	9d06b03a 	or	r3,r19,r20
 80277a4:	183ff61e 	bne	r3,zero,8027780 <__flash_rwdata_start+0xffff7c64>
 80277a8:	88c0004c 	andi	r3,r17,1
 80277ac:	18021f1e 	bne	r3,zero,802802c <___vfiprintf_internal_r+0xf9c>
 80277b0:	d9401e17 	ldw	r5,120(sp)
 80277b4:	2de9c83a 	sub	r20,r5,r23
 80277b8:	003f3806 	br	802749c <__flash_rwdata_start+0xffff7980>
 80277bc:	9cc03fcc 	andi	r19,r19,255
 80277c0:	b811883a 	mov	r8,r23
 80277c4:	98034f1e 	bne	r19,zero,8028504 <___vfiprintf_internal_r+0x1474>
 80277c8:	00800034 	movhi	r2,0
 80277cc:	10800c04 	addi	r2,r2,48
 80277d0:	d8802615 	stw	r2,152(sp)
 80277d4:	8880080c 	andi	r2,r17,32
 80277d8:	1000ac26 	beq	r2,zero,8027a8c <___vfiprintf_internal_r+0x9fc>
 80277dc:	d9002217 	ldw	r4,136(sp)
 80277e0:	24c00017 	ldw	r19,0(r4)
 80277e4:	25000117 	ldw	r20,4(r4)
 80277e8:	21000204 	addi	r4,r4,8
 80277ec:	d9002215 	stw	r4,136(sp)
 80277f0:	8880004c 	andi	r2,r17,1
 80277f4:	1001e726 	beq	r2,zero,8027f94 <___vfiprintf_internal_r+0xf04>
 80277f8:	9d04b03a 	or	r2,r19,r20
 80277fc:	10025c1e 	bne	r2,zero,8028170 <___vfiprintf_internal_r+0x10e0>
 8027800:	d8001d85 	stb	zero,118(sp)
 8027804:	80024416 	blt	r16,zero,8028118 <___vfiprintf_internal_r+0x1088>
 8027808:	00bfdfc4 	movi	r2,-129
 802780c:	88a2703a 	and	r17,r17,r2
 8027810:	003f1d06 	br	8027488 <__flash_rwdata_start+0xffff796c>
 8027814:	d8c02217 	ldw	r3,136(sp)
 8027818:	04c00044 	movi	r19,1
 802781c:	b811883a 	mov	r8,r23
 8027820:	18800017 	ldw	r2,0(r3)
 8027824:	18c00104 	addi	r3,r3,4
 8027828:	d8001d85 	stb	zero,118(sp)
 802782c:	d8801005 	stb	r2,64(sp)
 8027830:	d8c02215 	stw	r3,136(sp)
 8027834:	9829883a 	mov	r20,r19
 8027838:	ddc01004 	addi	r23,sp,64
 802783c:	0021883a 	mov	r16,zero
 8027840:	003f1e06 	br	80274bc <__flash_rwdata_start+0xffff79a0>
 8027844:	9cc03fcc 	andi	r19,r19,255
 8027848:	b811883a 	mov	r8,r23
 802784c:	9803331e 	bne	r19,zero,802851c <___vfiprintf_internal_r+0x148c>
 8027850:	8880080c 	andi	r2,r17,32
 8027854:	10004826 	beq	r2,zero,8027978 <___vfiprintf_internal_r+0x8e8>
 8027858:	d9002217 	ldw	r4,136(sp)
 802785c:	20800117 	ldw	r2,4(r4)
 8027860:	24c00017 	ldw	r19,0(r4)
 8027864:	21000204 	addi	r4,r4,8
 8027868:	d9002215 	stw	r4,136(sp)
 802786c:	1029883a 	mov	r20,r2
 8027870:	10024c16 	blt	r2,zero,80281a4 <___vfiprintf_internal_r+0x1114>
 8027874:	dd401d83 	ldbu	r21,118(sp)
 8027878:	80007116 	blt	r16,zero,8027a40 <___vfiprintf_internal_r+0x9b0>
 802787c:	00ffdfc4 	movi	r3,-129
 8027880:	9d04b03a 	or	r2,r19,r20
 8027884:	88e2703a 	and	r17,r17,r3
 8027888:	1000d126 	beq	r2,zero,8027bd0 <___vfiprintf_internal_r+0xb40>
 802788c:	a0023526 	beq	r20,zero,8028164 <___vfiprintf_internal_r+0x10d4>
 8027890:	ddc01a04 	addi	r23,sp,104
 8027894:	4039883a 	mov	fp,r8
 8027898:	9809883a 	mov	r4,r19
 802789c:	a00b883a 	mov	r5,r20
 80278a0:	01800284 	movi	r6,10
 80278a4:	000f883a 	mov	r7,zero
 80278a8:	802a1440 	call	802a144 <__umoddi3>
 80278ac:	10800c04 	addi	r2,r2,48
 80278b0:	bdffffc4 	addi	r23,r23,-1
 80278b4:	9809883a 	mov	r4,r19
 80278b8:	a00b883a 	mov	r5,r20
 80278bc:	b8800005 	stb	r2,0(r23)
 80278c0:	01800284 	movi	r6,10
 80278c4:	000f883a 	mov	r7,zero
 80278c8:	8029b480 	call	8029b48 <__udivdi3>
 80278cc:	1027883a 	mov	r19,r2
 80278d0:	10c4b03a 	or	r2,r2,r3
 80278d4:	1829883a 	mov	r20,r3
 80278d8:	103fef1e 	bne	r2,zero,8027898 <__flash_rwdata_start+0xffff7d7c>
 80278dc:	d9001e17 	ldw	r4,120(sp)
 80278e0:	e011883a 	mov	r8,fp
 80278e4:	25e9c83a 	sub	r20,r4,r23
 80278e8:	003eec06 	br	802749c <__flash_rwdata_start+0xffff7980>
 80278ec:	d8802307 	ldb	r2,140(sp)
 80278f0:	1002361e 	bne	r2,zero,80281cc <___vfiprintf_internal_r+0x113c>
 80278f4:	00c00804 	movi	r3,32
 80278f8:	d8c02305 	stb	r3,140(sp)
 80278fc:	04c00044 	movi	r19,1
 8027900:	b0c00007 	ldb	r3,0(r22)
 8027904:	003e3f06 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027908:	8c400054 	ori	r17,r17,1
 802790c:	b0c00007 	ldb	r3,0(r22)
 8027910:	003e3c06 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027914:	8c402014 	ori	r17,r17,128
 8027918:	b0c00007 	ldb	r3,0(r22)
 802791c:	003e3906 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027920:	dc002715 	stw	r16,156(sp)
 8027924:	d8002515 	stw	zero,148(sp)
 8027928:	1f3ff404 	addi	fp,r3,-48
 802792c:	0009883a 	mov	r4,zero
 8027930:	b021883a 	mov	r16,r22
 8027934:	01400284 	movi	r5,10
 8027938:	802a8bc0 	call	802a8bc <__mulsi3>
 802793c:	80c00007 	ldb	r3,0(r16)
 8027940:	e089883a 	add	r4,fp,r2
 8027944:	b5800044 	addi	r22,r22,1
 8027948:	1f3ff404 	addi	fp,r3,-48
 802794c:	b021883a 	mov	r16,r22
 8027950:	af3ff82e 	bgeu	r21,fp,8027934 <__flash_rwdata_start+0xffff7e18>
 8027954:	d9002515 	stw	r4,148(sp)
 8027958:	dc002717 	ldw	r16,156(sp)
 802795c:	003e2a06 	br	8027208 <__flash_rwdata_start+0xffff76ec>
 8027960:	9cc03fcc 	andi	r19,r19,255
 8027964:	b811883a 	mov	r8,r23
 8027968:	9802e91e 	bne	r19,zero,8028510 <___vfiprintf_internal_r+0x1480>
 802796c:	8c400414 	ori	r17,r17,16
 8027970:	8880080c 	andi	r2,r17,32
 8027974:	103fb81e 	bne	r2,zero,8027858 <__flash_rwdata_start+0xffff7d3c>
 8027978:	8880040c 	andi	r2,r17,16
 802797c:	10022e26 	beq	r2,zero,8028238 <___vfiprintf_internal_r+0x11a8>
 8027980:	d9402217 	ldw	r5,136(sp)
 8027984:	2cc00017 	ldw	r19,0(r5)
 8027988:	29400104 	addi	r5,r5,4
 802798c:	d9402215 	stw	r5,136(sp)
 8027990:	9829d7fa 	srai	r20,r19,31
 8027994:	a005883a 	mov	r2,r20
 8027998:	003fb506 	br	8027870 <__flash_rwdata_start+0xffff7d54>
 802799c:	9cc03fcc 	andi	r19,r19,255
 80279a0:	b811883a 	mov	r8,r23
 80279a4:	9802fa1e 	bne	r19,zero,8028590 <___vfiprintf_internal_r+0x1500>
 80279a8:	8c400414 	ori	r17,r17,16
 80279ac:	8880080c 	andi	r2,r17,32
 80279b0:	103f661e 	bne	r2,zero,802774c <__flash_rwdata_start+0xffff7c30>
 80279b4:	8880040c 	andi	r2,r17,16
 80279b8:	10020626 	beq	r2,zero,80281d4 <___vfiprintf_internal_r+0x1144>
 80279bc:	d9402217 	ldw	r5,136(sp)
 80279c0:	d8001d85 	stb	zero,118(sp)
 80279c4:	0029883a 	mov	r20,zero
 80279c8:	28800104 	addi	r2,r5,4
 80279cc:	2cc00017 	ldw	r19,0(r5)
 80279d0:	80020816 	blt	r16,zero,80281f4 <___vfiprintf_internal_r+0x1164>
 80279d4:	00ffdfc4 	movi	r3,-129
 80279d8:	d8802215 	stw	r2,136(sp)
 80279dc:	88e2703a 	and	r17,r17,r3
 80279e0:	983f651e 	bne	r19,zero,8027778 <__flash_rwdata_start+0xffff7c5c>
 80279e4:	002b883a 	mov	r21,zero
 80279e8:	8002cf26 	beq	r16,zero,8028528 <___vfiprintf_internal_r+0x1498>
 80279ec:	0027883a 	mov	r19,zero
 80279f0:	0029883a 	mov	r20,zero
 80279f4:	003f6106 	br	802777c <__flash_rwdata_start+0xffff7c60>
 80279f8:	9cc03fcc 	andi	r19,r19,255
 80279fc:	b811883a 	mov	r8,r23
 8027a00:	9802e01e 	bne	r19,zero,8028584 <___vfiprintf_internal_r+0x14f4>
 8027a04:	8c400414 	ori	r17,r17,16
 8027a08:	8880080c 	andi	r2,r17,32
 8027a0c:	1000641e 	bne	r2,zero,8027ba0 <___vfiprintf_internal_r+0xb10>
 8027a10:	8880040c 	andi	r2,r17,16
 8027a14:	1001c81e 	bne	r2,zero,8028138 <___vfiprintf_internal_r+0x10a8>
 8027a18:	8880100c 	andi	r2,r17,64
 8027a1c:	d8001d85 	stb	zero,118(sp)
 8027a20:	1002281e 	bne	r2,zero,80282c4 <___vfiprintf_internal_r+0x1234>
 8027a24:	d9002217 	ldw	r4,136(sp)
 8027a28:	0029883a 	mov	r20,zero
 8027a2c:	20800104 	addi	r2,r4,4
 8027a30:	24c00017 	ldw	r19,0(r4)
 8027a34:	8001c60e 	bge	r16,zero,8028150 <___vfiprintf_internal_r+0x10c0>
 8027a38:	d8802215 	stw	r2,136(sp)
 8027a3c:	002b883a 	mov	r21,zero
 8027a40:	9d04b03a 	or	r2,r19,r20
 8027a44:	103f911e 	bne	r2,zero,802788c <__flash_rwdata_start+0xffff7d70>
 8027a48:	00800044 	movi	r2,1
 8027a4c:	10803fcc 	andi	r2,r2,255
 8027a50:	00c00044 	movi	r3,1
 8027a54:	10c05f26 	beq	r2,r3,8027bd4 <___vfiprintf_internal_r+0xb44>
 8027a58:	00c00084 	movi	r3,2
 8027a5c:	10ffe31e 	bne	r2,r3,80279ec <__flash_rwdata_start+0xffff7ed0>
 8027a60:	0027883a 	mov	r19,zero
 8027a64:	0029883a 	mov	r20,zero
 8027a68:	00015106 	br	8027fb0 <___vfiprintf_internal_r+0xf20>
 8027a6c:	9cc03fcc 	andi	r19,r19,255
 8027a70:	b811883a 	mov	r8,r23
 8027a74:	9802c01e 	bne	r19,zero,8028578 <___vfiprintf_internal_r+0x14e8>
 8027a78:	01400034 	movhi	r5,0
 8027a7c:	29400704 	addi	r5,r5,28
 8027a80:	d9402615 	stw	r5,152(sp)
 8027a84:	8880080c 	andi	r2,r17,32
 8027a88:	103f541e 	bne	r2,zero,80277dc <__flash_rwdata_start+0xffff7cc0>
 8027a8c:	8880040c 	andi	r2,r17,16
 8027a90:	1001f226 	beq	r2,zero,802825c <___vfiprintf_internal_r+0x11cc>
 8027a94:	d9402217 	ldw	r5,136(sp)
 8027a98:	0029883a 	mov	r20,zero
 8027a9c:	2cc00017 	ldw	r19,0(r5)
 8027aa0:	29400104 	addi	r5,r5,4
 8027aa4:	d9402215 	stw	r5,136(sp)
 8027aa8:	003f5106 	br	80277f0 <__flash_rwdata_start+0xffff7cd4>
 8027aac:	d8c02217 	ldw	r3,136(sp)
 8027ab0:	b811883a 	mov	r8,r23
 8027ab4:	d8001d85 	stb	zero,118(sp)
 8027ab8:	1dc00017 	ldw	r23,0(r3)
 8027abc:	1f000104 	addi	fp,r3,4
 8027ac0:	b8025926 	beq	r23,zero,8028428 <___vfiprintf_internal_r+0x1398>
 8027ac4:	80023316 	blt	r16,zero,8028394 <___vfiprintf_internal_r+0x1304>
 8027ac8:	800d883a 	mov	r6,r16
 8027acc:	000b883a 	mov	r5,zero
 8027ad0:	b809883a 	mov	r4,r23
 8027ad4:	da002a15 	stw	r8,168(sp)
 8027ad8:	80257f80 	call	80257f8 <memchr>
 8027adc:	da002a17 	ldw	r8,168(sp)
 8027ae0:	10026826 	beq	r2,zero,8028484 <___vfiprintf_internal_r+0x13f4>
 8027ae4:	15e9c83a 	sub	r20,r2,r23
 8027ae8:	dd401d83 	ldbu	r21,118(sp)
 8027aec:	df002215 	stw	fp,136(sp)
 8027af0:	0021883a 	mov	r16,zero
 8027af4:	003e6906 	br	802749c <__flash_rwdata_start+0xffff7980>
 8027af8:	9cc03fcc 	andi	r19,r19,255
 8027afc:	b811883a 	mov	r8,r23
 8027b00:	983fc126 	beq	r19,zero,8027a08 <__flash_rwdata_start+0xffff7eec>
 8027b04:	d8c02303 	ldbu	r3,140(sp)
 8027b08:	d8c01d85 	stb	r3,118(sp)
 8027b0c:	003fbe06 	br	8027a08 <__flash_rwdata_start+0xffff7eec>
 8027b10:	d9002217 	ldw	r4,136(sp)
 8027b14:	d9402217 	ldw	r5,136(sp)
 8027b18:	21000017 	ldw	r4,0(r4)
 8027b1c:	28800104 	addi	r2,r5,4
 8027b20:	d9002515 	stw	r4,148(sp)
 8027b24:	203e3d16 	blt	r4,zero,802741c <__flash_rwdata_start+0xffff7900>
 8027b28:	d8802215 	stw	r2,136(sp)
 8027b2c:	b0c00007 	ldb	r3,0(r22)
 8027b30:	003db406 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027b34:	00c00ac4 	movi	r3,43
 8027b38:	d8c02305 	stb	r3,140(sp)
 8027b3c:	04c00044 	movi	r19,1
 8027b40:	b0c00007 	ldb	r3,0(r22)
 8027b44:	003daf06 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027b48:	b0c00007 	ldb	r3,0(r22)
 8027b4c:	01000a84 	movi	r4,42
 8027b50:	b4000044 	addi	r16,r22,1
 8027b54:	19025e26 	beq	r3,r4,80284d0 <___vfiprintf_internal_r+0x1440>
 8027b58:	1f3ff404 	addi	fp,r3,-48
 8027b5c:	0009883a 	mov	r4,zero
 8027b60:	af025236 	bltu	r21,fp,80284ac <___vfiprintf_internal_r+0x141c>
 8027b64:	01400284 	movi	r5,10
 8027b68:	802a8bc0 	call	802a8bc <__mulsi3>
 8027b6c:	80c00007 	ldb	r3,0(r16)
 8027b70:	1709883a 	add	r4,r2,fp
 8027b74:	85800044 	addi	r22,r16,1
 8027b78:	1f3ff404 	addi	fp,r3,-48
 8027b7c:	b021883a 	mov	r16,r22
 8027b80:	af3ff82e 	bgeu	r21,fp,8027b64 <__flash_rwdata_start+0xffff8048>
 8027b84:	2021883a 	mov	r16,r4
 8027b88:	203d9f0e 	bge	r4,zero,8027208 <__flash_rwdata_start+0xffff76ec>
 8027b8c:	043fffc4 	movi	r16,-1
 8027b90:	003d9d06 	br	8027208 <__flash_rwdata_start+0xffff76ec>
 8027b94:	8c401014 	ori	r17,r17,64
 8027b98:	b0c00007 	ldb	r3,0(r22)
 8027b9c:	003d9906 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8027ba0:	d9002217 	ldw	r4,136(sp)
 8027ba4:	d8001d85 	stb	zero,118(sp)
 8027ba8:	20c00204 	addi	r3,r4,8
 8027bac:	24c00017 	ldw	r19,0(r4)
 8027bb0:	25000117 	ldw	r20,4(r4)
 8027bb4:	8001e716 	blt	r16,zero,8028354 <___vfiprintf_internal_r+0x12c4>
 8027bb8:	013fdfc4 	movi	r4,-129
 8027bbc:	9d04b03a 	or	r2,r19,r20
 8027bc0:	d8c02215 	stw	r3,136(sp)
 8027bc4:	8922703a 	and	r17,r17,r4
 8027bc8:	002b883a 	mov	r21,zero
 8027bcc:	103f2f1e 	bne	r2,zero,802788c <__flash_rwdata_start+0xffff7d70>
 8027bd0:	803e2f26 	beq	r16,zero,8027490 <__flash_rwdata_start+0xffff7974>
 8027bd4:	0027883a 	mov	r19,zero
 8027bd8:	9cc00c04 	addi	r19,r19,48
 8027bdc:	dcc019c5 	stb	r19,103(sp)
 8027be0:	dd002817 	ldw	r20,160(sp)
 8027be4:	ddc019c4 	addi	r23,sp,103
 8027be8:	003e2c06 	br	802749c <__flash_rwdata_start+0xffff7980>
 8027bec:	9cc03fcc 	andi	r19,r19,255
 8027bf0:	b811883a 	mov	r8,r23
 8027bf4:	9802571e 	bne	r19,zero,8028554 <___vfiprintf_internal_r+0x14c4>
 8027bf8:	18005726 	beq	r3,zero,8027d58 <___vfiprintf_internal_r+0xcc8>
 8027bfc:	04c00044 	movi	r19,1
 8027c00:	d8c01005 	stb	r3,64(sp)
 8027c04:	d8001d85 	stb	zero,118(sp)
 8027c08:	9829883a 	mov	r20,r19
 8027c0c:	ddc01004 	addi	r23,sp,64
 8027c10:	003f0a06 	br	802783c <__flash_rwdata_start+0xffff7d20>
 8027c14:	d9402017 	ldw	r5,128(sp)
 8027c18:	d9002117 	ldw	r4,132(sp)
 8027c1c:	d9801a04 	addi	r6,sp,104
 8027c20:	da802a15 	stw	r10,168(sp)
 8027c24:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027c28:	da802a17 	ldw	r10,168(sp)
 8027c2c:	1000501e 	bne	r2,zero,8027d70 <___vfiprintf_internal_r+0xce0>
 8027c30:	d9801b17 	ldw	r6,108(sp)
 8027c34:	d8801c17 	ldw	r2,112(sp)
 8027c38:	d811883a 	mov	r8,sp
 8027c3c:	31000044 	addi	r4,r6,1
 8027c40:	003e3606 	br	802751c <__flash_rwdata_start+0xffff7a00>
 8027c44:	d9001b17 	ldw	r4,108(sp)
 8027c48:	d8801c17 	ldw	r2,112(sp)
 8027c4c:	21400044 	addi	r5,r4,1
 8027c50:	d9801d87 	ldb	r6,118(sp)
 8027c54:	303e5226 	beq	r6,zero,80275a0 <__flash_rwdata_start+0xffff7a84>
 8027c58:	01800044 	movi	r6,1
 8027c5c:	d9001d84 	addi	r4,sp,118
 8027c60:	1185883a 	add	r2,r2,r6
 8027c64:	41000015 	stw	r4,0(r8)
 8027c68:	41800115 	stw	r6,4(r8)
 8027c6c:	d8801c15 	stw	r2,112(sp)
 8027c70:	d9401b15 	stw	r5,108(sp)
 8027c74:	010001c4 	movi	r4,7
 8027c78:	2140b00e 	bge	r4,r5,8027f3c <___vfiprintf_internal_r+0xeac>
 8027c7c:	1000f61e 	bne	r2,zero,8028058 <___vfiprintf_internal_r+0xfc8>
 8027c80:	3800b31e 	bne	r7,zero,8027f50 <___vfiprintf_internal_r+0xec0>
 8027c84:	0009883a 	mov	r4,zero
 8027c88:	300b883a 	mov	r5,r6
 8027c8c:	d811883a 	mov	r8,sp
 8027c90:	01802004 	movi	r6,128
 8027c94:	19be5226 	beq	r3,r6,80275e0 <__flash_rwdata_start+0xffff7ac4>
 8027c98:	8521c83a 	sub	r16,r16,r20
 8027c9c:	043e790e 	bge	zero,r16,8027684 <__flash_rwdata_start+0xffff7b68>
 8027ca0:	05400404 	movi	r21,16
 8027ca4:	ac01b00e 	bge	r21,r16,8028368 <___vfiprintf_internal_r+0x12d8>
 8027ca8:	01400034 	movhi	r5,0
 8027cac:	29406d04 	addi	r5,r5,436
 8027cb0:	d9402315 	stw	r5,140(sp)
 8027cb4:	070001c4 	movi	fp,7
 8027cb8:	00000506 	br	8027cd0 <___vfiprintf_internal_r+0xc40>
 8027cbc:	21400084 	addi	r5,r4,2
 8027cc0:	42000204 	addi	r8,r8,8
 8027cc4:	1809883a 	mov	r4,r3
 8027cc8:	843ffc04 	addi	r16,r16,-16
 8027ccc:	ac000d0e 	bge	r21,r16,8027d04 <___vfiprintf_internal_r+0xc74>
 8027cd0:	10800404 	addi	r2,r2,16
 8027cd4:	20c00044 	addi	r3,r4,1
 8027cd8:	44800015 	stw	r18,0(r8)
 8027cdc:	45400115 	stw	r21,4(r8)
 8027ce0:	d8801c15 	stw	r2,112(sp)
 8027ce4:	d8c01b15 	stw	r3,108(sp)
 8027ce8:	e0fff40e 	bge	fp,r3,8027cbc <__flash_rwdata_start+0xffff81a0>
 8027cec:	1000101e 	bne	r2,zero,8027d30 <___vfiprintf_internal_r+0xca0>
 8027cf0:	843ffc04 	addi	r16,r16,-16
 8027cf4:	01400044 	movi	r5,1
 8027cf8:	0009883a 	mov	r4,zero
 8027cfc:	d811883a 	mov	r8,sp
 8027d00:	ac3ff316 	blt	r21,r16,8027cd0 <__flash_rwdata_start+0xffff81b4>
 8027d04:	d8c02317 	ldw	r3,140(sp)
 8027d08:	1405883a 	add	r2,r2,r16
 8027d0c:	44000115 	stw	r16,4(r8)
 8027d10:	40c00015 	stw	r3,0(r8)
 8027d14:	d8801c15 	stw	r2,112(sp)
 8027d18:	d9401b15 	stw	r5,108(sp)
 8027d1c:	00c001c4 	movi	r3,7
 8027d20:	19401916 	blt	r3,r5,8027d88 <___vfiprintf_internal_r+0xcf8>
 8027d24:	42000204 	addi	r8,r8,8
 8027d28:	29400044 	addi	r5,r5,1
 8027d2c:	003e5506 	br	8027684 <__flash_rwdata_start+0xffff7b68>
 8027d30:	d9402017 	ldw	r5,128(sp)
 8027d34:	d9002117 	ldw	r4,132(sp)
 8027d38:	d9801a04 	addi	r6,sp,104
 8027d3c:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027d40:	10000b1e 	bne	r2,zero,8027d70 <___vfiprintf_internal_r+0xce0>
 8027d44:	d9001b17 	ldw	r4,108(sp)
 8027d48:	d8801c17 	ldw	r2,112(sp)
 8027d4c:	d811883a 	mov	r8,sp
 8027d50:	21400044 	addi	r5,r4,1
 8027d54:	003fdc06 	br	8027cc8 <__flash_rwdata_start+0xffff81ac>
 8027d58:	d8801c17 	ldw	r2,112(sp)
 8027d5c:	10000426 	beq	r2,zero,8027d70 <___vfiprintf_internal_r+0xce0>
 8027d60:	d9402017 	ldw	r5,128(sp)
 8027d64:	d9002117 	ldw	r4,132(sp)
 8027d68:	d9801a04 	addi	r6,sp,104
 8027d6c:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027d70:	d9402017 	ldw	r5,128(sp)
 8027d74:	2880030b 	ldhu	r2,12(r5)
 8027d78:	1080100c 	andi	r2,r2,64
 8027d7c:	10014d1e 	bne	r2,zero,80282b4 <___vfiprintf_internal_r+0x1224>
 8027d80:	d8802417 	ldw	r2,144(sp)
 8027d84:	003d9706 	br	80273e4 <__flash_rwdata_start+0xffff78c8>
 8027d88:	1000d21e 	bne	r2,zero,80280d4 <___vfiprintf_internal_r+0x1044>
 8027d8c:	00c00044 	movi	r3,1
 8027d90:	a005883a 	mov	r2,r20
 8027d94:	ddc00015 	stw	r23,0(sp)
 8027d98:	dd000115 	stw	r20,4(sp)
 8027d9c:	dd001c15 	stw	r20,112(sp)
 8027da0:	d8c01b15 	stw	r3,108(sp)
 8027da4:	d811883a 	mov	r8,sp
 8027da8:	42000204 	addi	r8,r8,8
 8027dac:	8c40010c 	andi	r17,r17,4
 8027db0:	88004026 	beq	r17,zero,8027eb4 <___vfiprintf_internal_r+0xe24>
 8027db4:	d9002517 	ldw	r4,148(sp)
 8027db8:	24e3c83a 	sub	r17,r4,r19
 8027dbc:	04403d0e 	bge	zero,r17,8027eb4 <___vfiprintf_internal_r+0xe24>
 8027dc0:	04000404 	movi	r16,16
 8027dc4:	8441a90e 	bge	r16,r17,802846c <___vfiprintf_internal_r+0x13dc>
 8027dc8:	00c00034 	movhi	r3,0
 8027dcc:	18c07104 	addi	r3,r3,452
 8027dd0:	d9001b17 	ldw	r4,108(sp)
 8027dd4:	d8c02315 	stw	r3,140(sp)
 8027dd8:	050001c4 	movi	r20,7
 8027ddc:	dd402117 	ldw	r21,132(sp)
 8027de0:	ddc02017 	ldw	r23,128(sp)
 8027de4:	00000506 	br	8027dfc <___vfiprintf_internal_r+0xd6c>
 8027de8:	21400084 	addi	r5,r4,2
 8027dec:	42000204 	addi	r8,r8,8
 8027df0:	1809883a 	mov	r4,r3
 8027df4:	8c7ffc04 	addi	r17,r17,-16
 8027df8:	84400f0e 	bge	r16,r17,8027e38 <___vfiprintf_internal_r+0xda8>
 8027dfc:	01400034 	movhi	r5,0
 8027e00:	10800404 	addi	r2,r2,16
 8027e04:	20c00044 	addi	r3,r4,1
 8027e08:	29407104 	addi	r5,r5,452
 8027e0c:	41400015 	stw	r5,0(r8)
 8027e10:	44000115 	stw	r16,4(r8)
 8027e14:	d8801c15 	stw	r2,112(sp)
 8027e18:	d8c01b15 	stw	r3,108(sp)
 8027e1c:	a0fff20e 	bge	r20,r3,8027de8 <__flash_rwdata_start+0xffff82cc>
 8027e20:	1000141e 	bne	r2,zero,8027e74 <___vfiprintf_internal_r+0xde4>
 8027e24:	8c7ffc04 	addi	r17,r17,-16
 8027e28:	01400044 	movi	r5,1
 8027e2c:	0009883a 	mov	r4,zero
 8027e30:	d811883a 	mov	r8,sp
 8027e34:	847ff116 	blt	r16,r17,8027dfc <__flash_rwdata_start+0xffff82e0>
 8027e38:	d8c02317 	ldw	r3,140(sp)
 8027e3c:	1445883a 	add	r2,r2,r17
 8027e40:	44400115 	stw	r17,4(r8)
 8027e44:	40c00015 	stw	r3,0(r8)
 8027e48:	d8801c15 	stw	r2,112(sp)
 8027e4c:	d9401b15 	stw	r5,108(sp)
 8027e50:	00c001c4 	movi	r3,7
 8027e54:	1940170e 	bge	r3,r5,8027eb4 <___vfiprintf_internal_r+0xe24>
 8027e58:	1000101e 	bne	r2,zero,8027e9c <___vfiprintf_internal_r+0xe0c>
 8027e5c:	d8802517 	ldw	r2,148(sp)
 8027e60:	14c11616 	blt	r2,r19,80282bc <___vfiprintf_internal_r+0x122c>
 8027e64:	d9002417 	ldw	r4,144(sp)
 8027e68:	2089883a 	add	r4,r4,r2
 8027e6c:	d9002415 	stw	r4,144(sp)
 8027e70:	003e1806 	br	80276d4 <__flash_rwdata_start+0xffff7bb8>
 8027e74:	d9801a04 	addi	r6,sp,104
 8027e78:	b80b883a 	mov	r5,r23
 8027e7c:	a809883a 	mov	r4,r21
 8027e80:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027e84:	103fba1e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 8027e88:	d9001b17 	ldw	r4,108(sp)
 8027e8c:	d8801c17 	ldw	r2,112(sp)
 8027e90:	d811883a 	mov	r8,sp
 8027e94:	21400044 	addi	r5,r4,1
 8027e98:	003fd606 	br	8027df4 <__flash_rwdata_start+0xffff82d8>
 8027e9c:	d9402017 	ldw	r5,128(sp)
 8027ea0:	d9002117 	ldw	r4,132(sp)
 8027ea4:	d9801a04 	addi	r6,sp,104
 8027ea8:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027eac:	103fb01e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 8027eb0:	d8801c17 	ldw	r2,112(sp)
 8027eb4:	d8c02517 	ldw	r3,148(sp)
 8027eb8:	1cc0010e 	bge	r3,r19,8027ec0 <___vfiprintf_internal_r+0xe30>
 8027ebc:	9807883a 	mov	r3,r19
 8027ec0:	d9002417 	ldw	r4,144(sp)
 8027ec4:	20c9883a 	add	r4,r4,r3
 8027ec8:	d9002415 	stw	r4,144(sp)
 8027ecc:	103e0126 	beq	r2,zero,80276d4 <__flash_rwdata_start+0xffff7bb8>
 8027ed0:	d9402017 	ldw	r5,128(sp)
 8027ed4:	d9002117 	ldw	r4,132(sp)
 8027ed8:	d9801a04 	addi	r6,sp,104
 8027edc:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027ee0:	103dfc26 	beq	r2,zero,80276d4 <__flash_rwdata_start+0xffff7bb8>
 8027ee4:	003fa206 	br	8027d70 <__flash_rwdata_start+0xffff8254>
 8027ee8:	d9402017 	ldw	r5,128(sp)
 8027eec:	d9002117 	ldw	r4,132(sp)
 8027ef0:	d9801a04 	addi	r6,sp,104
 8027ef4:	d9c02b15 	stw	r7,172(sp)
 8027ef8:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8027efc:	d9c02b17 	ldw	r7,172(sp)
 8027f00:	103f9b1e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 8027f04:	d9001b17 	ldw	r4,108(sp)
 8027f08:	d8801c17 	ldw	r2,112(sp)
 8027f0c:	d811883a 	mov	r8,sp
 8027f10:	21800044 	addi	r6,r4,1
 8027f14:	003dbf06 	br	8027614 <__flash_rwdata_start+0xffff7af8>
 8027f18:	1000d81e 	bne	r2,zero,802827c <___vfiprintf_internal_r+0x11ec>
 8027f1c:	d9001d87 	ldb	r4,118(sp)
 8027f20:	20000a26 	beq	r4,zero,8027f4c <___vfiprintf_internal_r+0xebc>
 8027f24:	00800044 	movi	r2,1
 8027f28:	d9001d84 	addi	r4,sp,118
 8027f2c:	100b883a 	mov	r5,r2
 8027f30:	d9000015 	stw	r4,0(sp)
 8027f34:	d8800115 	stw	r2,4(sp)
 8027f38:	d811883a 	mov	r8,sp
 8027f3c:	2809883a 	mov	r4,r5
 8027f40:	42000204 	addi	r8,r8,8
 8027f44:	29400044 	addi	r5,r5,1
 8027f48:	003d9506 	br	80275a0 <__flash_rwdata_start+0xffff7a84>
 8027f4c:	3800fd26 	beq	r7,zero,8028344 <___vfiprintf_internal_r+0x12b4>
 8027f50:	00800084 	movi	r2,2
 8027f54:	d9001d04 	addi	r4,sp,116
 8027f58:	d9000015 	stw	r4,0(sp)
 8027f5c:	d8800115 	stw	r2,4(sp)
 8027f60:	01400044 	movi	r5,1
 8027f64:	d811883a 	mov	r8,sp
 8027f68:	2809883a 	mov	r4,r5
 8027f6c:	42000204 	addi	r8,r8,8
 8027f70:	29400044 	addi	r5,r5,1
 8027f74:	003f4606 	br	8027c90 <__flash_rwdata_start+0xffff8174>
 8027f78:	d8802517 	ldw	r2,148(sp)
 8027f7c:	14c0010e 	bge	r2,r19,8027f84 <___vfiprintf_internal_r+0xef4>
 8027f80:	9805883a 	mov	r2,r19
 8027f84:	d9402417 	ldw	r5,144(sp)
 8027f88:	288b883a 	add	r5,r5,r2
 8027f8c:	d9402415 	stw	r5,144(sp)
 8027f90:	003dd006 	br	80276d4 <__flash_rwdata_start+0xffff7bb8>
 8027f94:	d8001d85 	stb	zero,118(sp)
 8027f98:	80005d16 	blt	r16,zero,8028110 <___vfiprintf_internal_r+0x1080>
 8027f9c:	00ffdfc4 	movi	r3,-129
 8027fa0:	9d04b03a 	or	r2,r19,r20
 8027fa4:	88e2703a 	and	r17,r17,r3
 8027fa8:	103d3726 	beq	r2,zero,8027488 <__flash_rwdata_start+0xffff796c>
 8027fac:	002b883a 	mov	r21,zero
 8027fb0:	d9002617 	ldw	r4,152(sp)
 8027fb4:	ddc01a04 	addi	r23,sp,104
 8027fb8:	988003cc 	andi	r2,r19,15
 8027fbc:	a006973a 	slli	r3,r20,28
 8027fc0:	2085883a 	add	r2,r4,r2
 8027fc4:	9826d13a 	srli	r19,r19,4
 8027fc8:	10800003 	ldbu	r2,0(r2)
 8027fcc:	a028d13a 	srli	r20,r20,4
 8027fd0:	bdffffc4 	addi	r23,r23,-1
 8027fd4:	1ce6b03a 	or	r19,r3,r19
 8027fd8:	b8800005 	stb	r2,0(r23)
 8027fdc:	9d04b03a 	or	r2,r19,r20
 8027fe0:	103ff51e 	bne	r2,zero,8027fb8 <__flash_rwdata_start+0xffff849c>
 8027fe4:	d8801e17 	ldw	r2,120(sp)
 8027fe8:	15e9c83a 	sub	r20,r2,r23
 8027fec:	003d2b06 	br	802749c <__flash_rwdata_start+0xffff7980>
 8027ff0:	d9402017 	ldw	r5,128(sp)
 8027ff4:	d9002117 	ldw	r4,132(sp)
 8027ff8:	d9801a04 	addi	r6,sp,104
 8027ffc:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8028000:	103f5b1e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 8028004:	d8801c17 	ldw	r2,112(sp)
 8028008:	d811883a 	mov	r8,sp
 802800c:	003f6706 	br	8027dac <__flash_rwdata_start+0xffff8290>
 8028010:	d9402017 	ldw	r5,128(sp)
 8028014:	d9002117 	ldw	r4,132(sp)
 8028018:	d9801a04 	addi	r6,sp,104
 802801c:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8028020:	103f531e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 8028024:	d811883a 	mov	r8,sp
 8028028:	003cd906 	br	8027390 <__flash_rwdata_start+0xffff7874>
 802802c:	10803fcc 	andi	r2,r2,255
 8028030:	1080201c 	xori	r2,r2,128
 8028034:	10bfe004 	addi	r2,r2,-128
 8028038:	00c00c04 	movi	r3,48
 802803c:	10ffe926 	beq	r2,r3,8027fe4 <__flash_rwdata_start+0xffff84c8>
 8028040:	b8ffffc5 	stb	r3,-1(r23)
 8028044:	d8c01e17 	ldw	r3,120(sp)
 8028048:	b8bfffc4 	addi	r2,r23,-1
 802804c:	102f883a 	mov	r23,r2
 8028050:	18a9c83a 	sub	r20,r3,r2
 8028054:	003d1106 	br	802749c <__flash_rwdata_start+0xffff7980>
 8028058:	d9402017 	ldw	r5,128(sp)
 802805c:	d9002117 	ldw	r4,132(sp)
 8028060:	d9801a04 	addi	r6,sp,104
 8028064:	d8c02a15 	stw	r3,168(sp)
 8028068:	d9c02b15 	stw	r7,172(sp)
 802806c:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8028070:	d8c02a17 	ldw	r3,168(sp)
 8028074:	d9c02b17 	ldw	r7,172(sp)
 8028078:	103f3d1e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 802807c:	d9001b17 	ldw	r4,108(sp)
 8028080:	d8801c17 	ldw	r2,112(sp)
 8028084:	d811883a 	mov	r8,sp
 8028088:	21400044 	addi	r5,r4,1
 802808c:	003d4406 	br	80275a0 <__flash_rwdata_start+0xffff7a84>
 8028090:	d9402017 	ldw	r5,128(sp)
 8028094:	d9002117 	ldw	r4,132(sp)
 8028098:	d9801a04 	addi	r6,sp,104
 802809c:	d8c02a15 	stw	r3,168(sp)
 80280a0:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 80280a4:	d8c02a17 	ldw	r3,168(sp)
 80280a8:	103f311e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 80280ac:	d9001b17 	ldw	r4,108(sp)
 80280b0:	d8801c17 	ldw	r2,112(sp)
 80280b4:	d811883a 	mov	r8,sp
 80280b8:	21400044 	addi	r5,r4,1
 80280bc:	003ef406 	br	8027c90 <__flash_rwdata_start+0xffff8174>
 80280c0:	1000bd1e 	bne	r2,zero,80283b8 <___vfiprintf_internal_r+0x1328>
 80280c4:	01400044 	movi	r5,1
 80280c8:	0009883a 	mov	r4,zero
 80280cc:	d811883a 	mov	r8,sp
 80280d0:	003ef106 	br	8027c98 <__flash_rwdata_start+0xffff817c>
 80280d4:	d9402017 	ldw	r5,128(sp)
 80280d8:	d9002117 	ldw	r4,132(sp)
 80280dc:	d9801a04 	addi	r6,sp,104
 80280e0:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 80280e4:	103f221e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 80280e8:	d9401b17 	ldw	r5,108(sp)
 80280ec:	d8801c17 	ldw	r2,112(sp)
 80280f0:	d811883a 	mov	r8,sp
 80280f4:	29400044 	addi	r5,r5,1
 80280f8:	003d6206 	br	8027684 <__flash_rwdata_start+0xffff7b68>
 80280fc:	01400034 	movhi	r5,0
 8028100:	29400c04 	addi	r5,r5,48
 8028104:	d9402615 	stw	r5,152(sp)
 8028108:	d8c02215 	stw	r3,136(sp)
 802810c:	1023883a 	mov	r17,r2
 8028110:	9d04b03a 	or	r2,r19,r20
 8028114:	103fa51e 	bne	r2,zero,8027fac <__flash_rwdata_start+0xffff8490>
 8028118:	002b883a 	mov	r21,zero
 802811c:	00800084 	movi	r2,2
 8028120:	003e4a06 	br	8027a4c <__flash_rwdata_start+0xffff7f30>
 8028124:	01400034 	movhi	r5,0
 8028128:	29400c04 	addi	r5,r5,48
 802812c:	002b883a 	mov	r21,zero
 8028130:	d9402615 	stw	r5,152(sp)
 8028134:	003f9e06 	br	8027fb0 <__flash_rwdata_start+0xffff8494>
 8028138:	d9402217 	ldw	r5,136(sp)
 802813c:	d8001d85 	stb	zero,118(sp)
 8028140:	0029883a 	mov	r20,zero
 8028144:	28800104 	addi	r2,r5,4
 8028148:	2cc00017 	ldw	r19,0(r5)
 802814c:	803e3a16 	blt	r16,zero,8027a38 <__flash_rwdata_start+0xffff7f1c>
 8028150:	00ffdfc4 	movi	r3,-129
 8028154:	d8802215 	stw	r2,136(sp)
 8028158:	88e2703a 	and	r17,r17,r3
 802815c:	002b883a 	mov	r21,zero
 8028160:	983e9b26 	beq	r19,zero,8027bd0 <__flash_rwdata_start+0xffff80b4>
 8028164:	00800244 	movi	r2,9
 8028168:	14fdc936 	bltu	r2,r19,8027890 <__flash_rwdata_start+0xffff7d74>
 802816c:	003e9a06 	br	8027bd8 <__flash_rwdata_start+0xffff80bc>
 8028170:	00800c04 	movi	r2,48
 8028174:	d8c01d45 	stb	r3,117(sp)
 8028178:	d8801d05 	stb	r2,116(sp)
 802817c:	d8001d85 	stb	zero,118(sp)
 8028180:	88c00094 	ori	r3,r17,2
 8028184:	80009c16 	blt	r16,zero,80283f8 <___vfiprintf_internal_r+0x1368>
 8028188:	00bfdfc4 	movi	r2,-129
 802818c:	88a2703a 	and	r17,r17,r2
 8028190:	8c400094 	ori	r17,r17,2
 8028194:	002b883a 	mov	r21,zero
 8028198:	003f8506 	br	8027fb0 <__flash_rwdata_start+0xffff8494>
 802819c:	b029883a 	mov	r20,r22
 80281a0:	003c0b06 	br	80271d0 <__flash_rwdata_start+0xffff76b4>
 80281a4:	04e7c83a 	sub	r19,zero,r19
 80281a8:	05400b44 	movi	r21,45
 80281ac:	9804c03a 	cmpne	r2,r19,zero
 80281b0:	0529c83a 	sub	r20,zero,r20
 80281b4:	dd401d85 	stb	r21,118(sp)
 80281b8:	a0a9c83a 	sub	r20,r20,r2
 80281bc:	80009716 	blt	r16,zero,802841c <___vfiprintf_internal_r+0x138c>
 80281c0:	00bfdfc4 	movi	r2,-129
 80281c4:	88a2703a 	and	r17,r17,r2
 80281c8:	003db006 	br	802788c <__flash_rwdata_start+0xffff7d70>
 80281cc:	b0c00007 	ldb	r3,0(r22)
 80281d0:	003c0c06 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 80281d4:	8880100c 	andi	r2,r17,64
 80281d8:	d8001d85 	stb	zero,118(sp)
 80281dc:	1000461e 	bne	r2,zero,80282f8 <___vfiprintf_internal_r+0x1268>
 80281e0:	d9002217 	ldw	r4,136(sp)
 80281e4:	0029883a 	mov	r20,zero
 80281e8:	20800104 	addi	r2,r4,4
 80281ec:	24c00017 	ldw	r19,0(r4)
 80281f0:	803df80e 	bge	r16,zero,80279d4 <__flash_rwdata_start+0xffff7eb8>
 80281f4:	9d06b03a 	or	r3,r19,r20
 80281f8:	d8802215 	stw	r2,136(sp)
 80281fc:	183d5e1e 	bne	r3,zero,8027778 <__flash_rwdata_start+0xffff7c5c>
 8028200:	002b883a 	mov	r21,zero
 8028204:	0005883a 	mov	r2,zero
 8028208:	003e1006 	br	8027a4c <__flash_rwdata_start+0xffff7f30>
 802820c:	8880040c 	andi	r2,r17,16
 8028210:	1000321e 	bne	r2,zero,80282dc <___vfiprintf_internal_r+0x124c>
 8028214:	8c40100c 	andi	r17,r17,64
 8028218:	88008d26 	beq	r17,zero,8028450 <___vfiprintf_internal_r+0x13c0>
 802821c:	d9402217 	ldw	r5,136(sp)
 8028220:	d8c02417 	ldw	r3,144(sp)
 8028224:	28800017 	ldw	r2,0(r5)
 8028228:	29400104 	addi	r5,r5,4
 802822c:	d9402215 	stw	r5,136(sp)
 8028230:	10c0000d 	sth	r3,0(r2)
 8028234:	003bca06 	br	8027160 <__flash_rwdata_start+0xffff7644>
 8028238:	8880100c 	andi	r2,r17,64
 802823c:	10003a26 	beq	r2,zero,8028328 <___vfiprintf_internal_r+0x1298>
 8028240:	d8802217 	ldw	r2,136(sp)
 8028244:	14c0000f 	ldh	r19,0(r2)
 8028248:	10800104 	addi	r2,r2,4
 802824c:	d8802215 	stw	r2,136(sp)
 8028250:	9829d7fa 	srai	r20,r19,31
 8028254:	a005883a 	mov	r2,r20
 8028258:	003d8506 	br	8027870 <__flash_rwdata_start+0xffff7d54>
 802825c:	8880100c 	andi	r2,r17,64
 8028260:	10002b26 	beq	r2,zero,8028310 <___vfiprintf_internal_r+0x1280>
 8028264:	d8802217 	ldw	r2,136(sp)
 8028268:	0029883a 	mov	r20,zero
 802826c:	14c0000b 	ldhu	r19,0(r2)
 8028270:	10800104 	addi	r2,r2,4
 8028274:	d8802215 	stw	r2,136(sp)
 8028278:	003d5d06 	br	80277f0 <__flash_rwdata_start+0xffff7cd4>
 802827c:	d9402017 	ldw	r5,128(sp)
 8028280:	d9002117 	ldw	r4,132(sp)
 8028284:	d9801a04 	addi	r6,sp,104
 8028288:	d8c02a15 	stw	r3,168(sp)
 802828c:	d9c02b15 	stw	r7,172(sp)
 8028290:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 8028294:	d8c02a17 	ldw	r3,168(sp)
 8028298:	d9c02b17 	ldw	r7,172(sp)
 802829c:	103eb41e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 80282a0:	d9001b17 	ldw	r4,108(sp)
 80282a4:	d8801c17 	ldw	r2,112(sp)
 80282a8:	d811883a 	mov	r8,sp
 80282ac:	21400044 	addi	r5,r4,1
 80282b0:	003e6706 	br	8027c50 <__flash_rwdata_start+0xffff8134>
 80282b4:	00bfffc4 	movi	r2,-1
 80282b8:	003c4a06 	br	80273e4 <__flash_rwdata_start+0xffff78c8>
 80282bc:	9805883a 	mov	r2,r19
 80282c0:	003ee806 	br	8027e64 <__flash_rwdata_start+0xffff8348>
 80282c4:	d8c02217 	ldw	r3,136(sp)
 80282c8:	0029883a 	mov	r20,zero
 80282cc:	18800104 	addi	r2,r3,4
 80282d0:	1cc0000b 	ldhu	r19,0(r3)
 80282d4:	803f9e0e 	bge	r16,zero,8028150 <__flash_rwdata_start+0xffff8634>
 80282d8:	003dd706 	br	8027a38 <__flash_rwdata_start+0xffff7f1c>
 80282dc:	d8c02217 	ldw	r3,136(sp)
 80282e0:	d9002417 	ldw	r4,144(sp)
 80282e4:	18800017 	ldw	r2,0(r3)
 80282e8:	18c00104 	addi	r3,r3,4
 80282ec:	d8c02215 	stw	r3,136(sp)
 80282f0:	11000015 	stw	r4,0(r2)
 80282f4:	003b9a06 	br	8027160 <__flash_rwdata_start+0xffff7644>
 80282f8:	d8c02217 	ldw	r3,136(sp)
 80282fc:	0029883a 	mov	r20,zero
 8028300:	18800104 	addi	r2,r3,4
 8028304:	1cc0000b 	ldhu	r19,0(r3)
 8028308:	803db20e 	bge	r16,zero,80279d4 <__flash_rwdata_start+0xffff7eb8>
 802830c:	003fb906 	br	80281f4 <__flash_rwdata_start+0xffff86d8>
 8028310:	d9002217 	ldw	r4,136(sp)
 8028314:	0029883a 	mov	r20,zero
 8028318:	24c00017 	ldw	r19,0(r4)
 802831c:	21000104 	addi	r4,r4,4
 8028320:	d9002215 	stw	r4,136(sp)
 8028324:	003d3206 	br	80277f0 <__flash_rwdata_start+0xffff7cd4>
 8028328:	d8c02217 	ldw	r3,136(sp)
 802832c:	1cc00017 	ldw	r19,0(r3)
 8028330:	18c00104 	addi	r3,r3,4
 8028334:	d8c02215 	stw	r3,136(sp)
 8028338:	9829d7fa 	srai	r20,r19,31
 802833c:	a005883a 	mov	r2,r20
 8028340:	003d4b06 	br	8027870 <__flash_rwdata_start+0xffff7d54>
 8028344:	0009883a 	mov	r4,zero
 8028348:	01400044 	movi	r5,1
 802834c:	d811883a 	mov	r8,sp
 8028350:	003e4f06 	br	8027c90 <__flash_rwdata_start+0xffff8174>
 8028354:	d8c02215 	stw	r3,136(sp)
 8028358:	002b883a 	mov	r21,zero
 802835c:	003db806 	br	8027a40 <__flash_rwdata_start+0xffff7f24>
 8028360:	d811883a 	mov	r8,sp
 8028364:	003e9606 	br	8027dc0 <__flash_rwdata_start+0xffff82a4>
 8028368:	01000034 	movhi	r4,0
 802836c:	21006d04 	addi	r4,r4,436
 8028370:	d9002315 	stw	r4,140(sp)
 8028374:	003e6306 	br	8027d04 <__flash_rwdata_start+0xffff81e8>
 8028378:	b0c00043 	ldbu	r3,1(r22)
 802837c:	8c400814 	ori	r17,r17,32
 8028380:	b5800044 	addi	r22,r22,1
 8028384:	18c03fcc 	andi	r3,r3,255
 8028388:	18c0201c 	xori	r3,r3,128
 802838c:	18ffe004 	addi	r3,r3,-128
 8028390:	003b9c06 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8028394:	b809883a 	mov	r4,r23
 8028398:	da002a15 	stw	r8,168(sp)
 802839c:	8026ee40 	call	8026ee4 <strlen>
 80283a0:	1029883a 	mov	r20,r2
 80283a4:	dd401d83 	ldbu	r21,118(sp)
 80283a8:	df002215 	stw	fp,136(sp)
 80283ac:	0021883a 	mov	r16,zero
 80283b0:	da002a17 	ldw	r8,168(sp)
 80283b4:	003c3906 	br	802749c <__flash_rwdata_start+0xffff7980>
 80283b8:	d9402017 	ldw	r5,128(sp)
 80283bc:	d9002117 	ldw	r4,132(sp)
 80283c0:	d9801a04 	addi	r6,sp,104
 80283c4:	8026f7c0 	call	8026f7c <__sprint_r.part.0>
 80283c8:	103e691e 	bne	r2,zero,8027d70 <__flash_rwdata_start+0xffff8254>
 80283cc:	d9001b17 	ldw	r4,108(sp)
 80283d0:	d8801c17 	ldw	r2,112(sp)
 80283d4:	d811883a 	mov	r8,sp
 80283d8:	21400044 	addi	r5,r4,1
 80283dc:	003e2e06 	br	8027c98 <__flash_rwdata_start+0xffff817c>
 80283e0:	01000034 	movhi	r4,0
 80283e4:	21007104 	addi	r4,r4,452
 80283e8:	d9002315 	stw	r4,140(sp)
 80283ec:	d9001b17 	ldw	r4,108(sp)
 80283f0:	21000044 	addi	r4,r4,1
 80283f4:	003c5e06 	br	8027570 <__flash_rwdata_start+0xffff7a54>
 80283f8:	002b883a 	mov	r21,zero
 80283fc:	00800084 	movi	r2,2
 8028400:	10803fcc 	andi	r2,r2,255
 8028404:	01000044 	movi	r4,1
 8028408:	11002b26 	beq	r2,r4,80284b8 <___vfiprintf_internal_r+0x1428>
 802840c:	01000084 	movi	r4,2
 8028410:	11002b1e 	bne	r2,r4,80284c0 <___vfiprintf_internal_r+0x1430>
 8028414:	1823883a 	mov	r17,r3
 8028418:	003ee506 	br	8027fb0 <__flash_rwdata_start+0xffff8494>
 802841c:	8807883a 	mov	r3,r17
 8028420:	00800044 	movi	r2,1
 8028424:	003ff606 	br	8028400 <__flash_rwdata_start+0xffff88e4>
 8028428:	00800184 	movi	r2,6
 802842c:	1400012e 	bgeu	r2,r16,8028434 <___vfiprintf_internal_r+0x13a4>
 8028430:	1021883a 	mov	r16,r2
 8028434:	8029883a 	mov	r20,r16
 8028438:	8027883a 	mov	r19,r16
 802843c:	80002216 	blt	r16,zero,80284c8 <___vfiprintf_internal_r+0x1438>
 8028440:	05c00034 	movhi	r23,0
 8028444:	df002215 	stw	fp,136(sp)
 8028448:	bdc01104 	addi	r23,r23,68
 802844c:	003cfb06 	br	802783c <__flash_rwdata_start+0xffff7d20>
 8028450:	d9002217 	ldw	r4,136(sp)
 8028454:	d9402417 	ldw	r5,144(sp)
 8028458:	20800017 	ldw	r2,0(r4)
 802845c:	21000104 	addi	r4,r4,4
 8028460:	d9002215 	stw	r4,136(sp)
 8028464:	11400015 	stw	r5,0(r2)
 8028468:	003b3d06 	br	8027160 <__flash_rwdata_start+0xffff7644>
 802846c:	01400034 	movhi	r5,0
 8028470:	29407104 	addi	r5,r5,452
 8028474:	d9402315 	stw	r5,140(sp)
 8028478:	d9401b17 	ldw	r5,108(sp)
 802847c:	29400044 	addi	r5,r5,1
 8028480:	003e6d06 	br	8027e38 <__flash_rwdata_start+0xffff831c>
 8028484:	8029883a 	mov	r20,r16
 8028488:	dd401d83 	ldbu	r21,118(sp)
 802848c:	df002215 	stw	fp,136(sp)
 8028490:	0021883a 	mov	r16,zero
 8028494:	003c0106 	br	802749c <__flash_rwdata_start+0xffff7980>
 8028498:	00c00034 	movhi	r3,0
 802849c:	18c06d04 	addi	r3,r3,436
 80284a0:	d8c02315 	stw	r3,140(sp)
 80284a4:	280d883a 	mov	r6,r5
 80284a8:	003c6906 	br	8027650 <__flash_rwdata_start+0xffff7b34>
 80284ac:	802d883a 	mov	r22,r16
 80284b0:	0021883a 	mov	r16,zero
 80284b4:	003b5406 	br	8027208 <__flash_rwdata_start+0xffff76ec>
 80284b8:	1823883a 	mov	r17,r3
 80284bc:	003cf306 	br	802788c <__flash_rwdata_start+0xffff7d70>
 80284c0:	1823883a 	mov	r17,r3
 80284c4:	003cad06 	br	802777c <__flash_rwdata_start+0xffff7c60>
 80284c8:	0027883a 	mov	r19,zero
 80284cc:	003fdc06 	br	8028440 <__flash_rwdata_start+0xffff8924>
 80284d0:	d9402217 	ldw	r5,136(sp)
 80284d4:	8005883a 	mov	r2,r16
 80284d8:	b0c00043 	ldbu	r3,1(r22)
 80284dc:	2c000017 	ldw	r16,0(r5)
 80284e0:	29000104 	addi	r4,r5,4
 80284e4:	d9002215 	stw	r4,136(sp)
 80284e8:	102d883a 	mov	r22,r2
 80284ec:	803fa50e 	bge	r16,zero,8028384 <__flash_rwdata_start+0xffff8868>
 80284f0:	18c03fcc 	andi	r3,r3,255
 80284f4:	18c0201c 	xori	r3,r3,128
 80284f8:	043fffc4 	movi	r16,-1
 80284fc:	18ffe004 	addi	r3,r3,-128
 8028500:	003b4006 	br	8027204 <__flash_rwdata_start+0xffff76e8>
 8028504:	d9402303 	ldbu	r5,140(sp)
 8028508:	d9401d85 	stb	r5,118(sp)
 802850c:	003cae06 	br	80277c8 <__flash_rwdata_start+0xffff7cac>
 8028510:	d8c02303 	ldbu	r3,140(sp)
 8028514:	d8c01d85 	stb	r3,118(sp)
 8028518:	003d1406 	br	802796c <__flash_rwdata_start+0xffff7e50>
 802851c:	d8c02303 	ldbu	r3,140(sp)
 8028520:	d8c01d85 	stb	r3,118(sp)
 8028524:	003cca06 	br	8027850 <__flash_rwdata_start+0xffff7d34>
 8028528:	8880004c 	andi	r2,r17,1
 802852c:	002b883a 	mov	r21,zero
 8028530:	10000526 	beq	r2,zero,8028548 <___vfiprintf_internal_r+0x14b8>
 8028534:	00800c04 	movi	r2,48
 8028538:	d88019c5 	stb	r2,103(sp)
 802853c:	dd002817 	ldw	r20,160(sp)
 8028540:	ddc019c4 	addi	r23,sp,103
 8028544:	003bd506 	br	802749c <__flash_rwdata_start+0xffff7980>
 8028548:	0029883a 	mov	r20,zero
 802854c:	ddc01a04 	addi	r23,sp,104
 8028550:	003bd206 	br	802749c <__flash_rwdata_start+0xffff7980>
 8028554:	d9002303 	ldbu	r4,140(sp)
 8028558:	d9001d85 	stb	r4,118(sp)
 802855c:	003da606 	br	8027bf8 <__flash_rwdata_start+0xffff80dc>
 8028560:	d8c02303 	ldbu	r3,140(sp)
 8028564:	d8c01d85 	stb	r3,118(sp)
 8028568:	003c7606 	br	8027744 <__flash_rwdata_start+0xffff7c28>
 802856c:	d8c02303 	ldbu	r3,140(sp)
 8028570:	d8c01d85 	stb	r3,118(sp)
 8028574:	003c6506 	br	802770c <__flash_rwdata_start+0xffff7bf0>
 8028578:	d9002303 	ldbu	r4,140(sp)
 802857c:	d9001d85 	stb	r4,118(sp)
 8028580:	003d3d06 	br	8027a78 <__flash_rwdata_start+0xffff7f5c>
 8028584:	d8c02303 	ldbu	r3,140(sp)
 8028588:	d8c01d85 	stb	r3,118(sp)
 802858c:	003d1d06 	br	8027a04 <__flash_rwdata_start+0xffff7ee8>
 8028590:	d8c02303 	ldbu	r3,140(sp)
 8028594:	d8c01d85 	stb	r3,118(sp)
 8028598:	003d0306 	br	80279a8 <__flash_rwdata_start+0xffff7e8c>

0802859c <__vfiprintf_internal>:
 802859c:	00800034 	movhi	r2,0
 80285a0:	10876c04 	addi	r2,r2,7600
 80285a4:	300f883a 	mov	r7,r6
 80285a8:	280d883a 	mov	r6,r5
 80285ac:	200b883a 	mov	r5,r4
 80285b0:	11000017 	ldw	r4,0(r2)
 80285b4:	80270901 	jmpi	8027090 <___vfiprintf_internal_r>

080285b8 <__sbprintf>:
 80285b8:	2880030b 	ldhu	r2,12(r5)
 80285bc:	2ac01917 	ldw	r11,100(r5)
 80285c0:	2a80038b 	ldhu	r10,14(r5)
 80285c4:	2a400717 	ldw	r9,28(r5)
 80285c8:	2a000917 	ldw	r8,36(r5)
 80285cc:	defee204 	addi	sp,sp,-1144
 80285d0:	00c10004 	movi	r3,1024
 80285d4:	dc011a15 	stw	r16,1128(sp)
 80285d8:	10bfff4c 	andi	r2,r2,65533
 80285dc:	2821883a 	mov	r16,r5
 80285e0:	d8cb883a 	add	r5,sp,r3
 80285e4:	dc811c15 	stw	r18,1136(sp)
 80285e8:	dc411b15 	stw	r17,1132(sp)
 80285ec:	dfc11d15 	stw	ra,1140(sp)
 80285f0:	2025883a 	mov	r18,r4
 80285f4:	d881030d 	sth	r2,1036(sp)
 80285f8:	dac11915 	stw	r11,1124(sp)
 80285fc:	da81038d 	sth	r10,1038(sp)
 8028600:	da410715 	stw	r9,1052(sp)
 8028604:	da010915 	stw	r8,1060(sp)
 8028608:	dec10015 	stw	sp,1024(sp)
 802860c:	dec10415 	stw	sp,1040(sp)
 8028610:	d8c10215 	stw	r3,1032(sp)
 8028614:	d8c10515 	stw	r3,1044(sp)
 8028618:	d8010615 	stw	zero,1048(sp)
 802861c:	80270900 	call	8027090 <___vfiprintf_internal_r>
 8028620:	1023883a 	mov	r17,r2
 8028624:	10000416 	blt	r2,zero,8028638 <__sbprintf+0x80>
 8028628:	d9410004 	addi	r5,sp,1024
 802862c:	9009883a 	mov	r4,r18
 8028630:	802435c0 	call	802435c <_fflush_r>
 8028634:	10000d1e 	bne	r2,zero,802866c <__sbprintf+0xb4>
 8028638:	d881030b 	ldhu	r2,1036(sp)
 802863c:	1080100c 	andi	r2,r2,64
 8028640:	10000326 	beq	r2,zero,8028650 <__sbprintf+0x98>
 8028644:	8080030b 	ldhu	r2,12(r16)
 8028648:	10801014 	ori	r2,r2,64
 802864c:	8080030d 	sth	r2,12(r16)
 8028650:	8805883a 	mov	r2,r17
 8028654:	dfc11d17 	ldw	ra,1140(sp)
 8028658:	dc811c17 	ldw	r18,1136(sp)
 802865c:	dc411b17 	ldw	r17,1132(sp)
 8028660:	dc011a17 	ldw	r16,1128(sp)
 8028664:	dec11e04 	addi	sp,sp,1144
 8028668:	f800283a 	ret
 802866c:	047fffc4 	movi	r17,-1
 8028670:	003ff106 	br	8028638 <__flash_rwdata_start+0xffff8b1c>

08028674 <_write_r>:
 8028674:	defffd04 	addi	sp,sp,-12
 8028678:	2805883a 	mov	r2,r5
 802867c:	dc000015 	stw	r16,0(sp)
 8028680:	04000034 	movhi	r16,0
 8028684:	dc400115 	stw	r17,4(sp)
 8028688:	300b883a 	mov	r5,r6
 802868c:	84078104 	addi	r16,r16,7684
 8028690:	2023883a 	mov	r17,r4
 8028694:	380d883a 	mov	r6,r7
 8028698:	1009883a 	mov	r4,r2
 802869c:	dfc00215 	stw	ra,8(sp)
 80286a0:	80000015 	stw	zero,0(r16)
 80286a4:	802da1c0 	call	802da1c <write>
 80286a8:	00ffffc4 	movi	r3,-1
 80286ac:	10c00526 	beq	r2,r3,80286c4 <_write_r+0x50>
 80286b0:	dfc00217 	ldw	ra,8(sp)
 80286b4:	dc400117 	ldw	r17,4(sp)
 80286b8:	dc000017 	ldw	r16,0(sp)
 80286bc:	dec00304 	addi	sp,sp,12
 80286c0:	f800283a 	ret
 80286c4:	80c00017 	ldw	r3,0(r16)
 80286c8:	183ff926 	beq	r3,zero,80286b0 <__flash_rwdata_start+0xffff8b94>
 80286cc:	88c00015 	stw	r3,0(r17)
 80286d0:	003ff706 	br	80286b0 <__flash_rwdata_start+0xffff8b94>

080286d4 <_close_r>:
 80286d4:	defffd04 	addi	sp,sp,-12
 80286d8:	dc000015 	stw	r16,0(sp)
 80286dc:	04000034 	movhi	r16,0
 80286e0:	dc400115 	stw	r17,4(sp)
 80286e4:	84078104 	addi	r16,r16,7684
 80286e8:	2023883a 	mov	r17,r4
 80286ec:	2809883a 	mov	r4,r5
 80286f0:	dfc00215 	stw	ra,8(sp)
 80286f4:	80000015 	stw	zero,0(r16)
 80286f8:	802d1c40 	call	802d1c4 <close>
 80286fc:	00ffffc4 	movi	r3,-1
 8028700:	10c00526 	beq	r2,r3,8028718 <_close_r+0x44>
 8028704:	dfc00217 	ldw	ra,8(sp)
 8028708:	dc400117 	ldw	r17,4(sp)
 802870c:	dc000017 	ldw	r16,0(sp)
 8028710:	dec00304 	addi	sp,sp,12
 8028714:	f800283a 	ret
 8028718:	80c00017 	ldw	r3,0(r16)
 802871c:	183ff926 	beq	r3,zero,8028704 <__flash_rwdata_start+0xffff8be8>
 8028720:	88c00015 	stw	r3,0(r17)
 8028724:	003ff706 	br	8028704 <__flash_rwdata_start+0xffff8be8>

08028728 <_calloc_r>:
 8028728:	defffe04 	addi	sp,sp,-8
 802872c:	2805883a 	mov	r2,r5
 8028730:	dc000015 	stw	r16,0(sp)
 8028734:	300b883a 	mov	r5,r6
 8028738:	2021883a 	mov	r16,r4
 802873c:	1009883a 	mov	r4,r2
 8028740:	dfc00115 	stw	ra,4(sp)
 8028744:	802a8bc0 	call	802a8bc <__mulsi3>
 8028748:	100b883a 	mov	r5,r2
 802874c:	8009883a 	mov	r4,r16
 8028750:	8024fec0 	call	8024fec <_malloc_r>
 8028754:	10002926 	beq	r2,zero,80287fc <_calloc_r+0xd4>
 8028758:	11bfff17 	ldw	r6,-4(r2)
 802875c:	1021883a 	mov	r16,r2
 8028760:	00bfff04 	movi	r2,-4
 8028764:	308c703a 	and	r6,r6,r2
 8028768:	00c00904 	movi	r3,36
 802876c:	308d883a 	add	r6,r6,r2
 8028770:	19801636 	bltu	r3,r6,80287cc <_calloc_r+0xa4>
 8028774:	008004c4 	movi	r2,19
 8028778:	11800b2e 	bgeu	r2,r6,80287a8 <_calloc_r+0x80>
 802877c:	80000015 	stw	zero,0(r16)
 8028780:	80000115 	stw	zero,4(r16)
 8028784:	008006c4 	movi	r2,27
 8028788:	11801a2e 	bgeu	r2,r6,80287f4 <_calloc_r+0xcc>
 802878c:	80000215 	stw	zero,8(r16)
 8028790:	80000315 	stw	zero,12(r16)
 8028794:	30c0151e 	bne	r6,r3,80287ec <_calloc_r+0xc4>
 8028798:	80000415 	stw	zero,16(r16)
 802879c:	80800604 	addi	r2,r16,24
 80287a0:	80000515 	stw	zero,20(r16)
 80287a4:	00000106 	br	80287ac <_calloc_r+0x84>
 80287a8:	8005883a 	mov	r2,r16
 80287ac:	10000015 	stw	zero,0(r2)
 80287b0:	10000115 	stw	zero,4(r2)
 80287b4:	10000215 	stw	zero,8(r2)
 80287b8:	8005883a 	mov	r2,r16
 80287bc:	dfc00117 	ldw	ra,4(sp)
 80287c0:	dc000017 	ldw	r16,0(sp)
 80287c4:	dec00204 	addi	sp,sp,8
 80287c8:	f800283a 	ret
 80287cc:	000b883a 	mov	r5,zero
 80287d0:	8009883a 	mov	r4,r16
 80287d4:	8025a240 	call	8025a24 <memset>
 80287d8:	8005883a 	mov	r2,r16
 80287dc:	dfc00117 	ldw	ra,4(sp)
 80287e0:	dc000017 	ldw	r16,0(sp)
 80287e4:	dec00204 	addi	sp,sp,8
 80287e8:	f800283a 	ret
 80287ec:	80800404 	addi	r2,r16,16
 80287f0:	003fee06 	br	80287ac <__flash_rwdata_start+0xffff8c90>
 80287f4:	80800204 	addi	r2,r16,8
 80287f8:	003fec06 	br	80287ac <__flash_rwdata_start+0xffff8c90>
 80287fc:	0005883a 	mov	r2,zero
 8028800:	003fee06 	br	80287bc <__flash_rwdata_start+0xffff8ca0>

08028804 <_fclose_r>:
 8028804:	28003926 	beq	r5,zero,80288ec <_fclose_r+0xe8>
 8028808:	defffc04 	addi	sp,sp,-16
 802880c:	dc400115 	stw	r17,4(sp)
 8028810:	dc000015 	stw	r16,0(sp)
 8028814:	dfc00315 	stw	ra,12(sp)
 8028818:	dc800215 	stw	r18,8(sp)
 802881c:	2023883a 	mov	r17,r4
 8028820:	2821883a 	mov	r16,r5
 8028824:	20000226 	beq	r4,zero,8028830 <_fclose_r+0x2c>
 8028828:	20800e17 	ldw	r2,56(r4)
 802882c:	10002726 	beq	r2,zero,80288cc <_fclose_r+0xc8>
 8028830:	8080030f 	ldh	r2,12(r16)
 8028834:	1000071e 	bne	r2,zero,8028854 <_fclose_r+0x50>
 8028838:	0005883a 	mov	r2,zero
 802883c:	dfc00317 	ldw	ra,12(sp)
 8028840:	dc800217 	ldw	r18,8(sp)
 8028844:	dc400117 	ldw	r17,4(sp)
 8028848:	dc000017 	ldw	r16,0(sp)
 802884c:	dec00404 	addi	sp,sp,16
 8028850:	f800283a 	ret
 8028854:	800b883a 	mov	r5,r16
 8028858:	8809883a 	mov	r4,r17
 802885c:	80241400 	call	8024140 <__sflush_r>
 8028860:	1025883a 	mov	r18,r2
 8028864:	80800b17 	ldw	r2,44(r16)
 8028868:	10000426 	beq	r2,zero,802887c <_fclose_r+0x78>
 802886c:	81400717 	ldw	r5,28(r16)
 8028870:	8809883a 	mov	r4,r17
 8028874:	103ee83a 	callr	r2
 8028878:	10001616 	blt	r2,zero,80288d4 <_fclose_r+0xd0>
 802887c:	8080030b 	ldhu	r2,12(r16)
 8028880:	1080200c 	andi	r2,r2,128
 8028884:	1000151e 	bne	r2,zero,80288dc <_fclose_r+0xd8>
 8028888:	81400c17 	ldw	r5,48(r16)
 802888c:	28000526 	beq	r5,zero,80288a4 <_fclose_r+0xa0>
 8028890:	80801004 	addi	r2,r16,64
 8028894:	28800226 	beq	r5,r2,80288a0 <_fclose_r+0x9c>
 8028898:	8809883a 	mov	r4,r17
 802889c:	80248bc0 	call	80248bc <_free_r>
 80288a0:	80000c15 	stw	zero,48(r16)
 80288a4:	81401117 	ldw	r5,68(r16)
 80288a8:	28000326 	beq	r5,zero,80288b8 <_fclose_r+0xb4>
 80288ac:	8809883a 	mov	r4,r17
 80288b0:	80248bc0 	call	80248bc <_free_r>
 80288b4:	80001115 	stw	zero,68(r16)
 80288b8:	80247580 	call	8024758 <__sfp_lock_acquire>
 80288bc:	8000030d 	sth	zero,12(r16)
 80288c0:	802475c0 	call	802475c <__sfp_lock_release>
 80288c4:	9005883a 	mov	r2,r18
 80288c8:	003fdc06 	br	802883c <__flash_rwdata_start+0xffff8d20>
 80288cc:	80247480 	call	8024748 <__sinit>
 80288d0:	003fd706 	br	8028830 <__flash_rwdata_start+0xffff8d14>
 80288d4:	04bfffc4 	movi	r18,-1
 80288d8:	003fe806 	br	802887c <__flash_rwdata_start+0xffff8d60>
 80288dc:	81400417 	ldw	r5,16(r16)
 80288e0:	8809883a 	mov	r4,r17
 80288e4:	80248bc0 	call	80248bc <_free_r>
 80288e8:	003fe706 	br	8028888 <__flash_rwdata_start+0xffff8d6c>
 80288ec:	0005883a 	mov	r2,zero
 80288f0:	f800283a 	ret

080288f4 <fclose>:
 80288f4:	00800034 	movhi	r2,0
 80288f8:	10876c04 	addi	r2,r2,7600
 80288fc:	200b883a 	mov	r5,r4
 8028900:	11000017 	ldw	r4,0(r2)
 8028904:	80288041 	jmpi	8028804 <_fclose_r>

08028908 <__fputwc>:
 8028908:	defff804 	addi	sp,sp,-32
 802890c:	dcc00415 	stw	r19,16(sp)
 8028910:	dc800315 	stw	r18,12(sp)
 8028914:	dc000115 	stw	r16,4(sp)
 8028918:	dfc00715 	stw	ra,28(sp)
 802891c:	dd400615 	stw	r21,24(sp)
 8028920:	dd000515 	stw	r20,20(sp)
 8028924:	dc400215 	stw	r17,8(sp)
 8028928:	2027883a 	mov	r19,r4
 802892c:	2825883a 	mov	r18,r5
 8028930:	3021883a 	mov	r16,r6
 8028934:	8024ddc0 	call	8024ddc <__locale_mb_cur_max>
 8028938:	00c00044 	movi	r3,1
 802893c:	10c03e26 	beq	r2,r3,8028a38 <__fputwc+0x130>
 8028940:	81c01704 	addi	r7,r16,92
 8028944:	900d883a 	mov	r6,r18
 8028948:	d80b883a 	mov	r5,sp
 802894c:	9809883a 	mov	r4,r19
 8028950:	80299600 	call	8029960 <_wcrtomb_r>
 8028954:	1029883a 	mov	r20,r2
 8028958:	00bfffc4 	movi	r2,-1
 802895c:	a0802026 	beq	r20,r2,80289e0 <__fputwc+0xd8>
 8028960:	d9400003 	ldbu	r5,0(sp)
 8028964:	a0001c26 	beq	r20,zero,80289d8 <__fputwc+0xd0>
 8028968:	0023883a 	mov	r17,zero
 802896c:	05400284 	movi	r21,10
 8028970:	00000906 	br	8028998 <__fputwc+0x90>
 8028974:	80800017 	ldw	r2,0(r16)
 8028978:	11400005 	stb	r5,0(r2)
 802897c:	80c00017 	ldw	r3,0(r16)
 8028980:	18c00044 	addi	r3,r3,1
 8028984:	80c00015 	stw	r3,0(r16)
 8028988:	8c400044 	addi	r17,r17,1
 802898c:	dc45883a 	add	r2,sp,r17
 8028990:	8d00112e 	bgeu	r17,r20,80289d8 <__fputwc+0xd0>
 8028994:	11400003 	ldbu	r5,0(r2)
 8028998:	80c00217 	ldw	r3,8(r16)
 802899c:	18ffffc4 	addi	r3,r3,-1
 80289a0:	80c00215 	stw	r3,8(r16)
 80289a4:	183ff30e 	bge	r3,zero,8028974 <__flash_rwdata_start+0xffff8e58>
 80289a8:	80800617 	ldw	r2,24(r16)
 80289ac:	18801916 	blt	r3,r2,8028a14 <__fputwc+0x10c>
 80289b0:	80800017 	ldw	r2,0(r16)
 80289b4:	11400005 	stb	r5,0(r2)
 80289b8:	80800017 	ldw	r2,0(r16)
 80289bc:	10c00003 	ldbu	r3,0(r2)
 80289c0:	10800044 	addi	r2,r2,1
 80289c4:	1d402326 	beq	r3,r21,8028a54 <__fputwc+0x14c>
 80289c8:	80800015 	stw	r2,0(r16)
 80289cc:	8c400044 	addi	r17,r17,1
 80289d0:	dc45883a 	add	r2,sp,r17
 80289d4:	8d3fef36 	bltu	r17,r20,8028994 <__flash_rwdata_start+0xffff8e78>
 80289d8:	9005883a 	mov	r2,r18
 80289dc:	00000406 	br	80289f0 <__fputwc+0xe8>
 80289e0:	80c0030b 	ldhu	r3,12(r16)
 80289e4:	a005883a 	mov	r2,r20
 80289e8:	18c01014 	ori	r3,r3,64
 80289ec:	80c0030d 	sth	r3,12(r16)
 80289f0:	dfc00717 	ldw	ra,28(sp)
 80289f4:	dd400617 	ldw	r21,24(sp)
 80289f8:	dd000517 	ldw	r20,20(sp)
 80289fc:	dcc00417 	ldw	r19,16(sp)
 8028a00:	dc800317 	ldw	r18,12(sp)
 8028a04:	dc400217 	ldw	r17,8(sp)
 8028a08:	dc000117 	ldw	r16,4(sp)
 8028a0c:	dec00804 	addi	sp,sp,32
 8028a10:	f800283a 	ret
 8028a14:	800d883a 	mov	r6,r16
 8028a18:	29403fcc 	andi	r5,r5,255
 8028a1c:	9809883a 	mov	r4,r19
 8028a20:	80298080 	call	8029808 <__swbuf_r>
 8028a24:	10bfffe0 	cmpeqi	r2,r2,-1
 8028a28:	10803fcc 	andi	r2,r2,255
 8028a2c:	103fd626 	beq	r2,zero,8028988 <__flash_rwdata_start+0xffff8e6c>
 8028a30:	00bfffc4 	movi	r2,-1
 8028a34:	003fee06 	br	80289f0 <__flash_rwdata_start+0xffff8ed4>
 8028a38:	90ffffc4 	addi	r3,r18,-1
 8028a3c:	01003f84 	movi	r4,254
 8028a40:	20ffbf36 	bltu	r4,r3,8028940 <__flash_rwdata_start+0xffff8e24>
 8028a44:	900b883a 	mov	r5,r18
 8028a48:	dc800005 	stb	r18,0(sp)
 8028a4c:	1029883a 	mov	r20,r2
 8028a50:	003fc506 	br	8028968 <__flash_rwdata_start+0xffff8e4c>
 8028a54:	800d883a 	mov	r6,r16
 8028a58:	a80b883a 	mov	r5,r21
 8028a5c:	9809883a 	mov	r4,r19
 8028a60:	80298080 	call	8029808 <__swbuf_r>
 8028a64:	10bfffe0 	cmpeqi	r2,r2,-1
 8028a68:	003fef06 	br	8028a28 <__flash_rwdata_start+0xffff8f0c>

08028a6c <_fputwc_r>:
 8028a6c:	3080030b 	ldhu	r2,12(r6)
 8028a70:	10c8000c 	andi	r3,r2,8192
 8028a74:	1800051e 	bne	r3,zero,8028a8c <_fputwc_r+0x20>
 8028a78:	30c01917 	ldw	r3,100(r6)
 8028a7c:	10880014 	ori	r2,r2,8192
 8028a80:	3080030d 	sth	r2,12(r6)
 8028a84:	18880014 	ori	r2,r3,8192
 8028a88:	30801915 	stw	r2,100(r6)
 8028a8c:	80289081 	jmpi	8028908 <__fputwc>

08028a90 <fputwc>:
 8028a90:	00800034 	movhi	r2,0
 8028a94:	defffc04 	addi	sp,sp,-16
 8028a98:	10876c04 	addi	r2,r2,7600
 8028a9c:	dc000115 	stw	r16,4(sp)
 8028aa0:	14000017 	ldw	r16,0(r2)
 8028aa4:	dc400215 	stw	r17,8(sp)
 8028aa8:	dfc00315 	stw	ra,12(sp)
 8028aac:	2023883a 	mov	r17,r4
 8028ab0:	80000226 	beq	r16,zero,8028abc <fputwc+0x2c>
 8028ab4:	80800e17 	ldw	r2,56(r16)
 8028ab8:	10001026 	beq	r2,zero,8028afc <fputwc+0x6c>
 8028abc:	2880030b 	ldhu	r2,12(r5)
 8028ac0:	10c8000c 	andi	r3,r2,8192
 8028ac4:	1800051e 	bne	r3,zero,8028adc <fputwc+0x4c>
 8028ac8:	28c01917 	ldw	r3,100(r5)
 8028acc:	10880014 	ori	r2,r2,8192
 8028ad0:	2880030d 	sth	r2,12(r5)
 8028ad4:	18880014 	ori	r2,r3,8192
 8028ad8:	28801915 	stw	r2,100(r5)
 8028adc:	280d883a 	mov	r6,r5
 8028ae0:	8009883a 	mov	r4,r16
 8028ae4:	880b883a 	mov	r5,r17
 8028ae8:	dfc00317 	ldw	ra,12(sp)
 8028aec:	dc400217 	ldw	r17,8(sp)
 8028af0:	dc000117 	ldw	r16,4(sp)
 8028af4:	dec00404 	addi	sp,sp,16
 8028af8:	80289081 	jmpi	8028908 <__fputwc>
 8028afc:	8009883a 	mov	r4,r16
 8028b00:	d9400015 	stw	r5,0(sp)
 8028b04:	80247480 	call	8024748 <__sinit>
 8028b08:	d9400017 	ldw	r5,0(sp)
 8028b0c:	003feb06 	br	8028abc <__flash_rwdata_start+0xffff8fa0>

08028b10 <_fstat_r>:
 8028b10:	defffd04 	addi	sp,sp,-12
 8028b14:	2805883a 	mov	r2,r5
 8028b18:	dc000015 	stw	r16,0(sp)
 8028b1c:	04000034 	movhi	r16,0
 8028b20:	dc400115 	stw	r17,4(sp)
 8028b24:	84078104 	addi	r16,r16,7684
 8028b28:	2023883a 	mov	r17,r4
 8028b2c:	300b883a 	mov	r5,r6
 8028b30:	1009883a 	mov	r4,r2
 8028b34:	dfc00215 	stw	ra,8(sp)
 8028b38:	80000015 	stw	zero,0(r16)
 8028b3c:	802d3040 	call	802d304 <fstat>
 8028b40:	00ffffc4 	movi	r3,-1
 8028b44:	10c00526 	beq	r2,r3,8028b5c <_fstat_r+0x4c>
 8028b48:	dfc00217 	ldw	ra,8(sp)
 8028b4c:	dc400117 	ldw	r17,4(sp)
 8028b50:	dc000017 	ldw	r16,0(sp)
 8028b54:	dec00304 	addi	sp,sp,12
 8028b58:	f800283a 	ret
 8028b5c:	80c00017 	ldw	r3,0(r16)
 8028b60:	183ff926 	beq	r3,zero,8028b48 <__flash_rwdata_start+0xffff902c>
 8028b64:	88c00015 	stw	r3,0(r17)
 8028b68:	003ff706 	br	8028b48 <__flash_rwdata_start+0xffff902c>

08028b6c <__sfvwrite_r>:
 8028b6c:	30800217 	ldw	r2,8(r6)
 8028b70:	10006726 	beq	r2,zero,8028d10 <__sfvwrite_r+0x1a4>
 8028b74:	28c0030b 	ldhu	r3,12(r5)
 8028b78:	defff404 	addi	sp,sp,-48
 8028b7c:	dd400715 	stw	r21,28(sp)
 8028b80:	dd000615 	stw	r20,24(sp)
 8028b84:	dc000215 	stw	r16,8(sp)
 8028b88:	dfc00b15 	stw	ra,44(sp)
 8028b8c:	df000a15 	stw	fp,40(sp)
 8028b90:	ddc00915 	stw	r23,36(sp)
 8028b94:	dd800815 	stw	r22,32(sp)
 8028b98:	dcc00515 	stw	r19,20(sp)
 8028b9c:	dc800415 	stw	r18,16(sp)
 8028ba0:	dc400315 	stw	r17,12(sp)
 8028ba4:	1880020c 	andi	r2,r3,8
 8028ba8:	2821883a 	mov	r16,r5
 8028bac:	202b883a 	mov	r21,r4
 8028bb0:	3029883a 	mov	r20,r6
 8028bb4:	10002726 	beq	r2,zero,8028c54 <__sfvwrite_r+0xe8>
 8028bb8:	28800417 	ldw	r2,16(r5)
 8028bbc:	10002526 	beq	r2,zero,8028c54 <__sfvwrite_r+0xe8>
 8028bc0:	1880008c 	andi	r2,r3,2
 8028bc4:	a4400017 	ldw	r17,0(r20)
 8028bc8:	10002a26 	beq	r2,zero,8028c74 <__sfvwrite_r+0x108>
 8028bcc:	05a00034 	movhi	r22,32768
 8028bd0:	0027883a 	mov	r19,zero
 8028bd4:	0025883a 	mov	r18,zero
 8028bd8:	b5bf0004 	addi	r22,r22,-1024
 8028bdc:	980d883a 	mov	r6,r19
 8028be0:	a809883a 	mov	r4,r21
 8028be4:	90004626 	beq	r18,zero,8028d00 <__sfvwrite_r+0x194>
 8028be8:	900f883a 	mov	r7,r18
 8028bec:	b480022e 	bgeu	r22,r18,8028bf8 <__sfvwrite_r+0x8c>
 8028bf0:	01e00034 	movhi	r7,32768
 8028bf4:	39ff0004 	addi	r7,r7,-1024
 8028bf8:	80800917 	ldw	r2,36(r16)
 8028bfc:	81400717 	ldw	r5,28(r16)
 8028c00:	103ee83a 	callr	r2
 8028c04:	00805a0e 	bge	zero,r2,8028d70 <__sfvwrite_r+0x204>
 8028c08:	a0c00217 	ldw	r3,8(r20)
 8028c0c:	98a7883a 	add	r19,r19,r2
 8028c10:	90a5c83a 	sub	r18,r18,r2
 8028c14:	1885c83a 	sub	r2,r3,r2
 8028c18:	a0800215 	stw	r2,8(r20)
 8028c1c:	103fef1e 	bne	r2,zero,8028bdc <__flash_rwdata_start+0xffff90c0>
 8028c20:	0005883a 	mov	r2,zero
 8028c24:	dfc00b17 	ldw	ra,44(sp)
 8028c28:	df000a17 	ldw	fp,40(sp)
 8028c2c:	ddc00917 	ldw	r23,36(sp)
 8028c30:	dd800817 	ldw	r22,32(sp)
 8028c34:	dd400717 	ldw	r21,28(sp)
 8028c38:	dd000617 	ldw	r20,24(sp)
 8028c3c:	dcc00517 	ldw	r19,20(sp)
 8028c40:	dc800417 	ldw	r18,16(sp)
 8028c44:	dc400317 	ldw	r17,12(sp)
 8028c48:	dc000217 	ldw	r16,8(sp)
 8028c4c:	dec00c04 	addi	sp,sp,48
 8028c50:	f800283a 	ret
 8028c54:	800b883a 	mov	r5,r16
 8028c58:	a809883a 	mov	r4,r21
 8028c5c:	802273c0 	call	802273c <__swsetup_r>
 8028c60:	1000ee1e 	bne	r2,zero,802901c <__sfvwrite_r+0x4b0>
 8028c64:	80c0030b 	ldhu	r3,12(r16)
 8028c68:	a4400017 	ldw	r17,0(r20)
 8028c6c:	1880008c 	andi	r2,r3,2
 8028c70:	103fd61e 	bne	r2,zero,8028bcc <__flash_rwdata_start+0xffff90b0>
 8028c74:	1880004c 	andi	r2,r3,1
 8028c78:	1000421e 	bne	r2,zero,8028d84 <__sfvwrite_r+0x218>
 8028c7c:	0039883a 	mov	fp,zero
 8028c80:	0025883a 	mov	r18,zero
 8028c84:	90001a26 	beq	r18,zero,8028cf0 <__sfvwrite_r+0x184>
 8028c88:	1880800c 	andi	r2,r3,512
 8028c8c:	84c00217 	ldw	r19,8(r16)
 8028c90:	10002126 	beq	r2,zero,8028d18 <__sfvwrite_r+0x1ac>
 8028c94:	982f883a 	mov	r23,r19
 8028c98:	94c09636 	bltu	r18,r19,8028ef4 <__sfvwrite_r+0x388>
 8028c9c:	1881200c 	andi	r2,r3,1152
 8028ca0:	1000a11e 	bne	r2,zero,8028f28 <__sfvwrite_r+0x3bc>
 8028ca4:	81000017 	ldw	r4,0(r16)
 8028ca8:	b80d883a 	mov	r6,r23
 8028cac:	e00b883a 	mov	r5,fp
 8028cb0:	80290e80 	call	80290e8 <memmove>
 8028cb4:	80c00217 	ldw	r3,8(r16)
 8028cb8:	81000017 	ldw	r4,0(r16)
 8028cbc:	9005883a 	mov	r2,r18
 8028cc0:	1ce7c83a 	sub	r19,r3,r19
 8028cc4:	25cf883a 	add	r7,r4,r23
 8028cc8:	84c00215 	stw	r19,8(r16)
 8028ccc:	81c00015 	stw	r7,0(r16)
 8028cd0:	a0c00217 	ldw	r3,8(r20)
 8028cd4:	e0b9883a 	add	fp,fp,r2
 8028cd8:	90a5c83a 	sub	r18,r18,r2
 8028cdc:	18a7c83a 	sub	r19,r3,r2
 8028ce0:	a4c00215 	stw	r19,8(r20)
 8028ce4:	983fce26 	beq	r19,zero,8028c20 <__flash_rwdata_start+0xffff9104>
 8028ce8:	80c0030b 	ldhu	r3,12(r16)
 8028cec:	903fe61e 	bne	r18,zero,8028c88 <__flash_rwdata_start+0xffff916c>
 8028cf0:	8f000017 	ldw	fp,0(r17)
 8028cf4:	8c800117 	ldw	r18,4(r17)
 8028cf8:	8c400204 	addi	r17,r17,8
 8028cfc:	003fe106 	br	8028c84 <__flash_rwdata_start+0xffff9168>
 8028d00:	8cc00017 	ldw	r19,0(r17)
 8028d04:	8c800117 	ldw	r18,4(r17)
 8028d08:	8c400204 	addi	r17,r17,8
 8028d0c:	003fb306 	br	8028bdc <__flash_rwdata_start+0xffff90c0>
 8028d10:	0005883a 	mov	r2,zero
 8028d14:	f800283a 	ret
 8028d18:	81000017 	ldw	r4,0(r16)
 8028d1c:	80800417 	ldw	r2,16(r16)
 8028d20:	11005a36 	bltu	r2,r4,8028e8c <__sfvwrite_r+0x320>
 8028d24:	85c00517 	ldw	r23,20(r16)
 8028d28:	95c05836 	bltu	r18,r23,8028e8c <__sfvwrite_r+0x320>
 8028d2c:	00a00034 	movhi	r2,32768
 8028d30:	10bfffc4 	addi	r2,r2,-1
 8028d34:	9009883a 	mov	r4,r18
 8028d38:	1480012e 	bgeu	r2,r18,8028d40 <__sfvwrite_r+0x1d4>
 8028d3c:	1009883a 	mov	r4,r2
 8028d40:	b80b883a 	mov	r5,r23
 8028d44:	802a7080 	call	802a708 <__divsi3>
 8028d48:	b80b883a 	mov	r5,r23
 8028d4c:	1009883a 	mov	r4,r2
 8028d50:	802a8bc0 	call	802a8bc <__mulsi3>
 8028d54:	81400717 	ldw	r5,28(r16)
 8028d58:	80c00917 	ldw	r3,36(r16)
 8028d5c:	100f883a 	mov	r7,r2
 8028d60:	e00d883a 	mov	r6,fp
 8028d64:	a809883a 	mov	r4,r21
 8028d68:	183ee83a 	callr	r3
 8028d6c:	00bfd816 	blt	zero,r2,8028cd0 <__flash_rwdata_start+0xffff91b4>
 8028d70:	8080030b 	ldhu	r2,12(r16)
 8028d74:	10801014 	ori	r2,r2,64
 8028d78:	8080030d 	sth	r2,12(r16)
 8028d7c:	00bfffc4 	movi	r2,-1
 8028d80:	003fa806 	br	8028c24 <__flash_rwdata_start+0xffff9108>
 8028d84:	0027883a 	mov	r19,zero
 8028d88:	0011883a 	mov	r8,zero
 8028d8c:	0039883a 	mov	fp,zero
 8028d90:	0025883a 	mov	r18,zero
 8028d94:	90001f26 	beq	r18,zero,8028e14 <__sfvwrite_r+0x2a8>
 8028d98:	40005a26 	beq	r8,zero,8028f04 <__sfvwrite_r+0x398>
 8028d9c:	982d883a 	mov	r22,r19
 8028da0:	94c0012e 	bgeu	r18,r19,8028da8 <__sfvwrite_r+0x23c>
 8028da4:	902d883a 	mov	r22,r18
 8028da8:	81000017 	ldw	r4,0(r16)
 8028dac:	80800417 	ldw	r2,16(r16)
 8028db0:	b02f883a 	mov	r23,r22
 8028db4:	81c00517 	ldw	r7,20(r16)
 8028db8:	1100032e 	bgeu	r2,r4,8028dc8 <__sfvwrite_r+0x25c>
 8028dbc:	80c00217 	ldw	r3,8(r16)
 8028dc0:	38c7883a 	add	r3,r7,r3
 8028dc4:	1d801816 	blt	r3,r22,8028e28 <__sfvwrite_r+0x2bc>
 8028dc8:	b1c03e16 	blt	r22,r7,8028ec4 <__sfvwrite_r+0x358>
 8028dcc:	80800917 	ldw	r2,36(r16)
 8028dd0:	81400717 	ldw	r5,28(r16)
 8028dd4:	e00d883a 	mov	r6,fp
 8028dd8:	da000115 	stw	r8,4(sp)
 8028ddc:	a809883a 	mov	r4,r21
 8028de0:	103ee83a 	callr	r2
 8028de4:	102f883a 	mov	r23,r2
 8028de8:	da000117 	ldw	r8,4(sp)
 8028dec:	00bfe00e 	bge	zero,r2,8028d70 <__flash_rwdata_start+0xffff9254>
 8028df0:	9de7c83a 	sub	r19,r19,r23
 8028df4:	98001f26 	beq	r19,zero,8028e74 <__sfvwrite_r+0x308>
 8028df8:	a0800217 	ldw	r2,8(r20)
 8028dfc:	e5f9883a 	add	fp,fp,r23
 8028e00:	95e5c83a 	sub	r18,r18,r23
 8028e04:	15efc83a 	sub	r23,r2,r23
 8028e08:	a5c00215 	stw	r23,8(r20)
 8028e0c:	b83f8426 	beq	r23,zero,8028c20 <__flash_rwdata_start+0xffff9104>
 8028e10:	903fe11e 	bne	r18,zero,8028d98 <__flash_rwdata_start+0xffff927c>
 8028e14:	8f000017 	ldw	fp,0(r17)
 8028e18:	8c800117 	ldw	r18,4(r17)
 8028e1c:	0011883a 	mov	r8,zero
 8028e20:	8c400204 	addi	r17,r17,8
 8028e24:	003fdb06 	br	8028d94 <__flash_rwdata_start+0xffff9278>
 8028e28:	180d883a 	mov	r6,r3
 8028e2c:	e00b883a 	mov	r5,fp
 8028e30:	da000115 	stw	r8,4(sp)
 8028e34:	d8c00015 	stw	r3,0(sp)
 8028e38:	80290e80 	call	80290e8 <memmove>
 8028e3c:	d8c00017 	ldw	r3,0(sp)
 8028e40:	80800017 	ldw	r2,0(r16)
 8028e44:	800b883a 	mov	r5,r16
 8028e48:	a809883a 	mov	r4,r21
 8028e4c:	10c5883a 	add	r2,r2,r3
 8028e50:	80800015 	stw	r2,0(r16)
 8028e54:	d8c00015 	stw	r3,0(sp)
 8028e58:	802435c0 	call	802435c <_fflush_r>
 8028e5c:	d8c00017 	ldw	r3,0(sp)
 8028e60:	da000117 	ldw	r8,4(sp)
 8028e64:	103fc21e 	bne	r2,zero,8028d70 <__flash_rwdata_start+0xffff9254>
 8028e68:	182f883a 	mov	r23,r3
 8028e6c:	9de7c83a 	sub	r19,r19,r23
 8028e70:	983fe11e 	bne	r19,zero,8028df8 <__flash_rwdata_start+0xffff92dc>
 8028e74:	800b883a 	mov	r5,r16
 8028e78:	a809883a 	mov	r4,r21
 8028e7c:	802435c0 	call	802435c <_fflush_r>
 8028e80:	103fbb1e 	bne	r2,zero,8028d70 <__flash_rwdata_start+0xffff9254>
 8028e84:	0011883a 	mov	r8,zero
 8028e88:	003fdb06 	br	8028df8 <__flash_rwdata_start+0xffff92dc>
 8028e8c:	94c0012e 	bgeu	r18,r19,8028e94 <__sfvwrite_r+0x328>
 8028e90:	9027883a 	mov	r19,r18
 8028e94:	980d883a 	mov	r6,r19
 8028e98:	e00b883a 	mov	r5,fp
 8028e9c:	80290e80 	call	80290e8 <memmove>
 8028ea0:	80800217 	ldw	r2,8(r16)
 8028ea4:	80c00017 	ldw	r3,0(r16)
 8028ea8:	14c5c83a 	sub	r2,r2,r19
 8028eac:	1cc7883a 	add	r3,r3,r19
 8028eb0:	80800215 	stw	r2,8(r16)
 8028eb4:	80c00015 	stw	r3,0(r16)
 8028eb8:	10004326 	beq	r2,zero,8028fc8 <__sfvwrite_r+0x45c>
 8028ebc:	9805883a 	mov	r2,r19
 8028ec0:	003f8306 	br	8028cd0 <__flash_rwdata_start+0xffff91b4>
 8028ec4:	b00d883a 	mov	r6,r22
 8028ec8:	e00b883a 	mov	r5,fp
 8028ecc:	da000115 	stw	r8,4(sp)
 8028ed0:	80290e80 	call	80290e8 <memmove>
 8028ed4:	80800217 	ldw	r2,8(r16)
 8028ed8:	80c00017 	ldw	r3,0(r16)
 8028edc:	da000117 	ldw	r8,4(sp)
 8028ee0:	1585c83a 	sub	r2,r2,r22
 8028ee4:	1dad883a 	add	r22,r3,r22
 8028ee8:	80800215 	stw	r2,8(r16)
 8028eec:	85800015 	stw	r22,0(r16)
 8028ef0:	003fbf06 	br	8028df0 <__flash_rwdata_start+0xffff92d4>
 8028ef4:	81000017 	ldw	r4,0(r16)
 8028ef8:	9027883a 	mov	r19,r18
 8028efc:	902f883a 	mov	r23,r18
 8028f00:	003f6906 	br	8028ca8 <__flash_rwdata_start+0xffff918c>
 8028f04:	900d883a 	mov	r6,r18
 8028f08:	01400284 	movi	r5,10
 8028f0c:	e009883a 	mov	r4,fp
 8028f10:	80257f80 	call	80257f8 <memchr>
 8028f14:	10003e26 	beq	r2,zero,8029010 <__sfvwrite_r+0x4a4>
 8028f18:	10800044 	addi	r2,r2,1
 8028f1c:	1727c83a 	sub	r19,r2,fp
 8028f20:	02000044 	movi	r8,1
 8028f24:	003f9d06 	br	8028d9c <__flash_rwdata_start+0xffff9280>
 8028f28:	80800517 	ldw	r2,20(r16)
 8028f2c:	81400417 	ldw	r5,16(r16)
 8028f30:	81c00017 	ldw	r7,0(r16)
 8028f34:	10a7883a 	add	r19,r2,r2
 8028f38:	9885883a 	add	r2,r19,r2
 8028f3c:	1026d7fa 	srli	r19,r2,31
 8028f40:	396dc83a 	sub	r22,r7,r5
 8028f44:	b1000044 	addi	r4,r22,1
 8028f48:	9885883a 	add	r2,r19,r2
 8028f4c:	1027d07a 	srai	r19,r2,1
 8028f50:	2485883a 	add	r2,r4,r18
 8028f54:	980d883a 	mov	r6,r19
 8028f58:	9880022e 	bgeu	r19,r2,8028f64 <__sfvwrite_r+0x3f8>
 8028f5c:	1027883a 	mov	r19,r2
 8028f60:	100d883a 	mov	r6,r2
 8028f64:	18c1000c 	andi	r3,r3,1024
 8028f68:	18001c26 	beq	r3,zero,8028fdc <__sfvwrite_r+0x470>
 8028f6c:	300b883a 	mov	r5,r6
 8028f70:	a809883a 	mov	r4,r21
 8028f74:	8024fec0 	call	8024fec <_malloc_r>
 8028f78:	102f883a 	mov	r23,r2
 8028f7c:	10002926 	beq	r2,zero,8029024 <__sfvwrite_r+0x4b8>
 8028f80:	81400417 	ldw	r5,16(r16)
 8028f84:	b00d883a 	mov	r6,r22
 8028f88:	1009883a 	mov	r4,r2
 8028f8c:	80258dc0 	call	80258dc <memcpy>
 8028f90:	8080030b 	ldhu	r2,12(r16)
 8028f94:	00fedfc4 	movi	r3,-1153
 8028f98:	10c4703a 	and	r2,r2,r3
 8028f9c:	10802014 	ori	r2,r2,128
 8028fa0:	8080030d 	sth	r2,12(r16)
 8028fa4:	bd89883a 	add	r4,r23,r22
 8028fa8:	9d8fc83a 	sub	r7,r19,r22
 8028fac:	85c00415 	stw	r23,16(r16)
 8028fb0:	84c00515 	stw	r19,20(r16)
 8028fb4:	81000015 	stw	r4,0(r16)
 8028fb8:	9027883a 	mov	r19,r18
 8028fbc:	81c00215 	stw	r7,8(r16)
 8028fc0:	902f883a 	mov	r23,r18
 8028fc4:	003f3806 	br	8028ca8 <__flash_rwdata_start+0xffff918c>
 8028fc8:	800b883a 	mov	r5,r16
 8028fcc:	a809883a 	mov	r4,r21
 8028fd0:	802435c0 	call	802435c <_fflush_r>
 8028fd4:	103fb926 	beq	r2,zero,8028ebc <__flash_rwdata_start+0xffff93a0>
 8028fd8:	003f6506 	br	8028d70 <__flash_rwdata_start+0xffff9254>
 8028fdc:	a809883a 	mov	r4,r21
 8028fe0:	80292a40 	call	80292a4 <_realloc_r>
 8028fe4:	102f883a 	mov	r23,r2
 8028fe8:	103fee1e 	bne	r2,zero,8028fa4 <__flash_rwdata_start+0xffff9488>
 8028fec:	81400417 	ldw	r5,16(r16)
 8028ff0:	a809883a 	mov	r4,r21
 8028ff4:	80248bc0 	call	80248bc <_free_r>
 8028ff8:	8080030b 	ldhu	r2,12(r16)
 8028ffc:	00ffdfc4 	movi	r3,-129
 8029000:	1884703a 	and	r2,r3,r2
 8029004:	00c00304 	movi	r3,12
 8029008:	a8c00015 	stw	r3,0(r21)
 802900c:	003f5906 	br	8028d74 <__flash_rwdata_start+0xffff9258>
 8029010:	94c00044 	addi	r19,r18,1
 8029014:	02000044 	movi	r8,1
 8029018:	003f6006 	br	8028d9c <__flash_rwdata_start+0xffff9280>
 802901c:	00bfffc4 	movi	r2,-1
 8029020:	003f0006 	br	8028c24 <__flash_rwdata_start+0xffff9108>
 8029024:	00800304 	movi	r2,12
 8029028:	a8800015 	stw	r2,0(r21)
 802902c:	8080030b 	ldhu	r2,12(r16)
 8029030:	003f5006 	br	8028d74 <__flash_rwdata_start+0xffff9258>

08029034 <_isatty_r>:
 8029034:	defffd04 	addi	sp,sp,-12
 8029038:	dc000015 	stw	r16,0(sp)
 802903c:	04000034 	movhi	r16,0
 8029040:	dc400115 	stw	r17,4(sp)
 8029044:	84078104 	addi	r16,r16,7684
 8029048:	2023883a 	mov	r17,r4
 802904c:	2809883a 	mov	r4,r5
 8029050:	dfc00215 	stw	ra,8(sp)
 8029054:	80000015 	stw	zero,0(r16)
 8029058:	802d3f80 	call	802d3f8 <isatty>
 802905c:	00ffffc4 	movi	r3,-1
 8029060:	10c00526 	beq	r2,r3,8029078 <_isatty_r+0x44>
 8029064:	dfc00217 	ldw	ra,8(sp)
 8029068:	dc400117 	ldw	r17,4(sp)
 802906c:	dc000017 	ldw	r16,0(sp)
 8029070:	dec00304 	addi	sp,sp,12
 8029074:	f800283a 	ret
 8029078:	80c00017 	ldw	r3,0(r16)
 802907c:	183ff926 	beq	r3,zero,8029064 <__flash_rwdata_start+0xffff9548>
 8029080:	88c00015 	stw	r3,0(r17)
 8029084:	003ff706 	br	8029064 <__flash_rwdata_start+0xffff9548>

08029088 <_lseek_r>:
 8029088:	defffd04 	addi	sp,sp,-12
 802908c:	2805883a 	mov	r2,r5
 8029090:	dc000015 	stw	r16,0(sp)
 8029094:	04000034 	movhi	r16,0
 8029098:	dc400115 	stw	r17,4(sp)
 802909c:	300b883a 	mov	r5,r6
 80290a0:	84078104 	addi	r16,r16,7684
 80290a4:	2023883a 	mov	r17,r4
 80290a8:	380d883a 	mov	r6,r7
 80290ac:	1009883a 	mov	r4,r2
 80290b0:	dfc00215 	stw	ra,8(sp)
 80290b4:	80000015 	stw	zero,0(r16)
 80290b8:	802d5cc0 	call	802d5cc <lseek>
 80290bc:	00ffffc4 	movi	r3,-1
 80290c0:	10c00526 	beq	r2,r3,80290d8 <_lseek_r+0x50>
 80290c4:	dfc00217 	ldw	ra,8(sp)
 80290c8:	dc400117 	ldw	r17,4(sp)
 80290cc:	dc000017 	ldw	r16,0(sp)
 80290d0:	dec00304 	addi	sp,sp,12
 80290d4:	f800283a 	ret
 80290d8:	80c00017 	ldw	r3,0(r16)
 80290dc:	183ff926 	beq	r3,zero,80290c4 <__flash_rwdata_start+0xffff95a8>
 80290e0:	88c00015 	stw	r3,0(r17)
 80290e4:	003ff706 	br	80290c4 <__flash_rwdata_start+0xffff95a8>

080290e8 <memmove>:
 80290e8:	2005883a 	mov	r2,r4
 80290ec:	29000b2e 	bgeu	r5,r4,802911c <memmove+0x34>
 80290f0:	298f883a 	add	r7,r5,r6
 80290f4:	21c0092e 	bgeu	r4,r7,802911c <memmove+0x34>
 80290f8:	2187883a 	add	r3,r4,r6
 80290fc:	198bc83a 	sub	r5,r3,r6
 8029100:	30004826 	beq	r6,zero,8029224 <memmove+0x13c>
 8029104:	39ffffc4 	addi	r7,r7,-1
 8029108:	39000003 	ldbu	r4,0(r7)
 802910c:	18ffffc4 	addi	r3,r3,-1
 8029110:	19000005 	stb	r4,0(r3)
 8029114:	28fffb1e 	bne	r5,r3,8029104 <__flash_rwdata_start+0xffff95e8>
 8029118:	f800283a 	ret
 802911c:	00c003c4 	movi	r3,15
 8029120:	1980412e 	bgeu	r3,r6,8029228 <memmove+0x140>
 8029124:	2886b03a 	or	r3,r5,r2
 8029128:	18c000cc 	andi	r3,r3,3
 802912c:	1800401e 	bne	r3,zero,8029230 <memmove+0x148>
 8029130:	33fffc04 	addi	r15,r6,-16
 8029134:	781ed13a 	srli	r15,r15,4
 8029138:	28c00104 	addi	r3,r5,4
 802913c:	13400104 	addi	r13,r2,4
 8029140:	781c913a 	slli	r14,r15,4
 8029144:	2b000204 	addi	r12,r5,8
 8029148:	12c00204 	addi	r11,r2,8
 802914c:	73800504 	addi	r14,r14,20
 8029150:	2a800304 	addi	r10,r5,12
 8029154:	12400304 	addi	r9,r2,12
 8029158:	2b9d883a 	add	r14,r5,r14
 802915c:	2811883a 	mov	r8,r5
 8029160:	100f883a 	mov	r7,r2
 8029164:	41000017 	ldw	r4,0(r8)
 8029168:	39c00404 	addi	r7,r7,16
 802916c:	18c00404 	addi	r3,r3,16
 8029170:	393ffc15 	stw	r4,-16(r7)
 8029174:	193ffc17 	ldw	r4,-16(r3)
 8029178:	6b400404 	addi	r13,r13,16
 802917c:	5ac00404 	addi	r11,r11,16
 8029180:	693ffc15 	stw	r4,-16(r13)
 8029184:	61000017 	ldw	r4,0(r12)
 8029188:	4a400404 	addi	r9,r9,16
 802918c:	42000404 	addi	r8,r8,16
 8029190:	593ffc15 	stw	r4,-16(r11)
 8029194:	51000017 	ldw	r4,0(r10)
 8029198:	63000404 	addi	r12,r12,16
 802919c:	52800404 	addi	r10,r10,16
 80291a0:	493ffc15 	stw	r4,-16(r9)
 80291a4:	1bbfef1e 	bne	r3,r14,8029164 <__flash_rwdata_start+0xffff9648>
 80291a8:	79000044 	addi	r4,r15,1
 80291ac:	2008913a 	slli	r4,r4,4
 80291b0:	328003cc 	andi	r10,r6,15
 80291b4:	02c000c4 	movi	r11,3
 80291b8:	1107883a 	add	r3,r2,r4
 80291bc:	290b883a 	add	r5,r5,r4
 80291c0:	5a801e2e 	bgeu	r11,r10,802923c <memmove+0x154>
 80291c4:	1813883a 	mov	r9,r3
 80291c8:	2811883a 	mov	r8,r5
 80291cc:	500f883a 	mov	r7,r10
 80291d0:	41000017 	ldw	r4,0(r8)
 80291d4:	4a400104 	addi	r9,r9,4
 80291d8:	39ffff04 	addi	r7,r7,-4
 80291dc:	493fff15 	stw	r4,-4(r9)
 80291e0:	42000104 	addi	r8,r8,4
 80291e4:	59fffa36 	bltu	r11,r7,80291d0 <__flash_rwdata_start+0xffff96b4>
 80291e8:	513fff04 	addi	r4,r10,-4
 80291ec:	2008d0ba 	srli	r4,r4,2
 80291f0:	318000cc 	andi	r6,r6,3
 80291f4:	21000044 	addi	r4,r4,1
 80291f8:	2109883a 	add	r4,r4,r4
 80291fc:	2109883a 	add	r4,r4,r4
 8029200:	1907883a 	add	r3,r3,r4
 8029204:	290b883a 	add	r5,r5,r4
 8029208:	30000b26 	beq	r6,zero,8029238 <memmove+0x150>
 802920c:	198d883a 	add	r6,r3,r6
 8029210:	29c00003 	ldbu	r7,0(r5)
 8029214:	18c00044 	addi	r3,r3,1
 8029218:	29400044 	addi	r5,r5,1
 802921c:	19ffffc5 	stb	r7,-1(r3)
 8029220:	19bffb1e 	bne	r3,r6,8029210 <__flash_rwdata_start+0xffff96f4>
 8029224:	f800283a 	ret
 8029228:	1007883a 	mov	r3,r2
 802922c:	003ff606 	br	8029208 <__flash_rwdata_start+0xffff96ec>
 8029230:	1007883a 	mov	r3,r2
 8029234:	003ff506 	br	802920c <__flash_rwdata_start+0xffff96f0>
 8029238:	f800283a 	ret
 802923c:	500d883a 	mov	r6,r10
 8029240:	003ff106 	br	8029208 <__flash_rwdata_start+0xffff96ec>

08029244 <_read_r>:
 8029244:	defffd04 	addi	sp,sp,-12
 8029248:	2805883a 	mov	r2,r5
 802924c:	dc000015 	stw	r16,0(sp)
 8029250:	04000034 	movhi	r16,0
 8029254:	dc400115 	stw	r17,4(sp)
 8029258:	300b883a 	mov	r5,r6
 802925c:	84078104 	addi	r16,r16,7684
 8029260:	2023883a 	mov	r17,r4
 8029264:	380d883a 	mov	r6,r7
 8029268:	1009883a 	mov	r4,r2
 802926c:	dfc00215 	stw	ra,8(sp)
 8029270:	80000015 	stw	zero,0(r16)
 8029274:	802d7a80 	call	802d7a8 <read>
 8029278:	00ffffc4 	movi	r3,-1
 802927c:	10c00526 	beq	r2,r3,8029294 <_read_r+0x50>
 8029280:	dfc00217 	ldw	ra,8(sp)
 8029284:	dc400117 	ldw	r17,4(sp)
 8029288:	dc000017 	ldw	r16,0(sp)
 802928c:	dec00304 	addi	sp,sp,12
 8029290:	f800283a 	ret
 8029294:	80c00017 	ldw	r3,0(r16)
 8029298:	183ff926 	beq	r3,zero,8029280 <__flash_rwdata_start+0xffff9764>
 802929c:	88c00015 	stw	r3,0(r17)
 80292a0:	003ff706 	br	8029280 <__flash_rwdata_start+0xffff9764>

080292a4 <_realloc_r>:
 80292a4:	defff604 	addi	sp,sp,-40
 80292a8:	dc800215 	stw	r18,8(sp)
 80292ac:	dfc00915 	stw	ra,36(sp)
 80292b0:	df000815 	stw	fp,32(sp)
 80292b4:	ddc00715 	stw	r23,28(sp)
 80292b8:	dd800615 	stw	r22,24(sp)
 80292bc:	dd400515 	stw	r21,20(sp)
 80292c0:	dd000415 	stw	r20,16(sp)
 80292c4:	dcc00315 	stw	r19,12(sp)
 80292c8:	dc400115 	stw	r17,4(sp)
 80292cc:	dc000015 	stw	r16,0(sp)
 80292d0:	3025883a 	mov	r18,r6
 80292d4:	2800b726 	beq	r5,zero,80295b4 <_realloc_r+0x310>
 80292d8:	282b883a 	mov	r21,r5
 80292dc:	2029883a 	mov	r20,r4
 80292e0:	802d7240 	call	802d724 <__malloc_lock>
 80292e4:	a8bfff17 	ldw	r2,-4(r21)
 80292e8:	043fff04 	movi	r16,-4
 80292ec:	90c002c4 	addi	r3,r18,11
 80292f0:	01000584 	movi	r4,22
 80292f4:	acfffe04 	addi	r19,r21,-8
 80292f8:	1420703a 	and	r16,r2,r16
 80292fc:	20c0332e 	bgeu	r4,r3,80293cc <_realloc_r+0x128>
 8029300:	047ffe04 	movi	r17,-8
 8029304:	1c62703a 	and	r17,r3,r17
 8029308:	8807883a 	mov	r3,r17
 802930c:	88005816 	blt	r17,zero,8029470 <_realloc_r+0x1cc>
 8029310:	8c805736 	bltu	r17,r18,8029470 <_realloc_r+0x1cc>
 8029314:	80c0300e 	bge	r16,r3,80293d8 <_realloc_r+0x134>
 8029318:	07000034 	movhi	fp,0
 802931c:	e701e704 	addi	fp,fp,1948
 8029320:	e1c00217 	ldw	r7,8(fp)
 8029324:	9c09883a 	add	r4,r19,r16
 8029328:	22000117 	ldw	r8,4(r4)
 802932c:	21c06326 	beq	r4,r7,80294bc <_realloc_r+0x218>
 8029330:	017fff84 	movi	r5,-2
 8029334:	414a703a 	and	r5,r8,r5
 8029338:	214b883a 	add	r5,r4,r5
 802933c:	29800117 	ldw	r6,4(r5)
 8029340:	3180004c 	andi	r6,r6,1
 8029344:	30003f26 	beq	r6,zero,8029444 <_realloc_r+0x1a0>
 8029348:	1080004c 	andi	r2,r2,1
 802934c:	10008326 	beq	r2,zero,802955c <_realloc_r+0x2b8>
 8029350:	900b883a 	mov	r5,r18
 8029354:	a009883a 	mov	r4,r20
 8029358:	8024fec0 	call	8024fec <_malloc_r>
 802935c:	1025883a 	mov	r18,r2
 8029360:	10011e26 	beq	r2,zero,80297dc <_realloc_r+0x538>
 8029364:	a93fff17 	ldw	r4,-4(r21)
 8029368:	10fffe04 	addi	r3,r2,-8
 802936c:	00bfff84 	movi	r2,-2
 8029370:	2084703a 	and	r2,r4,r2
 8029374:	9885883a 	add	r2,r19,r2
 8029378:	1880ee26 	beq	r3,r2,8029734 <_realloc_r+0x490>
 802937c:	81bfff04 	addi	r6,r16,-4
 8029380:	00800904 	movi	r2,36
 8029384:	1180b836 	bltu	r2,r6,8029668 <_realloc_r+0x3c4>
 8029388:	00c004c4 	movi	r3,19
 802938c:	19809636 	bltu	r3,r6,80295e8 <_realloc_r+0x344>
 8029390:	9005883a 	mov	r2,r18
 8029394:	a807883a 	mov	r3,r21
 8029398:	19000017 	ldw	r4,0(r3)
 802939c:	11000015 	stw	r4,0(r2)
 80293a0:	19000117 	ldw	r4,4(r3)
 80293a4:	11000115 	stw	r4,4(r2)
 80293a8:	18c00217 	ldw	r3,8(r3)
 80293ac:	10c00215 	stw	r3,8(r2)
 80293b0:	a80b883a 	mov	r5,r21
 80293b4:	a009883a 	mov	r4,r20
 80293b8:	80248bc0 	call	80248bc <_free_r>
 80293bc:	a009883a 	mov	r4,r20
 80293c0:	802d7480 	call	802d748 <__malloc_unlock>
 80293c4:	9005883a 	mov	r2,r18
 80293c8:	00001206 	br	8029414 <_realloc_r+0x170>
 80293cc:	00c00404 	movi	r3,16
 80293d0:	1823883a 	mov	r17,r3
 80293d4:	003fce06 	br	8029310 <__flash_rwdata_start+0xffff97f4>
 80293d8:	a825883a 	mov	r18,r21
 80293dc:	8445c83a 	sub	r2,r16,r17
 80293e0:	00c003c4 	movi	r3,15
 80293e4:	18802636 	bltu	r3,r2,8029480 <_realloc_r+0x1dc>
 80293e8:	99800117 	ldw	r6,4(r19)
 80293ec:	9c07883a 	add	r3,r19,r16
 80293f0:	3180004c 	andi	r6,r6,1
 80293f4:	3420b03a 	or	r16,r6,r16
 80293f8:	9c000115 	stw	r16,4(r19)
 80293fc:	18800117 	ldw	r2,4(r3)
 8029400:	10800054 	ori	r2,r2,1
 8029404:	18800115 	stw	r2,4(r3)
 8029408:	a009883a 	mov	r4,r20
 802940c:	802d7480 	call	802d748 <__malloc_unlock>
 8029410:	9005883a 	mov	r2,r18
 8029414:	dfc00917 	ldw	ra,36(sp)
 8029418:	df000817 	ldw	fp,32(sp)
 802941c:	ddc00717 	ldw	r23,28(sp)
 8029420:	dd800617 	ldw	r22,24(sp)
 8029424:	dd400517 	ldw	r21,20(sp)
 8029428:	dd000417 	ldw	r20,16(sp)
 802942c:	dcc00317 	ldw	r19,12(sp)
 8029430:	dc800217 	ldw	r18,8(sp)
 8029434:	dc400117 	ldw	r17,4(sp)
 8029438:	dc000017 	ldw	r16,0(sp)
 802943c:	dec00a04 	addi	sp,sp,40
 8029440:	f800283a 	ret
 8029444:	017fff04 	movi	r5,-4
 8029448:	414a703a 	and	r5,r8,r5
 802944c:	814d883a 	add	r6,r16,r5
 8029450:	30c01f16 	blt	r6,r3,80294d0 <_realloc_r+0x22c>
 8029454:	20800317 	ldw	r2,12(r4)
 8029458:	20c00217 	ldw	r3,8(r4)
 802945c:	a825883a 	mov	r18,r21
 8029460:	3021883a 	mov	r16,r6
 8029464:	18800315 	stw	r2,12(r3)
 8029468:	10c00215 	stw	r3,8(r2)
 802946c:	003fdb06 	br	80293dc <__flash_rwdata_start+0xffff98c0>
 8029470:	00800304 	movi	r2,12
 8029474:	a0800015 	stw	r2,0(r20)
 8029478:	0005883a 	mov	r2,zero
 802947c:	003fe506 	br	8029414 <__flash_rwdata_start+0xffff98f8>
 8029480:	98c00117 	ldw	r3,4(r19)
 8029484:	9c4b883a 	add	r5,r19,r17
 8029488:	11000054 	ori	r4,r2,1
 802948c:	18c0004c 	andi	r3,r3,1
 8029490:	1c62b03a 	or	r17,r3,r17
 8029494:	9c400115 	stw	r17,4(r19)
 8029498:	29000115 	stw	r4,4(r5)
 802949c:	2885883a 	add	r2,r5,r2
 80294a0:	10c00117 	ldw	r3,4(r2)
 80294a4:	29400204 	addi	r5,r5,8
 80294a8:	a009883a 	mov	r4,r20
 80294ac:	18c00054 	ori	r3,r3,1
 80294b0:	10c00115 	stw	r3,4(r2)
 80294b4:	80248bc0 	call	80248bc <_free_r>
 80294b8:	003fd306 	br	8029408 <__flash_rwdata_start+0xffff98ec>
 80294bc:	017fff04 	movi	r5,-4
 80294c0:	414a703a 	and	r5,r8,r5
 80294c4:	89800404 	addi	r6,r17,16
 80294c8:	8151883a 	add	r8,r16,r5
 80294cc:	4180590e 	bge	r8,r6,8029634 <_realloc_r+0x390>
 80294d0:	1080004c 	andi	r2,r2,1
 80294d4:	103f9e1e 	bne	r2,zero,8029350 <__flash_rwdata_start+0xffff9834>
 80294d8:	adbffe17 	ldw	r22,-8(r21)
 80294dc:	00bfff04 	movi	r2,-4
 80294e0:	9dadc83a 	sub	r22,r19,r22
 80294e4:	b1800117 	ldw	r6,4(r22)
 80294e8:	3084703a 	and	r2,r6,r2
 80294ec:	20002026 	beq	r4,zero,8029570 <_realloc_r+0x2cc>
 80294f0:	80af883a 	add	r23,r16,r2
 80294f4:	b96f883a 	add	r23,r23,r5
 80294f8:	21c05f26 	beq	r4,r7,8029678 <_realloc_r+0x3d4>
 80294fc:	b8c01c16 	blt	r23,r3,8029570 <_realloc_r+0x2cc>
 8029500:	20800317 	ldw	r2,12(r4)
 8029504:	20c00217 	ldw	r3,8(r4)
 8029508:	81bfff04 	addi	r6,r16,-4
 802950c:	01000904 	movi	r4,36
 8029510:	18800315 	stw	r2,12(r3)
 8029514:	10c00215 	stw	r3,8(r2)
 8029518:	b0c00217 	ldw	r3,8(r22)
 802951c:	b0800317 	ldw	r2,12(r22)
 8029520:	b4800204 	addi	r18,r22,8
 8029524:	18800315 	stw	r2,12(r3)
 8029528:	10c00215 	stw	r3,8(r2)
 802952c:	21801b36 	bltu	r4,r6,802959c <_realloc_r+0x2f8>
 8029530:	008004c4 	movi	r2,19
 8029534:	1180352e 	bgeu	r2,r6,802960c <_realloc_r+0x368>
 8029538:	a8800017 	ldw	r2,0(r21)
 802953c:	b0800215 	stw	r2,8(r22)
 8029540:	a8800117 	ldw	r2,4(r21)
 8029544:	b0800315 	stw	r2,12(r22)
 8029548:	008006c4 	movi	r2,27
 802954c:	11807f36 	bltu	r2,r6,802974c <_realloc_r+0x4a8>
 8029550:	b0800404 	addi	r2,r22,16
 8029554:	ad400204 	addi	r21,r21,8
 8029558:	00002d06 	br	8029610 <_realloc_r+0x36c>
 802955c:	adbffe17 	ldw	r22,-8(r21)
 8029560:	00bfff04 	movi	r2,-4
 8029564:	9dadc83a 	sub	r22,r19,r22
 8029568:	b1000117 	ldw	r4,4(r22)
 802956c:	2084703a 	and	r2,r4,r2
 8029570:	b03f7726 	beq	r22,zero,8029350 <__flash_rwdata_start+0xffff9834>
 8029574:	80af883a 	add	r23,r16,r2
 8029578:	b8ff7516 	blt	r23,r3,8029350 <__flash_rwdata_start+0xffff9834>
 802957c:	b0800317 	ldw	r2,12(r22)
 8029580:	b0c00217 	ldw	r3,8(r22)
 8029584:	81bfff04 	addi	r6,r16,-4
 8029588:	01000904 	movi	r4,36
 802958c:	18800315 	stw	r2,12(r3)
 8029590:	10c00215 	stw	r3,8(r2)
 8029594:	b4800204 	addi	r18,r22,8
 8029598:	21bfe52e 	bgeu	r4,r6,8029530 <__flash_rwdata_start+0xffff9a14>
 802959c:	a80b883a 	mov	r5,r21
 80295a0:	9009883a 	mov	r4,r18
 80295a4:	80290e80 	call	80290e8 <memmove>
 80295a8:	b821883a 	mov	r16,r23
 80295ac:	b027883a 	mov	r19,r22
 80295b0:	003f8a06 	br	80293dc <__flash_rwdata_start+0xffff98c0>
 80295b4:	300b883a 	mov	r5,r6
 80295b8:	dfc00917 	ldw	ra,36(sp)
 80295bc:	df000817 	ldw	fp,32(sp)
 80295c0:	ddc00717 	ldw	r23,28(sp)
 80295c4:	dd800617 	ldw	r22,24(sp)
 80295c8:	dd400517 	ldw	r21,20(sp)
 80295cc:	dd000417 	ldw	r20,16(sp)
 80295d0:	dcc00317 	ldw	r19,12(sp)
 80295d4:	dc800217 	ldw	r18,8(sp)
 80295d8:	dc400117 	ldw	r17,4(sp)
 80295dc:	dc000017 	ldw	r16,0(sp)
 80295e0:	dec00a04 	addi	sp,sp,40
 80295e4:	8024fec1 	jmpi	8024fec <_malloc_r>
 80295e8:	a8c00017 	ldw	r3,0(r21)
 80295ec:	90c00015 	stw	r3,0(r18)
 80295f0:	a8c00117 	ldw	r3,4(r21)
 80295f4:	90c00115 	stw	r3,4(r18)
 80295f8:	00c006c4 	movi	r3,27
 80295fc:	19804536 	bltu	r3,r6,8029714 <_realloc_r+0x470>
 8029600:	90800204 	addi	r2,r18,8
 8029604:	a8c00204 	addi	r3,r21,8
 8029608:	003f6306 	br	8029398 <__flash_rwdata_start+0xffff987c>
 802960c:	9005883a 	mov	r2,r18
 8029610:	a8c00017 	ldw	r3,0(r21)
 8029614:	b821883a 	mov	r16,r23
 8029618:	b027883a 	mov	r19,r22
 802961c:	10c00015 	stw	r3,0(r2)
 8029620:	a8c00117 	ldw	r3,4(r21)
 8029624:	10c00115 	stw	r3,4(r2)
 8029628:	a8c00217 	ldw	r3,8(r21)
 802962c:	10c00215 	stw	r3,8(r2)
 8029630:	003f6a06 	br	80293dc <__flash_rwdata_start+0xffff98c0>
 8029634:	9c67883a 	add	r19,r19,r17
 8029638:	4445c83a 	sub	r2,r8,r17
 802963c:	e4c00215 	stw	r19,8(fp)
 8029640:	10800054 	ori	r2,r2,1
 8029644:	98800115 	stw	r2,4(r19)
 8029648:	a8bfff17 	ldw	r2,-4(r21)
 802964c:	a009883a 	mov	r4,r20
 8029650:	1080004c 	andi	r2,r2,1
 8029654:	1462b03a 	or	r17,r2,r17
 8029658:	ac7fff15 	stw	r17,-4(r21)
 802965c:	802d7480 	call	802d748 <__malloc_unlock>
 8029660:	a805883a 	mov	r2,r21
 8029664:	003f6b06 	br	8029414 <__flash_rwdata_start+0xffff98f8>
 8029668:	a80b883a 	mov	r5,r21
 802966c:	9009883a 	mov	r4,r18
 8029670:	80290e80 	call	80290e8 <memmove>
 8029674:	003f4e06 	br	80293b0 <__flash_rwdata_start+0xffff9894>
 8029678:	89000404 	addi	r4,r17,16
 802967c:	b93fbc16 	blt	r23,r4,8029570 <__flash_rwdata_start+0xffff9a54>
 8029680:	b0800317 	ldw	r2,12(r22)
 8029684:	b0c00217 	ldw	r3,8(r22)
 8029688:	81bfff04 	addi	r6,r16,-4
 802968c:	01000904 	movi	r4,36
 8029690:	18800315 	stw	r2,12(r3)
 8029694:	10c00215 	stw	r3,8(r2)
 8029698:	b4800204 	addi	r18,r22,8
 802969c:	21804336 	bltu	r4,r6,80297ac <_realloc_r+0x508>
 80296a0:	008004c4 	movi	r2,19
 80296a4:	11803f2e 	bgeu	r2,r6,80297a4 <_realloc_r+0x500>
 80296a8:	a8800017 	ldw	r2,0(r21)
 80296ac:	b0800215 	stw	r2,8(r22)
 80296b0:	a8800117 	ldw	r2,4(r21)
 80296b4:	b0800315 	stw	r2,12(r22)
 80296b8:	008006c4 	movi	r2,27
 80296bc:	11803f36 	bltu	r2,r6,80297bc <_realloc_r+0x518>
 80296c0:	b0800404 	addi	r2,r22,16
 80296c4:	ad400204 	addi	r21,r21,8
 80296c8:	a8c00017 	ldw	r3,0(r21)
 80296cc:	10c00015 	stw	r3,0(r2)
 80296d0:	a8c00117 	ldw	r3,4(r21)
 80296d4:	10c00115 	stw	r3,4(r2)
 80296d8:	a8c00217 	ldw	r3,8(r21)
 80296dc:	10c00215 	stw	r3,8(r2)
 80296e0:	b447883a 	add	r3,r22,r17
 80296e4:	bc45c83a 	sub	r2,r23,r17
 80296e8:	e0c00215 	stw	r3,8(fp)
 80296ec:	10800054 	ori	r2,r2,1
 80296f0:	18800115 	stw	r2,4(r3)
 80296f4:	b0800117 	ldw	r2,4(r22)
 80296f8:	a009883a 	mov	r4,r20
 80296fc:	1080004c 	andi	r2,r2,1
 8029700:	1462b03a 	or	r17,r2,r17
 8029704:	b4400115 	stw	r17,4(r22)
 8029708:	802d7480 	call	802d748 <__malloc_unlock>
 802970c:	9005883a 	mov	r2,r18
 8029710:	003f4006 	br	8029414 <__flash_rwdata_start+0xffff98f8>
 8029714:	a8c00217 	ldw	r3,8(r21)
 8029718:	90c00215 	stw	r3,8(r18)
 802971c:	a8c00317 	ldw	r3,12(r21)
 8029720:	90c00315 	stw	r3,12(r18)
 8029724:	30801126 	beq	r6,r2,802976c <_realloc_r+0x4c8>
 8029728:	90800404 	addi	r2,r18,16
 802972c:	a8c00404 	addi	r3,r21,16
 8029730:	003f1906 	br	8029398 <__flash_rwdata_start+0xffff987c>
 8029734:	90ffff17 	ldw	r3,-4(r18)
 8029738:	00bfff04 	movi	r2,-4
 802973c:	a825883a 	mov	r18,r21
 8029740:	1884703a 	and	r2,r3,r2
 8029744:	80a1883a 	add	r16,r16,r2
 8029748:	003f2406 	br	80293dc <__flash_rwdata_start+0xffff98c0>
 802974c:	a8800217 	ldw	r2,8(r21)
 8029750:	b0800415 	stw	r2,16(r22)
 8029754:	a8800317 	ldw	r2,12(r21)
 8029758:	b0800515 	stw	r2,20(r22)
 802975c:	31000a26 	beq	r6,r4,8029788 <_realloc_r+0x4e4>
 8029760:	b0800604 	addi	r2,r22,24
 8029764:	ad400404 	addi	r21,r21,16
 8029768:	003fa906 	br	8029610 <__flash_rwdata_start+0xffff9af4>
 802976c:	a9000417 	ldw	r4,16(r21)
 8029770:	90800604 	addi	r2,r18,24
 8029774:	a8c00604 	addi	r3,r21,24
 8029778:	91000415 	stw	r4,16(r18)
 802977c:	a9000517 	ldw	r4,20(r21)
 8029780:	91000515 	stw	r4,20(r18)
 8029784:	003f0406 	br	8029398 <__flash_rwdata_start+0xffff987c>
 8029788:	a8c00417 	ldw	r3,16(r21)
 802978c:	ad400604 	addi	r21,r21,24
 8029790:	b0800804 	addi	r2,r22,32
 8029794:	b0c00615 	stw	r3,24(r22)
 8029798:	a8ffff17 	ldw	r3,-4(r21)
 802979c:	b0c00715 	stw	r3,28(r22)
 80297a0:	003f9b06 	br	8029610 <__flash_rwdata_start+0xffff9af4>
 80297a4:	9005883a 	mov	r2,r18
 80297a8:	003fc706 	br	80296c8 <__flash_rwdata_start+0xffff9bac>
 80297ac:	a80b883a 	mov	r5,r21
 80297b0:	9009883a 	mov	r4,r18
 80297b4:	80290e80 	call	80290e8 <memmove>
 80297b8:	003fc906 	br	80296e0 <__flash_rwdata_start+0xffff9bc4>
 80297bc:	a8800217 	ldw	r2,8(r21)
 80297c0:	b0800415 	stw	r2,16(r22)
 80297c4:	a8800317 	ldw	r2,12(r21)
 80297c8:	b0800515 	stw	r2,20(r22)
 80297cc:	31000726 	beq	r6,r4,80297ec <_realloc_r+0x548>
 80297d0:	b0800604 	addi	r2,r22,24
 80297d4:	ad400404 	addi	r21,r21,16
 80297d8:	003fbb06 	br	80296c8 <__flash_rwdata_start+0xffff9bac>
 80297dc:	a009883a 	mov	r4,r20
 80297e0:	802d7480 	call	802d748 <__malloc_unlock>
 80297e4:	0005883a 	mov	r2,zero
 80297e8:	003f0a06 	br	8029414 <__flash_rwdata_start+0xffff98f8>
 80297ec:	a8c00417 	ldw	r3,16(r21)
 80297f0:	ad400604 	addi	r21,r21,24
 80297f4:	b0800804 	addi	r2,r22,32
 80297f8:	b0c00615 	stw	r3,24(r22)
 80297fc:	a8ffff17 	ldw	r3,-4(r21)
 8029800:	b0c00715 	stw	r3,28(r22)
 8029804:	003fb006 	br	80296c8 <__flash_rwdata_start+0xffff9bac>

08029808 <__swbuf_r>:
 8029808:	defffb04 	addi	sp,sp,-20
 802980c:	dcc00315 	stw	r19,12(sp)
 8029810:	dc800215 	stw	r18,8(sp)
 8029814:	dc000015 	stw	r16,0(sp)
 8029818:	dfc00415 	stw	ra,16(sp)
 802981c:	dc400115 	stw	r17,4(sp)
 8029820:	2025883a 	mov	r18,r4
 8029824:	2827883a 	mov	r19,r5
 8029828:	3021883a 	mov	r16,r6
 802982c:	20000226 	beq	r4,zero,8029838 <__swbuf_r+0x30>
 8029830:	20800e17 	ldw	r2,56(r4)
 8029834:	10004226 	beq	r2,zero,8029940 <__swbuf_r+0x138>
 8029838:	80800617 	ldw	r2,24(r16)
 802983c:	8100030b 	ldhu	r4,12(r16)
 8029840:	80800215 	stw	r2,8(r16)
 8029844:	2080020c 	andi	r2,r4,8
 8029848:	10003626 	beq	r2,zero,8029924 <__swbuf_r+0x11c>
 802984c:	80c00417 	ldw	r3,16(r16)
 8029850:	18003426 	beq	r3,zero,8029924 <__swbuf_r+0x11c>
 8029854:	2088000c 	andi	r2,r4,8192
 8029858:	9c403fcc 	andi	r17,r19,255
 802985c:	10001a26 	beq	r2,zero,80298c8 <__swbuf_r+0xc0>
 8029860:	80800017 	ldw	r2,0(r16)
 8029864:	81000517 	ldw	r4,20(r16)
 8029868:	10c7c83a 	sub	r3,r2,r3
 802986c:	1900200e 	bge	r3,r4,80298f0 <__swbuf_r+0xe8>
 8029870:	18c00044 	addi	r3,r3,1
 8029874:	81000217 	ldw	r4,8(r16)
 8029878:	11400044 	addi	r5,r2,1
 802987c:	81400015 	stw	r5,0(r16)
 8029880:	213fffc4 	addi	r4,r4,-1
 8029884:	81000215 	stw	r4,8(r16)
 8029888:	14c00005 	stb	r19,0(r2)
 802988c:	80800517 	ldw	r2,20(r16)
 8029890:	10c01e26 	beq	r2,r3,802990c <__swbuf_r+0x104>
 8029894:	8080030b 	ldhu	r2,12(r16)
 8029898:	1080004c 	andi	r2,r2,1
 802989c:	10000226 	beq	r2,zero,80298a8 <__swbuf_r+0xa0>
 80298a0:	00800284 	movi	r2,10
 80298a4:	88801926 	beq	r17,r2,802990c <__swbuf_r+0x104>
 80298a8:	8805883a 	mov	r2,r17
 80298ac:	dfc00417 	ldw	ra,16(sp)
 80298b0:	dcc00317 	ldw	r19,12(sp)
 80298b4:	dc800217 	ldw	r18,8(sp)
 80298b8:	dc400117 	ldw	r17,4(sp)
 80298bc:	dc000017 	ldw	r16,0(sp)
 80298c0:	dec00504 	addi	sp,sp,20
 80298c4:	f800283a 	ret
 80298c8:	81401917 	ldw	r5,100(r16)
 80298cc:	00b7ffc4 	movi	r2,-8193
 80298d0:	21080014 	ori	r4,r4,8192
 80298d4:	2884703a 	and	r2,r5,r2
 80298d8:	80801915 	stw	r2,100(r16)
 80298dc:	80800017 	ldw	r2,0(r16)
 80298e0:	8100030d 	sth	r4,12(r16)
 80298e4:	81000517 	ldw	r4,20(r16)
 80298e8:	10c7c83a 	sub	r3,r2,r3
 80298ec:	193fe016 	blt	r3,r4,8029870 <__flash_rwdata_start+0xffff9d54>
 80298f0:	800b883a 	mov	r5,r16
 80298f4:	9009883a 	mov	r4,r18
 80298f8:	802435c0 	call	802435c <_fflush_r>
 80298fc:	1000071e 	bne	r2,zero,802991c <__swbuf_r+0x114>
 8029900:	80800017 	ldw	r2,0(r16)
 8029904:	00c00044 	movi	r3,1
 8029908:	003fda06 	br	8029874 <__flash_rwdata_start+0xffff9d58>
 802990c:	800b883a 	mov	r5,r16
 8029910:	9009883a 	mov	r4,r18
 8029914:	802435c0 	call	802435c <_fflush_r>
 8029918:	103fe326 	beq	r2,zero,80298a8 <__flash_rwdata_start+0xffff9d8c>
 802991c:	00bfffc4 	movi	r2,-1
 8029920:	003fe206 	br	80298ac <__flash_rwdata_start+0xffff9d90>
 8029924:	800b883a 	mov	r5,r16
 8029928:	9009883a 	mov	r4,r18
 802992c:	802273c0 	call	802273c <__swsetup_r>
 8029930:	103ffa1e 	bne	r2,zero,802991c <__flash_rwdata_start+0xffff9e00>
 8029934:	8100030b 	ldhu	r4,12(r16)
 8029938:	80c00417 	ldw	r3,16(r16)
 802993c:	003fc506 	br	8029854 <__flash_rwdata_start+0xffff9d38>
 8029940:	80247480 	call	8024748 <__sinit>
 8029944:	003fbc06 	br	8029838 <__flash_rwdata_start+0xffff9d1c>

08029948 <__swbuf>:
 8029948:	00800034 	movhi	r2,0
 802994c:	10876c04 	addi	r2,r2,7600
 8029950:	280d883a 	mov	r6,r5
 8029954:	200b883a 	mov	r5,r4
 8029958:	11000017 	ldw	r4,0(r2)
 802995c:	80298081 	jmpi	8029808 <__swbuf_r>

08029960 <_wcrtomb_r>:
 8029960:	defff604 	addi	sp,sp,-40
 8029964:	00800034 	movhi	r2,0
 8029968:	dc800815 	stw	r18,32(sp)
 802996c:	dc400715 	stw	r17,28(sp)
 8029970:	dc000615 	stw	r16,24(sp)
 8029974:	10877004 	addi	r2,r2,7616
 8029978:	dfc00915 	stw	ra,36(sp)
 802997c:	2021883a 	mov	r16,r4
 8029980:	3823883a 	mov	r17,r7
 8029984:	14800017 	ldw	r18,0(r2)
 8029988:	28001426 	beq	r5,zero,80299dc <_wcrtomb_r+0x7c>
 802998c:	d9400415 	stw	r5,16(sp)
 8029990:	d9800515 	stw	r6,20(sp)
 8029994:	8024dd00 	call	8024dd0 <__locale_charset>
 8029998:	d9800517 	ldw	r6,20(sp)
 802999c:	d9400417 	ldw	r5,16(sp)
 80299a0:	100f883a 	mov	r7,r2
 80299a4:	dc400015 	stw	r17,0(sp)
 80299a8:	8009883a 	mov	r4,r16
 80299ac:	903ee83a 	callr	r18
 80299b0:	00ffffc4 	movi	r3,-1
 80299b4:	10c0031e 	bne	r2,r3,80299c4 <_wcrtomb_r+0x64>
 80299b8:	88000015 	stw	zero,0(r17)
 80299bc:	00c02284 	movi	r3,138
 80299c0:	80c00015 	stw	r3,0(r16)
 80299c4:	dfc00917 	ldw	ra,36(sp)
 80299c8:	dc800817 	ldw	r18,32(sp)
 80299cc:	dc400717 	ldw	r17,28(sp)
 80299d0:	dc000617 	ldw	r16,24(sp)
 80299d4:	dec00a04 	addi	sp,sp,40
 80299d8:	f800283a 	ret
 80299dc:	8024dd00 	call	8024dd0 <__locale_charset>
 80299e0:	100f883a 	mov	r7,r2
 80299e4:	dc400015 	stw	r17,0(sp)
 80299e8:	000d883a 	mov	r6,zero
 80299ec:	d9400104 	addi	r5,sp,4
 80299f0:	8009883a 	mov	r4,r16
 80299f4:	903ee83a 	callr	r18
 80299f8:	003fed06 	br	80299b0 <__flash_rwdata_start+0xffff9e94>

080299fc <wcrtomb>:
 80299fc:	defff604 	addi	sp,sp,-40
 8029a00:	00800034 	movhi	r2,0
 8029a04:	dc800615 	stw	r18,24(sp)
 8029a08:	dc400515 	stw	r17,20(sp)
 8029a0c:	10876c04 	addi	r2,r2,7600
 8029a10:	dfc00915 	stw	ra,36(sp)
 8029a14:	dd000815 	stw	r20,32(sp)
 8029a18:	dcc00715 	stw	r19,28(sp)
 8029a1c:	dc000415 	stw	r16,16(sp)
 8029a20:	3025883a 	mov	r18,r6
 8029a24:	14400017 	ldw	r17,0(r2)
 8029a28:	20001926 	beq	r4,zero,8029a90 <wcrtomb+0x94>
 8029a2c:	00800034 	movhi	r2,0
 8029a30:	10877004 	addi	r2,r2,7616
 8029a34:	15000017 	ldw	r20,0(r2)
 8029a38:	2021883a 	mov	r16,r4
 8029a3c:	2827883a 	mov	r19,r5
 8029a40:	8024dd00 	call	8024dd0 <__locale_charset>
 8029a44:	100f883a 	mov	r7,r2
 8029a48:	dc800015 	stw	r18,0(sp)
 8029a4c:	980d883a 	mov	r6,r19
 8029a50:	800b883a 	mov	r5,r16
 8029a54:	8809883a 	mov	r4,r17
 8029a58:	a03ee83a 	callr	r20
 8029a5c:	00ffffc4 	movi	r3,-1
 8029a60:	10c0031e 	bne	r2,r3,8029a70 <wcrtomb+0x74>
 8029a64:	90000015 	stw	zero,0(r18)
 8029a68:	00c02284 	movi	r3,138
 8029a6c:	88c00015 	stw	r3,0(r17)
 8029a70:	dfc00917 	ldw	ra,36(sp)
 8029a74:	dd000817 	ldw	r20,32(sp)
 8029a78:	dcc00717 	ldw	r19,28(sp)
 8029a7c:	dc800617 	ldw	r18,24(sp)
 8029a80:	dc400517 	ldw	r17,20(sp)
 8029a84:	dc000417 	ldw	r16,16(sp)
 8029a88:	dec00a04 	addi	sp,sp,40
 8029a8c:	f800283a 	ret
 8029a90:	00800034 	movhi	r2,0
 8029a94:	10877004 	addi	r2,r2,7616
 8029a98:	14000017 	ldw	r16,0(r2)
 8029a9c:	8024dd00 	call	8024dd0 <__locale_charset>
 8029aa0:	100f883a 	mov	r7,r2
 8029aa4:	dc800015 	stw	r18,0(sp)
 8029aa8:	000d883a 	mov	r6,zero
 8029aac:	d9400104 	addi	r5,sp,4
 8029ab0:	8809883a 	mov	r4,r17
 8029ab4:	803ee83a 	callr	r16
 8029ab8:	003fe806 	br	8029a5c <__flash_rwdata_start+0xffff9f40>

08029abc <__ascii_wctomb>:
 8029abc:	28000526 	beq	r5,zero,8029ad4 <__ascii_wctomb+0x18>
 8029ac0:	00803fc4 	movi	r2,255
 8029ac4:	11800536 	bltu	r2,r6,8029adc <__ascii_wctomb+0x20>
 8029ac8:	29800005 	stb	r6,0(r5)
 8029acc:	00800044 	movi	r2,1
 8029ad0:	f800283a 	ret
 8029ad4:	0005883a 	mov	r2,zero
 8029ad8:	f800283a 	ret
 8029adc:	00802284 	movi	r2,138
 8029ae0:	20800015 	stw	r2,0(r4)
 8029ae4:	00bfffc4 	movi	r2,-1
 8029ae8:	f800283a 	ret

08029aec <_wctomb_r>:
 8029aec:	00800034 	movhi	r2,0
 8029af0:	defff904 	addi	sp,sp,-28
 8029af4:	10877004 	addi	r2,r2,7616
 8029af8:	dfc00615 	stw	ra,24(sp)
 8029afc:	dc400515 	stw	r17,20(sp)
 8029b00:	dc000415 	stw	r16,16(sp)
 8029b04:	3823883a 	mov	r17,r7
 8029b08:	14000017 	ldw	r16,0(r2)
 8029b0c:	d9000115 	stw	r4,4(sp)
 8029b10:	d9400215 	stw	r5,8(sp)
 8029b14:	d9800315 	stw	r6,12(sp)
 8029b18:	8024dd00 	call	8024dd0 <__locale_charset>
 8029b1c:	d9800317 	ldw	r6,12(sp)
 8029b20:	d9400217 	ldw	r5,8(sp)
 8029b24:	d9000117 	ldw	r4,4(sp)
 8029b28:	100f883a 	mov	r7,r2
 8029b2c:	dc400015 	stw	r17,0(sp)
 8029b30:	803ee83a 	callr	r16
 8029b34:	dfc00617 	ldw	ra,24(sp)
 8029b38:	dc400517 	ldw	r17,20(sp)
 8029b3c:	dc000417 	ldw	r16,16(sp)
 8029b40:	dec00704 	addi	sp,sp,28
 8029b44:	f800283a 	ret

08029b48 <__udivdi3>:
 8029b48:	defff404 	addi	sp,sp,-48
 8029b4c:	dcc00515 	stw	r19,20(sp)
 8029b50:	dc000215 	stw	r16,8(sp)
 8029b54:	dfc00b15 	stw	ra,44(sp)
 8029b58:	df000a15 	stw	fp,40(sp)
 8029b5c:	ddc00915 	stw	r23,36(sp)
 8029b60:	dd800815 	stw	r22,32(sp)
 8029b64:	dd400715 	stw	r21,28(sp)
 8029b68:	dd000615 	stw	r20,24(sp)
 8029b6c:	dc800415 	stw	r18,16(sp)
 8029b70:	dc400315 	stw	r17,12(sp)
 8029b74:	2027883a 	mov	r19,r4
 8029b78:	2821883a 	mov	r16,r5
 8029b7c:	3800461e 	bne	r7,zero,8029c98 <__udivdi3+0x150>
 8029b80:	3023883a 	mov	r17,r6
 8029b84:	2025883a 	mov	r18,r4
 8029b88:	2980572e 	bgeu	r5,r6,8029ce8 <__udivdi3+0x1a0>
 8029b8c:	00bfffd4 	movui	r2,65535
 8029b90:	282d883a 	mov	r22,r5
 8029b94:	1180b236 	bltu	r2,r6,8029e60 <__udivdi3+0x318>
 8029b98:	00803fc4 	movi	r2,255
 8029b9c:	1185803a 	cmpltu	r2,r2,r6
 8029ba0:	100490fa 	slli	r2,r2,3
 8029ba4:	3086d83a 	srl	r3,r6,r2
 8029ba8:	01000034 	movhi	r4,0
 8029bac:	21007504 	addi	r4,r4,468
 8029bb0:	20c7883a 	add	r3,r4,r3
 8029bb4:	18c00003 	ldbu	r3,0(r3)
 8029bb8:	1885883a 	add	r2,r3,r2
 8029bbc:	00c00804 	movi	r3,32
 8029bc0:	1887c83a 	sub	r3,r3,r2
 8029bc4:	18000526 	beq	r3,zero,8029bdc <__udivdi3+0x94>
 8029bc8:	80e0983a 	sll	r16,r16,r3
 8029bcc:	9884d83a 	srl	r2,r19,r2
 8029bd0:	30e2983a 	sll	r17,r6,r3
 8029bd4:	98e4983a 	sll	r18,r19,r3
 8029bd8:	142cb03a 	or	r22,r2,r16
 8029bdc:	882ad43a 	srli	r21,r17,16
 8029be0:	b009883a 	mov	r4,r22
 8029be4:	8d3fffcc 	andi	r20,r17,65535
 8029be8:	a80b883a 	mov	r5,r21
 8029bec:	802a8640 	call	802a864 <__umodsi3>
 8029bf0:	b009883a 	mov	r4,r22
 8029bf4:	a80b883a 	mov	r5,r21
 8029bf8:	1027883a 	mov	r19,r2
 8029bfc:	802a8000 	call	802a800 <__udivsi3>
 8029c00:	100b883a 	mov	r5,r2
 8029c04:	a009883a 	mov	r4,r20
 8029c08:	102d883a 	mov	r22,r2
 8029c0c:	802a8bc0 	call	802a8bc <__mulsi3>
 8029c10:	9826943a 	slli	r19,r19,16
 8029c14:	9006d43a 	srli	r3,r18,16
 8029c18:	1cc6b03a 	or	r3,r3,r19
 8029c1c:	1880052e 	bgeu	r3,r2,8029c34 <__udivdi3+0xec>
 8029c20:	1c47883a 	add	r3,r3,r17
 8029c24:	b13fffc4 	addi	r4,r22,-1
 8029c28:	1c400136 	bltu	r3,r17,8029c30 <__udivdi3+0xe8>
 8029c2c:	18814236 	bltu	r3,r2,802a138 <__udivdi3+0x5f0>
 8029c30:	202d883a 	mov	r22,r4
 8029c34:	18a1c83a 	sub	r16,r3,r2
 8029c38:	8009883a 	mov	r4,r16
 8029c3c:	a80b883a 	mov	r5,r21
 8029c40:	802a8640 	call	802a864 <__umodsi3>
 8029c44:	1027883a 	mov	r19,r2
 8029c48:	8009883a 	mov	r4,r16
 8029c4c:	a80b883a 	mov	r5,r21
 8029c50:	9826943a 	slli	r19,r19,16
 8029c54:	802a8000 	call	802a800 <__udivsi3>
 8029c58:	100b883a 	mov	r5,r2
 8029c5c:	a009883a 	mov	r4,r20
 8029c60:	94bfffcc 	andi	r18,r18,65535
 8029c64:	1021883a 	mov	r16,r2
 8029c68:	94e4b03a 	or	r18,r18,r19
 8029c6c:	802a8bc0 	call	802a8bc <__mulsi3>
 8029c70:	9080052e 	bgeu	r18,r2,8029c88 <__udivdi3+0x140>
 8029c74:	8ca5883a 	add	r18,r17,r18
 8029c78:	80ffffc4 	addi	r3,r16,-1
 8029c7c:	94410c36 	bltu	r18,r17,802a0b0 <__udivdi3+0x568>
 8029c80:	90810b2e 	bgeu	r18,r2,802a0b0 <__udivdi3+0x568>
 8029c84:	843fff84 	addi	r16,r16,-2
 8029c88:	b004943a 	slli	r2,r22,16
 8029c8c:	0007883a 	mov	r3,zero
 8029c90:	1404b03a 	or	r2,r2,r16
 8029c94:	00005e06 	br	8029e10 <__udivdi3+0x2c8>
 8029c98:	29c05b36 	bltu	r5,r7,8029e08 <__udivdi3+0x2c0>
 8029c9c:	00bfffd4 	movui	r2,65535
 8029ca0:	11c0672e 	bgeu	r2,r7,8029e40 <__udivdi3+0x2f8>
 8029ca4:	00804034 	movhi	r2,256
 8029ca8:	10bfffc4 	addi	r2,r2,-1
 8029cac:	11c10a36 	bltu	r2,r7,802a0d8 <__udivdi3+0x590>
 8029cb0:	00800404 	movi	r2,16
 8029cb4:	3886d83a 	srl	r3,r7,r2
 8029cb8:	01000034 	movhi	r4,0
 8029cbc:	21007504 	addi	r4,r4,468
 8029cc0:	20c7883a 	add	r3,r4,r3
 8029cc4:	18c00003 	ldbu	r3,0(r3)
 8029cc8:	05c00804 	movi	r23,32
 8029ccc:	1885883a 	add	r2,r3,r2
 8029cd0:	b8afc83a 	sub	r23,r23,r2
 8029cd4:	b800671e 	bne	r23,zero,8029e74 <__udivdi3+0x32c>
 8029cd8:	3c010536 	bltu	r7,r16,802a0f0 <__udivdi3+0x5a8>
 8029cdc:	9985403a 	cmpgeu	r2,r19,r6
 8029ce0:	0007883a 	mov	r3,zero
 8029ce4:	00004a06 	br	8029e10 <__udivdi3+0x2c8>
 8029ce8:	3000041e 	bne	r6,zero,8029cfc <__udivdi3+0x1b4>
 8029cec:	000b883a 	mov	r5,zero
 8029cf0:	01000044 	movi	r4,1
 8029cf4:	802a8000 	call	802a800 <__udivsi3>
 8029cf8:	1023883a 	mov	r17,r2
 8029cfc:	00bfffd4 	movui	r2,65535
 8029d00:	1440532e 	bgeu	r2,r17,8029e50 <__udivdi3+0x308>
 8029d04:	00804034 	movhi	r2,256
 8029d08:	10bfffc4 	addi	r2,r2,-1
 8029d0c:	1440f436 	bltu	r2,r17,802a0e0 <__udivdi3+0x598>
 8029d10:	00800404 	movi	r2,16
 8029d14:	8886d83a 	srl	r3,r17,r2
 8029d18:	01000034 	movhi	r4,0
 8029d1c:	21007504 	addi	r4,r4,468
 8029d20:	20c7883a 	add	r3,r4,r3
 8029d24:	18c00003 	ldbu	r3,0(r3)
 8029d28:	1885883a 	add	r2,r3,r2
 8029d2c:	00c00804 	movi	r3,32
 8029d30:	1887c83a 	sub	r3,r3,r2
 8029d34:	1800a51e 	bne	r3,zero,8029fcc <__udivdi3+0x484>
 8029d38:	882ad43a 	srli	r21,r17,16
 8029d3c:	8461c83a 	sub	r16,r16,r17
 8029d40:	8d3fffcc 	andi	r20,r17,65535
 8029d44:	00c00044 	movi	r3,1
 8029d48:	a80b883a 	mov	r5,r21
 8029d4c:	8009883a 	mov	r4,r16
 8029d50:	d8c00115 	stw	r3,4(sp)
 8029d54:	802a8640 	call	802a864 <__umodsi3>
 8029d58:	a80b883a 	mov	r5,r21
 8029d5c:	8009883a 	mov	r4,r16
 8029d60:	1027883a 	mov	r19,r2
 8029d64:	802a8000 	call	802a800 <__udivsi3>
 8029d68:	a00b883a 	mov	r5,r20
 8029d6c:	1009883a 	mov	r4,r2
 8029d70:	102d883a 	mov	r22,r2
 8029d74:	802a8bc0 	call	802a8bc <__mulsi3>
 8029d78:	9826943a 	slli	r19,r19,16
 8029d7c:	900ed43a 	srli	r7,r18,16
 8029d80:	d8c00117 	ldw	r3,4(sp)
 8029d84:	3cceb03a 	or	r7,r7,r19
 8029d88:	3880052e 	bgeu	r7,r2,8029da0 <__udivdi3+0x258>
 8029d8c:	3c4f883a 	add	r7,r7,r17
 8029d90:	b13fffc4 	addi	r4,r22,-1
 8029d94:	3c400136 	bltu	r7,r17,8029d9c <__udivdi3+0x254>
 8029d98:	3880e436 	bltu	r7,r2,802a12c <__udivdi3+0x5e4>
 8029d9c:	202d883a 	mov	r22,r4
 8029da0:	38a1c83a 	sub	r16,r7,r2
 8029da4:	8009883a 	mov	r4,r16
 8029da8:	a80b883a 	mov	r5,r21
 8029dac:	d8c00115 	stw	r3,4(sp)
 8029db0:	802a8640 	call	802a864 <__umodsi3>
 8029db4:	1027883a 	mov	r19,r2
 8029db8:	8009883a 	mov	r4,r16
 8029dbc:	a80b883a 	mov	r5,r21
 8029dc0:	9826943a 	slli	r19,r19,16
 8029dc4:	802a8000 	call	802a800 <__udivsi3>
 8029dc8:	a00b883a 	mov	r5,r20
 8029dcc:	1009883a 	mov	r4,r2
 8029dd0:	94bfffcc 	andi	r18,r18,65535
 8029dd4:	1021883a 	mov	r16,r2
 8029dd8:	94e4b03a 	or	r18,r18,r19
 8029ddc:	802a8bc0 	call	802a8bc <__mulsi3>
 8029de0:	d8c00117 	ldw	r3,4(sp)
 8029de4:	9080052e 	bgeu	r18,r2,8029dfc <__udivdi3+0x2b4>
 8029de8:	8ca5883a 	add	r18,r17,r18
 8029dec:	813fffc4 	addi	r4,r16,-1
 8029df0:	9440ad36 	bltu	r18,r17,802a0a8 <__udivdi3+0x560>
 8029df4:	9080ac2e 	bgeu	r18,r2,802a0a8 <__udivdi3+0x560>
 8029df8:	843fff84 	addi	r16,r16,-2
 8029dfc:	b004943a 	slli	r2,r22,16
 8029e00:	1404b03a 	or	r2,r2,r16
 8029e04:	00000206 	br	8029e10 <__udivdi3+0x2c8>
 8029e08:	0007883a 	mov	r3,zero
 8029e0c:	0005883a 	mov	r2,zero
 8029e10:	dfc00b17 	ldw	ra,44(sp)
 8029e14:	df000a17 	ldw	fp,40(sp)
 8029e18:	ddc00917 	ldw	r23,36(sp)
 8029e1c:	dd800817 	ldw	r22,32(sp)
 8029e20:	dd400717 	ldw	r21,28(sp)
 8029e24:	dd000617 	ldw	r20,24(sp)
 8029e28:	dcc00517 	ldw	r19,20(sp)
 8029e2c:	dc800417 	ldw	r18,16(sp)
 8029e30:	dc400317 	ldw	r17,12(sp)
 8029e34:	dc000217 	ldw	r16,8(sp)
 8029e38:	dec00c04 	addi	sp,sp,48
 8029e3c:	f800283a 	ret
 8029e40:	00803fc4 	movi	r2,255
 8029e44:	11c5803a 	cmpltu	r2,r2,r7
 8029e48:	100490fa 	slli	r2,r2,3
 8029e4c:	003f9906 	br	8029cb4 <__flash_rwdata_start+0xffffa198>
 8029e50:	00803fc4 	movi	r2,255
 8029e54:	1445803a 	cmpltu	r2,r2,r17
 8029e58:	100490fa 	slli	r2,r2,3
 8029e5c:	003fad06 	br	8029d14 <__flash_rwdata_start+0xffffa1f8>
 8029e60:	00804034 	movhi	r2,256
 8029e64:	10bfffc4 	addi	r2,r2,-1
 8029e68:	11809f36 	bltu	r2,r6,802a0e8 <__udivdi3+0x5a0>
 8029e6c:	00800404 	movi	r2,16
 8029e70:	003f4c06 	br	8029ba4 <__flash_rwdata_start+0xffffa088>
 8029e74:	3dce983a 	sll	r7,r7,r23
 8029e78:	30b8d83a 	srl	fp,r6,r2
 8029e7c:	80a2d83a 	srl	r17,r16,r2
 8029e80:	35cc983a 	sll	r6,r6,r23
 8029e84:	3f38b03a 	or	fp,r7,fp
 8029e88:	e024d43a 	srli	r18,fp,16
 8029e8c:	9884d83a 	srl	r2,r19,r2
 8029e90:	85e0983a 	sll	r16,r16,r23
 8029e94:	8809883a 	mov	r4,r17
 8029e98:	900b883a 	mov	r5,r18
 8029e9c:	d9800015 	stw	r6,0(sp)
 8029ea0:	1420b03a 	or	r16,r2,r16
 8029ea4:	802a8640 	call	802a864 <__umodsi3>
 8029ea8:	900b883a 	mov	r5,r18
 8029eac:	8809883a 	mov	r4,r17
 8029eb0:	1029883a 	mov	r20,r2
 8029eb4:	e5bfffcc 	andi	r22,fp,65535
 8029eb8:	802a8000 	call	802a800 <__udivsi3>
 8029ebc:	100b883a 	mov	r5,r2
 8029ec0:	b009883a 	mov	r4,r22
 8029ec4:	102b883a 	mov	r21,r2
 8029ec8:	802a8bc0 	call	802a8bc <__mulsi3>
 8029ecc:	a028943a 	slli	r20,r20,16
 8029ed0:	8006d43a 	srli	r3,r16,16
 8029ed4:	1d06b03a 	or	r3,r3,r20
 8029ed8:	1880042e 	bgeu	r3,r2,8029eec <__udivdi3+0x3a4>
 8029edc:	1f07883a 	add	r3,r3,fp
 8029ee0:	a93fffc4 	addi	r4,r21,-1
 8029ee4:	1f00892e 	bgeu	r3,fp,802a10c <__udivdi3+0x5c4>
 8029ee8:	202b883a 	mov	r21,r4
 8029eec:	18a3c83a 	sub	r17,r3,r2
 8029ef0:	8809883a 	mov	r4,r17
 8029ef4:	900b883a 	mov	r5,r18
 8029ef8:	802a8640 	call	802a864 <__umodsi3>
 8029efc:	1029883a 	mov	r20,r2
 8029f00:	8809883a 	mov	r4,r17
 8029f04:	900b883a 	mov	r5,r18
 8029f08:	a028943a 	slli	r20,r20,16
 8029f0c:	802a8000 	call	802a800 <__udivsi3>
 8029f10:	100b883a 	mov	r5,r2
 8029f14:	b009883a 	mov	r4,r22
 8029f18:	843fffcc 	andi	r16,r16,65535
 8029f1c:	1023883a 	mov	r17,r2
 8029f20:	8520b03a 	or	r16,r16,r20
 8029f24:	802a8bc0 	call	802a8bc <__mulsi3>
 8029f28:	8080042e 	bgeu	r16,r2,8029f3c <__udivdi3+0x3f4>
 8029f2c:	8721883a 	add	r16,r16,fp
 8029f30:	88ffffc4 	addi	r3,r17,-1
 8029f34:	8700712e 	bgeu	r16,fp,802a0fc <__udivdi3+0x5b4>
 8029f38:	1823883a 	mov	r17,r3
 8029f3c:	a80e943a 	slli	r7,r21,16
 8029f40:	d8c00017 	ldw	r3,0(sp)
 8029f44:	80a1c83a 	sub	r16,r16,r2
 8029f48:	3c64b03a 	or	r18,r7,r17
 8029f4c:	1d3fffcc 	andi	r20,r3,65535
 8029f50:	9022d43a 	srli	r17,r18,16
 8029f54:	95bfffcc 	andi	r22,r18,65535
 8029f58:	a00b883a 	mov	r5,r20
 8029f5c:	b009883a 	mov	r4,r22
 8029f60:	182ad43a 	srli	r21,r3,16
 8029f64:	802a8bc0 	call	802a8bc <__mulsi3>
 8029f68:	a00b883a 	mov	r5,r20
 8029f6c:	8809883a 	mov	r4,r17
 8029f70:	1039883a 	mov	fp,r2
 8029f74:	802a8bc0 	call	802a8bc <__mulsi3>
 8029f78:	8809883a 	mov	r4,r17
 8029f7c:	a80b883a 	mov	r5,r21
 8029f80:	1029883a 	mov	r20,r2
 8029f84:	802a8bc0 	call	802a8bc <__mulsi3>
 8029f88:	a80b883a 	mov	r5,r21
 8029f8c:	b009883a 	mov	r4,r22
 8029f90:	1023883a 	mov	r17,r2
 8029f94:	802a8bc0 	call	802a8bc <__mulsi3>
 8029f98:	e006d43a 	srli	r3,fp,16
 8029f9c:	1505883a 	add	r2,r2,r20
 8029fa0:	1887883a 	add	r3,r3,r2
 8029fa4:	1d00022e 	bgeu	r3,r20,8029fb0 <__udivdi3+0x468>
 8029fa8:	00800074 	movhi	r2,1
 8029fac:	88a3883a 	add	r17,r17,r2
 8029fb0:	1804d43a 	srli	r2,r3,16
 8029fb4:	1463883a 	add	r17,r2,r17
 8029fb8:	84404436 	bltu	r16,r17,802a0cc <__udivdi3+0x584>
 8029fbc:	84403e26 	beq	r16,r17,802a0b8 <__udivdi3+0x570>
 8029fc0:	9005883a 	mov	r2,r18
 8029fc4:	0007883a 	mov	r3,zero
 8029fc8:	003f9106 	br	8029e10 <__flash_rwdata_start+0xffffa2f4>
 8029fcc:	88e2983a 	sll	r17,r17,r3
 8029fd0:	80aed83a 	srl	r23,r16,r2
 8029fd4:	80e0983a 	sll	r16,r16,r3
 8029fd8:	882ad43a 	srli	r21,r17,16
 8029fdc:	9884d83a 	srl	r2,r19,r2
 8029fe0:	b809883a 	mov	r4,r23
 8029fe4:	a80b883a 	mov	r5,r21
 8029fe8:	98e4983a 	sll	r18,r19,r3
 8029fec:	142cb03a 	or	r22,r2,r16
 8029ff0:	802a8640 	call	802a864 <__umodsi3>
 8029ff4:	b809883a 	mov	r4,r23
 8029ff8:	a80b883a 	mov	r5,r21
 8029ffc:	1027883a 	mov	r19,r2
 802a000:	8d3fffcc 	andi	r20,r17,65535
 802a004:	802a8000 	call	802a800 <__udivsi3>
 802a008:	a009883a 	mov	r4,r20
 802a00c:	100b883a 	mov	r5,r2
 802a010:	102f883a 	mov	r23,r2
 802a014:	802a8bc0 	call	802a8bc <__mulsi3>
 802a018:	9826943a 	slli	r19,r19,16
 802a01c:	b008d43a 	srli	r4,r22,16
 802a020:	24c8b03a 	or	r4,r4,r19
 802a024:	2080062e 	bgeu	r4,r2,802a040 <__udivdi3+0x4f8>
 802a028:	2449883a 	add	r4,r4,r17
 802a02c:	b8ffffc4 	addi	r3,r23,-1
 802a030:	24403c36 	bltu	r4,r17,802a124 <__udivdi3+0x5dc>
 802a034:	20803b2e 	bgeu	r4,r2,802a124 <__udivdi3+0x5dc>
 802a038:	bdffff84 	addi	r23,r23,-2
 802a03c:	2449883a 	add	r4,r4,r17
 802a040:	20a1c83a 	sub	r16,r4,r2
 802a044:	a80b883a 	mov	r5,r21
 802a048:	8009883a 	mov	r4,r16
 802a04c:	802a8640 	call	802a864 <__umodsi3>
 802a050:	a80b883a 	mov	r5,r21
 802a054:	8009883a 	mov	r4,r16
 802a058:	1027883a 	mov	r19,r2
 802a05c:	802a8000 	call	802a800 <__udivsi3>
 802a060:	a009883a 	mov	r4,r20
 802a064:	100b883a 	mov	r5,r2
 802a068:	9826943a 	slli	r19,r19,16
 802a06c:	1039883a 	mov	fp,r2
 802a070:	802a8bc0 	call	802a8bc <__mulsi3>
 802a074:	b13fffcc 	andi	r4,r22,65535
 802a078:	24c8b03a 	or	r4,r4,r19
 802a07c:	2080062e 	bgeu	r4,r2,802a098 <__udivdi3+0x550>
 802a080:	2449883a 	add	r4,r4,r17
 802a084:	e0ffffc4 	addi	r3,fp,-1
 802a088:	24402436 	bltu	r4,r17,802a11c <__udivdi3+0x5d4>
 802a08c:	2080232e 	bgeu	r4,r2,802a11c <__udivdi3+0x5d4>
 802a090:	e73fff84 	addi	fp,fp,-2
 802a094:	2449883a 	add	r4,r4,r17
 802a098:	b82e943a 	slli	r23,r23,16
 802a09c:	20a1c83a 	sub	r16,r4,r2
 802a0a0:	bf06b03a 	or	r3,r23,fp
 802a0a4:	003f2806 	br	8029d48 <__flash_rwdata_start+0xffffa22c>
 802a0a8:	2021883a 	mov	r16,r4
 802a0ac:	003f5306 	br	8029dfc <__flash_rwdata_start+0xffffa2e0>
 802a0b0:	1821883a 	mov	r16,r3
 802a0b4:	003ef406 	br	8029c88 <__flash_rwdata_start+0xffffa16c>
 802a0b8:	1806943a 	slli	r3,r3,16
 802a0bc:	9de6983a 	sll	r19,r19,r23
 802a0c0:	e73fffcc 	andi	fp,fp,65535
 802a0c4:	1f07883a 	add	r3,r3,fp
 802a0c8:	98ffbd2e 	bgeu	r19,r3,8029fc0 <__flash_rwdata_start+0xffffa4a4>
 802a0cc:	90bfffc4 	addi	r2,r18,-1
 802a0d0:	0007883a 	mov	r3,zero
 802a0d4:	003f4e06 	br	8029e10 <__flash_rwdata_start+0xffffa2f4>
 802a0d8:	00800604 	movi	r2,24
 802a0dc:	003ef506 	br	8029cb4 <__flash_rwdata_start+0xffffa198>
 802a0e0:	00800604 	movi	r2,24
 802a0e4:	003f0b06 	br	8029d14 <__flash_rwdata_start+0xffffa1f8>
 802a0e8:	00800604 	movi	r2,24
 802a0ec:	003ead06 	br	8029ba4 <__flash_rwdata_start+0xffffa088>
 802a0f0:	0007883a 	mov	r3,zero
 802a0f4:	00800044 	movi	r2,1
 802a0f8:	003f4506 	br	8029e10 <__flash_rwdata_start+0xffffa2f4>
 802a0fc:	80bf8e2e 	bgeu	r16,r2,8029f38 <__flash_rwdata_start+0xffffa41c>
 802a100:	8c7fff84 	addi	r17,r17,-2
 802a104:	8721883a 	add	r16,r16,fp
 802a108:	003f8c06 	br	8029f3c <__flash_rwdata_start+0xffffa420>
 802a10c:	18bf762e 	bgeu	r3,r2,8029ee8 <__flash_rwdata_start+0xffffa3cc>
 802a110:	ad7fff84 	addi	r21,r21,-2
 802a114:	1f07883a 	add	r3,r3,fp
 802a118:	003f7406 	br	8029eec <__flash_rwdata_start+0xffffa3d0>
 802a11c:	1839883a 	mov	fp,r3
 802a120:	003fdd06 	br	802a098 <__flash_rwdata_start+0xffffa57c>
 802a124:	182f883a 	mov	r23,r3
 802a128:	003fc506 	br	802a040 <__flash_rwdata_start+0xffffa524>
 802a12c:	b5bfff84 	addi	r22,r22,-2
 802a130:	3c4f883a 	add	r7,r7,r17
 802a134:	003f1a06 	br	8029da0 <__flash_rwdata_start+0xffffa284>
 802a138:	b5bfff84 	addi	r22,r22,-2
 802a13c:	1c47883a 	add	r3,r3,r17
 802a140:	003ebc06 	br	8029c34 <__flash_rwdata_start+0xffffa118>

0802a144 <__umoddi3>:
 802a144:	defff304 	addi	sp,sp,-52
 802a148:	df000b15 	stw	fp,44(sp)
 802a14c:	dc400415 	stw	r17,16(sp)
 802a150:	dc000315 	stw	r16,12(sp)
 802a154:	dfc00c15 	stw	ra,48(sp)
 802a158:	ddc00a15 	stw	r23,40(sp)
 802a15c:	dd800915 	stw	r22,36(sp)
 802a160:	dd400815 	stw	r21,32(sp)
 802a164:	dd000715 	stw	r20,28(sp)
 802a168:	dcc00615 	stw	r19,24(sp)
 802a16c:	dc800515 	stw	r18,20(sp)
 802a170:	2021883a 	mov	r16,r4
 802a174:	2823883a 	mov	r17,r5
 802a178:	2839883a 	mov	fp,r5
 802a17c:	3800401e 	bne	r7,zero,802a280 <__umoddi3+0x13c>
 802a180:	3027883a 	mov	r19,r6
 802a184:	2029883a 	mov	r20,r4
 802a188:	2980552e 	bgeu	r5,r6,802a2e0 <__umoddi3+0x19c>
 802a18c:	00bfffd4 	movui	r2,65535
 802a190:	1180a236 	bltu	r2,r6,802a41c <__umoddi3+0x2d8>
 802a194:	01003fc4 	movi	r4,255
 802a198:	2189803a 	cmpltu	r4,r4,r6
 802a19c:	200890fa 	slli	r4,r4,3
 802a1a0:	3104d83a 	srl	r2,r6,r4
 802a1a4:	00c00034 	movhi	r3,0
 802a1a8:	18c07504 	addi	r3,r3,468
 802a1ac:	1885883a 	add	r2,r3,r2
 802a1b0:	10c00003 	ldbu	r3,0(r2)
 802a1b4:	00800804 	movi	r2,32
 802a1b8:	1909883a 	add	r4,r3,r4
 802a1bc:	1125c83a 	sub	r18,r2,r4
 802a1c0:	90000526 	beq	r18,zero,802a1d8 <__umoddi3+0x94>
 802a1c4:	8ca2983a 	sll	r17,r17,r18
 802a1c8:	8108d83a 	srl	r4,r16,r4
 802a1cc:	34a6983a 	sll	r19,r6,r18
 802a1d0:	84a8983a 	sll	r20,r16,r18
 802a1d4:	2478b03a 	or	fp,r4,r17
 802a1d8:	982cd43a 	srli	r22,r19,16
 802a1dc:	e009883a 	mov	r4,fp
 802a1e0:	9dffffcc 	andi	r23,r19,65535
 802a1e4:	b00b883a 	mov	r5,r22
 802a1e8:	802a8640 	call	802a864 <__umodsi3>
 802a1ec:	b00b883a 	mov	r5,r22
 802a1f0:	e009883a 	mov	r4,fp
 802a1f4:	102b883a 	mov	r21,r2
 802a1f8:	802a8000 	call	802a800 <__udivsi3>
 802a1fc:	100b883a 	mov	r5,r2
 802a200:	b809883a 	mov	r4,r23
 802a204:	802a8bc0 	call	802a8bc <__mulsi3>
 802a208:	a82a943a 	slli	r21,r21,16
 802a20c:	a006d43a 	srli	r3,r20,16
 802a210:	1d46b03a 	or	r3,r3,r21
 802a214:	1880032e 	bgeu	r3,r2,802a224 <__umoddi3+0xe0>
 802a218:	1cc7883a 	add	r3,r3,r19
 802a21c:	1cc00136 	bltu	r3,r19,802a224 <__umoddi3+0xe0>
 802a220:	18813136 	bltu	r3,r2,802a6e8 <__umoddi3+0x5a4>
 802a224:	18a1c83a 	sub	r16,r3,r2
 802a228:	b00b883a 	mov	r5,r22
 802a22c:	8009883a 	mov	r4,r16
 802a230:	802a8640 	call	802a864 <__umodsi3>
 802a234:	b00b883a 	mov	r5,r22
 802a238:	8009883a 	mov	r4,r16
 802a23c:	1023883a 	mov	r17,r2
 802a240:	802a8000 	call	802a800 <__udivsi3>
 802a244:	100b883a 	mov	r5,r2
 802a248:	b809883a 	mov	r4,r23
 802a24c:	8822943a 	slli	r17,r17,16
 802a250:	802a8bc0 	call	802a8bc <__mulsi3>
 802a254:	a0ffffcc 	andi	r3,r20,65535
 802a258:	1c46b03a 	or	r3,r3,r17
 802a25c:	1880042e 	bgeu	r3,r2,802a270 <__umoddi3+0x12c>
 802a260:	1cc7883a 	add	r3,r3,r19
 802a264:	1cc00236 	bltu	r3,r19,802a270 <__umoddi3+0x12c>
 802a268:	1880012e 	bgeu	r3,r2,802a270 <__umoddi3+0x12c>
 802a26c:	1cc7883a 	add	r3,r3,r19
 802a270:	1885c83a 	sub	r2,r3,r2
 802a274:	1484d83a 	srl	r2,r2,r18
 802a278:	0007883a 	mov	r3,zero
 802a27c:	00005306 	br	802a3cc <__umoddi3+0x288>
 802a280:	29c05036 	bltu	r5,r7,802a3c4 <__umoddi3+0x280>
 802a284:	00bfffd4 	movui	r2,65535
 802a288:	11c05c2e 	bgeu	r2,r7,802a3fc <__umoddi3+0x2b8>
 802a28c:	00804034 	movhi	r2,256
 802a290:	10bfffc4 	addi	r2,r2,-1
 802a294:	11c10636 	bltu	r2,r7,802a6b0 <__umoddi3+0x56c>
 802a298:	01000404 	movi	r4,16
 802a29c:	3904d83a 	srl	r2,r7,r4
 802a2a0:	00c00034 	movhi	r3,0
 802a2a4:	18c07504 	addi	r3,r3,468
 802a2a8:	1885883a 	add	r2,r3,r2
 802a2ac:	14c00003 	ldbu	r19,0(r2)
 802a2b0:	00c00804 	movi	r3,32
 802a2b4:	9927883a 	add	r19,r19,r4
 802a2b8:	1ce9c83a 	sub	r20,r3,r19
 802a2bc:	a0005c1e 	bne	r20,zero,802a430 <__umoddi3+0x2ec>
 802a2c0:	3c400136 	bltu	r7,r17,802a2c8 <__umoddi3+0x184>
 802a2c4:	81810a36 	bltu	r16,r6,802a6f0 <__umoddi3+0x5ac>
 802a2c8:	8185c83a 	sub	r2,r16,r6
 802a2cc:	89e3c83a 	sub	r17,r17,r7
 802a2d0:	8089803a 	cmpltu	r4,r16,r2
 802a2d4:	8939c83a 	sub	fp,r17,r4
 802a2d8:	e007883a 	mov	r3,fp
 802a2dc:	00003b06 	br	802a3cc <__umoddi3+0x288>
 802a2e0:	3000041e 	bne	r6,zero,802a2f4 <__umoddi3+0x1b0>
 802a2e4:	000b883a 	mov	r5,zero
 802a2e8:	01000044 	movi	r4,1
 802a2ec:	802a8000 	call	802a800 <__udivsi3>
 802a2f0:	1027883a 	mov	r19,r2
 802a2f4:	00bfffd4 	movui	r2,65535
 802a2f8:	14c0442e 	bgeu	r2,r19,802a40c <__umoddi3+0x2c8>
 802a2fc:	00804034 	movhi	r2,256
 802a300:	10bfffc4 	addi	r2,r2,-1
 802a304:	14c0ec36 	bltu	r2,r19,802a6b8 <__umoddi3+0x574>
 802a308:	00800404 	movi	r2,16
 802a30c:	9886d83a 	srl	r3,r19,r2
 802a310:	01000034 	movhi	r4,0
 802a314:	21007504 	addi	r4,r4,468
 802a318:	20c7883a 	add	r3,r4,r3
 802a31c:	18c00003 	ldbu	r3,0(r3)
 802a320:	1887883a 	add	r3,r3,r2
 802a324:	00800804 	movi	r2,32
 802a328:	10e5c83a 	sub	r18,r2,r3
 802a32c:	9000ab1e 	bne	r18,zero,802a5dc <__umoddi3+0x498>
 802a330:	982cd43a 	srli	r22,r19,16
 802a334:	8ce3c83a 	sub	r17,r17,r19
 802a338:	9dffffcc 	andi	r23,r19,65535
 802a33c:	b00b883a 	mov	r5,r22
 802a340:	8809883a 	mov	r4,r17
 802a344:	802a8640 	call	802a864 <__umodsi3>
 802a348:	b00b883a 	mov	r5,r22
 802a34c:	8809883a 	mov	r4,r17
 802a350:	102b883a 	mov	r21,r2
 802a354:	802a8000 	call	802a800 <__udivsi3>
 802a358:	b80b883a 	mov	r5,r23
 802a35c:	1009883a 	mov	r4,r2
 802a360:	802a8bc0 	call	802a8bc <__mulsi3>
 802a364:	a82a943a 	slli	r21,r21,16
 802a368:	a006d43a 	srli	r3,r20,16
 802a36c:	1d46b03a 	or	r3,r3,r21
 802a370:	1880042e 	bgeu	r3,r2,802a384 <__umoddi3+0x240>
 802a374:	1cc7883a 	add	r3,r3,r19
 802a378:	1cc00236 	bltu	r3,r19,802a384 <__umoddi3+0x240>
 802a37c:	1880012e 	bgeu	r3,r2,802a384 <__umoddi3+0x240>
 802a380:	1cc7883a 	add	r3,r3,r19
 802a384:	18a1c83a 	sub	r16,r3,r2
 802a388:	b00b883a 	mov	r5,r22
 802a38c:	8009883a 	mov	r4,r16
 802a390:	802a8640 	call	802a864 <__umodsi3>
 802a394:	1023883a 	mov	r17,r2
 802a398:	b00b883a 	mov	r5,r22
 802a39c:	8009883a 	mov	r4,r16
 802a3a0:	802a8000 	call	802a800 <__udivsi3>
 802a3a4:	8822943a 	slli	r17,r17,16
 802a3a8:	b80b883a 	mov	r5,r23
 802a3ac:	1009883a 	mov	r4,r2
 802a3b0:	802a8bc0 	call	802a8bc <__mulsi3>
 802a3b4:	a53fffcc 	andi	r20,r20,65535
 802a3b8:	a446b03a 	or	r3,r20,r17
 802a3bc:	18bfac2e 	bgeu	r3,r2,802a270 <__flash_rwdata_start+0xffffa754>
 802a3c0:	003fa706 	br	802a260 <__flash_rwdata_start+0xffffa744>
 802a3c4:	2005883a 	mov	r2,r4
 802a3c8:	2807883a 	mov	r3,r5
 802a3cc:	dfc00c17 	ldw	ra,48(sp)
 802a3d0:	df000b17 	ldw	fp,44(sp)
 802a3d4:	ddc00a17 	ldw	r23,40(sp)
 802a3d8:	dd800917 	ldw	r22,36(sp)
 802a3dc:	dd400817 	ldw	r21,32(sp)
 802a3e0:	dd000717 	ldw	r20,28(sp)
 802a3e4:	dcc00617 	ldw	r19,24(sp)
 802a3e8:	dc800517 	ldw	r18,20(sp)
 802a3ec:	dc400417 	ldw	r17,16(sp)
 802a3f0:	dc000317 	ldw	r16,12(sp)
 802a3f4:	dec00d04 	addi	sp,sp,52
 802a3f8:	f800283a 	ret
 802a3fc:	04c03fc4 	movi	r19,255
 802a400:	99c9803a 	cmpltu	r4,r19,r7
 802a404:	200890fa 	slli	r4,r4,3
 802a408:	003fa406 	br	802a29c <__flash_rwdata_start+0xffffa780>
 802a40c:	00803fc4 	movi	r2,255
 802a410:	14c5803a 	cmpltu	r2,r2,r19
 802a414:	100490fa 	slli	r2,r2,3
 802a418:	003fbc06 	br	802a30c <__flash_rwdata_start+0xffffa7f0>
 802a41c:	00804034 	movhi	r2,256
 802a420:	10bfffc4 	addi	r2,r2,-1
 802a424:	1180a636 	bltu	r2,r6,802a6c0 <__umoddi3+0x57c>
 802a428:	01000404 	movi	r4,16
 802a42c:	003f5c06 	br	802a1a0 <__flash_rwdata_start+0xffffa684>
 802a430:	3d0e983a 	sll	r7,r7,r20
 802a434:	34ead83a 	srl	r21,r6,r19
 802a438:	8cc6d83a 	srl	r3,r17,r19
 802a43c:	8d10983a 	sll	r8,r17,r20
 802a440:	3d6ab03a 	or	r21,r7,r21
 802a444:	a82cd43a 	srli	r22,r21,16
 802a448:	84e2d83a 	srl	r17,r16,r19
 802a44c:	1809883a 	mov	r4,r3
 802a450:	b00b883a 	mov	r5,r22
 802a454:	8a22b03a 	or	r17,r17,r8
 802a458:	3524983a 	sll	r18,r6,r20
 802a45c:	dc400015 	stw	r17,0(sp)
 802a460:	d8c00115 	stw	r3,4(sp)
 802a464:	802a8640 	call	802a864 <__umodsi3>
 802a468:	d8c00117 	ldw	r3,4(sp)
 802a46c:	b00b883a 	mov	r5,r22
 802a470:	1039883a 	mov	fp,r2
 802a474:	1809883a 	mov	r4,r3
 802a478:	802a8000 	call	802a800 <__udivsi3>
 802a47c:	adffffcc 	andi	r23,r21,65535
 802a480:	100b883a 	mov	r5,r2
 802a484:	b809883a 	mov	r4,r23
 802a488:	1023883a 	mov	r17,r2
 802a48c:	802a8bc0 	call	802a8bc <__mulsi3>
 802a490:	d9400017 	ldw	r5,0(sp)
 802a494:	e008943a 	slli	r4,fp,16
 802a498:	8520983a 	sll	r16,r16,r20
 802a49c:	2806d43a 	srli	r3,r5,16
 802a4a0:	1906b03a 	or	r3,r3,r4
 802a4a4:	1880042e 	bgeu	r3,r2,802a4b8 <__umoddi3+0x374>
 802a4a8:	1d47883a 	add	r3,r3,r21
 802a4ac:	893fffc4 	addi	r4,r17,-1
 802a4b0:	1d40892e 	bgeu	r3,r21,802a6d8 <__umoddi3+0x594>
 802a4b4:	2023883a 	mov	r17,r4
 802a4b8:	18b9c83a 	sub	fp,r3,r2
 802a4bc:	b00b883a 	mov	r5,r22
 802a4c0:	e009883a 	mov	r4,fp
 802a4c4:	802a8640 	call	802a864 <__umodsi3>
 802a4c8:	b00b883a 	mov	r5,r22
 802a4cc:	e009883a 	mov	r4,fp
 802a4d0:	d8800215 	stw	r2,8(sp)
 802a4d4:	802a8000 	call	802a800 <__udivsi3>
 802a4d8:	100b883a 	mov	r5,r2
 802a4dc:	b809883a 	mov	r4,r23
 802a4e0:	102d883a 	mov	r22,r2
 802a4e4:	802a8bc0 	call	802a8bc <__mulsi3>
 802a4e8:	d9800217 	ldw	r6,8(sp)
 802a4ec:	d8c00017 	ldw	r3,0(sp)
 802a4f0:	300c943a 	slli	r6,r6,16
 802a4f4:	1a3fffcc 	andi	r8,r3,65535
 802a4f8:	4190b03a 	or	r8,r8,r6
 802a4fc:	4080042e 	bgeu	r8,r2,802a510 <__umoddi3+0x3cc>
 802a500:	4551883a 	add	r8,r8,r21
 802a504:	b0ffffc4 	addi	r3,r22,-1
 802a508:	45406f2e 	bgeu	r8,r21,802a6c8 <__umoddi3+0x584>
 802a50c:	182d883a 	mov	r22,r3
 802a510:	880e943a 	slli	r7,r17,16
 802a514:	9006d43a 	srli	r3,r18,16
 802a518:	91bfffcc 	andi	r6,r18,65535
 802a51c:	3dacb03a 	or	r22,r7,r22
 802a520:	b02ed43a 	srli	r23,r22,16
 802a524:	b5bfffcc 	andi	r22,r22,65535
 802a528:	300b883a 	mov	r5,r6
 802a52c:	b009883a 	mov	r4,r22
 802a530:	40a3c83a 	sub	r17,r8,r2
 802a534:	d8c00115 	stw	r3,4(sp)
 802a538:	d9800215 	stw	r6,8(sp)
 802a53c:	802a8bc0 	call	802a8bc <__mulsi3>
 802a540:	d9800217 	ldw	r6,8(sp)
 802a544:	b809883a 	mov	r4,r23
 802a548:	1039883a 	mov	fp,r2
 802a54c:	300b883a 	mov	r5,r6
 802a550:	802a8bc0 	call	802a8bc <__mulsi3>
 802a554:	d8c00117 	ldw	r3,4(sp)
 802a558:	b809883a 	mov	r4,r23
 802a55c:	d8800215 	stw	r2,8(sp)
 802a560:	180b883a 	mov	r5,r3
 802a564:	802a8bc0 	call	802a8bc <__mulsi3>
 802a568:	d8c00117 	ldw	r3,4(sp)
 802a56c:	b009883a 	mov	r4,r22
 802a570:	102f883a 	mov	r23,r2
 802a574:	180b883a 	mov	r5,r3
 802a578:	802a8bc0 	call	802a8bc <__mulsi3>
 802a57c:	d9800217 	ldw	r6,8(sp)
 802a580:	e006d43a 	srli	r3,fp,16
 802a584:	1185883a 	add	r2,r2,r6
 802a588:	1885883a 	add	r2,r3,r2
 802a58c:	1180022e 	bgeu	r2,r6,802a598 <__umoddi3+0x454>
 802a590:	00c00074 	movhi	r3,1
 802a594:	b8ef883a 	add	r23,r23,r3
 802a598:	1006d43a 	srli	r3,r2,16
 802a59c:	1004943a 	slli	r2,r2,16
 802a5a0:	e73fffcc 	andi	fp,fp,65535
 802a5a4:	1dc7883a 	add	r3,r3,r23
 802a5a8:	1739883a 	add	fp,r2,fp
 802a5ac:	88c03a36 	bltu	r17,r3,802a698 <__umoddi3+0x554>
 802a5b0:	88c05126 	beq	r17,r3,802a6f8 <__umoddi3+0x5b4>
 802a5b4:	88c9c83a 	sub	r4,r17,r3
 802a5b8:	e00f883a 	mov	r7,fp
 802a5bc:	81cfc83a 	sub	r7,r16,r7
 802a5c0:	81c7803a 	cmpltu	r3,r16,r7
 802a5c4:	20c7c83a 	sub	r3,r4,r3
 802a5c8:	1cc4983a 	sll	r2,r3,r19
 802a5cc:	3d0ed83a 	srl	r7,r7,r20
 802a5d0:	1d06d83a 	srl	r3,r3,r20
 802a5d4:	11c4b03a 	or	r2,r2,r7
 802a5d8:	003f7c06 	br	802a3cc <__flash_rwdata_start+0xffffa8b0>
 802a5dc:	9ca6983a 	sll	r19,r19,r18
 802a5e0:	88f8d83a 	srl	fp,r17,r3
 802a5e4:	80c4d83a 	srl	r2,r16,r3
 802a5e8:	982cd43a 	srli	r22,r19,16
 802a5ec:	8ca2983a 	sll	r17,r17,r18
 802a5f0:	e009883a 	mov	r4,fp
 802a5f4:	b00b883a 	mov	r5,r22
 802a5f8:	146ab03a 	or	r21,r2,r17
 802a5fc:	802a8640 	call	802a864 <__umodsi3>
 802a600:	b00b883a 	mov	r5,r22
 802a604:	e009883a 	mov	r4,fp
 802a608:	1029883a 	mov	r20,r2
 802a60c:	9dffffcc 	andi	r23,r19,65535
 802a610:	802a8000 	call	802a800 <__udivsi3>
 802a614:	b809883a 	mov	r4,r23
 802a618:	100b883a 	mov	r5,r2
 802a61c:	802a8bc0 	call	802a8bc <__mulsi3>
 802a620:	a008943a 	slli	r4,r20,16
 802a624:	a806d43a 	srli	r3,r21,16
 802a628:	84a8983a 	sll	r20,r16,r18
 802a62c:	1906b03a 	or	r3,r3,r4
 802a630:	1880042e 	bgeu	r3,r2,802a644 <__umoddi3+0x500>
 802a634:	1cc7883a 	add	r3,r3,r19
 802a638:	1cc00236 	bltu	r3,r19,802a644 <__umoddi3+0x500>
 802a63c:	1880012e 	bgeu	r3,r2,802a644 <__umoddi3+0x500>
 802a640:	1cc7883a 	add	r3,r3,r19
 802a644:	18a3c83a 	sub	r17,r3,r2
 802a648:	b00b883a 	mov	r5,r22
 802a64c:	8809883a 	mov	r4,r17
 802a650:	802a8640 	call	802a864 <__umodsi3>
 802a654:	b00b883a 	mov	r5,r22
 802a658:	8809883a 	mov	r4,r17
 802a65c:	1021883a 	mov	r16,r2
 802a660:	802a8000 	call	802a800 <__udivsi3>
 802a664:	100b883a 	mov	r5,r2
 802a668:	b809883a 	mov	r4,r23
 802a66c:	8020943a 	slli	r16,r16,16
 802a670:	802a8bc0 	call	802a8bc <__mulsi3>
 802a674:	a8ffffcc 	andi	r3,r21,65535
 802a678:	1c06b03a 	or	r3,r3,r16
 802a67c:	1880042e 	bgeu	r3,r2,802a690 <__umoddi3+0x54c>
 802a680:	1cc7883a 	add	r3,r3,r19
 802a684:	1cc00236 	bltu	r3,r19,802a690 <__umoddi3+0x54c>
 802a688:	1880012e 	bgeu	r3,r2,802a690 <__umoddi3+0x54c>
 802a68c:	1cc7883a 	add	r3,r3,r19
 802a690:	18a3c83a 	sub	r17,r3,r2
 802a694:	003f2906 	br	802a33c <__flash_rwdata_start+0xffffa820>
 802a698:	e48fc83a 	sub	r7,fp,r18
 802a69c:	1d49c83a 	sub	r4,r3,r21
 802a6a0:	e1f9803a 	cmpltu	fp,fp,r7
 802a6a4:	2739c83a 	sub	fp,r4,fp
 802a6a8:	8f09c83a 	sub	r4,r17,fp
 802a6ac:	003fc306 	br	802a5bc <__flash_rwdata_start+0xffffaaa0>
 802a6b0:	01000604 	movi	r4,24
 802a6b4:	003ef906 	br	802a29c <__flash_rwdata_start+0xffffa780>
 802a6b8:	00800604 	movi	r2,24
 802a6bc:	003f1306 	br	802a30c <__flash_rwdata_start+0xffffa7f0>
 802a6c0:	01000604 	movi	r4,24
 802a6c4:	003eb606 	br	802a1a0 <__flash_rwdata_start+0xffffa684>
 802a6c8:	40bf902e 	bgeu	r8,r2,802a50c <__flash_rwdata_start+0xffffa9f0>
 802a6cc:	b5bfff84 	addi	r22,r22,-2
 802a6d0:	4551883a 	add	r8,r8,r21
 802a6d4:	003f8e06 	br	802a510 <__flash_rwdata_start+0xffffa9f4>
 802a6d8:	18bf762e 	bgeu	r3,r2,802a4b4 <__flash_rwdata_start+0xffffa998>
 802a6dc:	8c7fff84 	addi	r17,r17,-2
 802a6e0:	1d47883a 	add	r3,r3,r21
 802a6e4:	003f7406 	br	802a4b8 <__flash_rwdata_start+0xffffa99c>
 802a6e8:	1cc7883a 	add	r3,r3,r19
 802a6ec:	003ecd06 	br	802a224 <__flash_rwdata_start+0xffffa708>
 802a6f0:	8005883a 	mov	r2,r16
 802a6f4:	003ef806 	br	802a2d8 <__flash_rwdata_start+0xffffa7bc>
 802a6f8:	873fe736 	bltu	r16,fp,802a698 <__flash_rwdata_start+0xffffab7c>
 802a6fc:	e00f883a 	mov	r7,fp
 802a700:	0009883a 	mov	r4,zero
 802a704:	003fad06 	br	802a5bc <__flash_rwdata_start+0xffffaaa0>

0802a708 <__divsi3>:
 802a708:	20001b16 	blt	r4,zero,802a778 <__divsi3+0x70>
 802a70c:	000f883a 	mov	r7,zero
 802a710:	28001616 	blt	r5,zero,802a76c <__divsi3+0x64>
 802a714:	200d883a 	mov	r6,r4
 802a718:	29001a2e 	bgeu	r5,r4,802a784 <__divsi3+0x7c>
 802a71c:	00800804 	movi	r2,32
 802a720:	00c00044 	movi	r3,1
 802a724:	00000106 	br	802a72c <__divsi3+0x24>
 802a728:	10000d26 	beq	r2,zero,802a760 <__divsi3+0x58>
 802a72c:	294b883a 	add	r5,r5,r5
 802a730:	10bfffc4 	addi	r2,r2,-1
 802a734:	18c7883a 	add	r3,r3,r3
 802a738:	293ffb36 	bltu	r5,r4,802a728 <__flash_rwdata_start+0xffffac0c>
 802a73c:	0005883a 	mov	r2,zero
 802a740:	18000726 	beq	r3,zero,802a760 <__divsi3+0x58>
 802a744:	0005883a 	mov	r2,zero
 802a748:	31400236 	bltu	r6,r5,802a754 <__divsi3+0x4c>
 802a74c:	314dc83a 	sub	r6,r6,r5
 802a750:	10c4b03a 	or	r2,r2,r3
 802a754:	1806d07a 	srli	r3,r3,1
 802a758:	280ad07a 	srli	r5,r5,1
 802a75c:	183ffa1e 	bne	r3,zero,802a748 <__flash_rwdata_start+0xffffac2c>
 802a760:	38000126 	beq	r7,zero,802a768 <__divsi3+0x60>
 802a764:	0085c83a 	sub	r2,zero,r2
 802a768:	f800283a 	ret
 802a76c:	014bc83a 	sub	r5,zero,r5
 802a770:	39c0005c 	xori	r7,r7,1
 802a774:	003fe706 	br	802a714 <__flash_rwdata_start+0xffffabf8>
 802a778:	0109c83a 	sub	r4,zero,r4
 802a77c:	01c00044 	movi	r7,1
 802a780:	003fe306 	br	802a710 <__flash_rwdata_start+0xffffabf4>
 802a784:	00c00044 	movi	r3,1
 802a788:	003fee06 	br	802a744 <__flash_rwdata_start+0xffffac28>

0802a78c <__modsi3>:
 802a78c:	20001716 	blt	r4,zero,802a7ec <__modsi3+0x60>
 802a790:	000f883a 	mov	r7,zero
 802a794:	2005883a 	mov	r2,r4
 802a798:	28001216 	blt	r5,zero,802a7e4 <__modsi3+0x58>
 802a79c:	2900162e 	bgeu	r5,r4,802a7f8 <__modsi3+0x6c>
 802a7a0:	01800804 	movi	r6,32
 802a7a4:	00c00044 	movi	r3,1
 802a7a8:	00000106 	br	802a7b0 <__modsi3+0x24>
 802a7ac:	30000a26 	beq	r6,zero,802a7d8 <__modsi3+0x4c>
 802a7b0:	294b883a 	add	r5,r5,r5
 802a7b4:	31bfffc4 	addi	r6,r6,-1
 802a7b8:	18c7883a 	add	r3,r3,r3
 802a7bc:	293ffb36 	bltu	r5,r4,802a7ac <__flash_rwdata_start+0xffffac90>
 802a7c0:	18000526 	beq	r3,zero,802a7d8 <__modsi3+0x4c>
 802a7c4:	1806d07a 	srli	r3,r3,1
 802a7c8:	11400136 	bltu	r2,r5,802a7d0 <__modsi3+0x44>
 802a7cc:	1145c83a 	sub	r2,r2,r5
 802a7d0:	280ad07a 	srli	r5,r5,1
 802a7d4:	183ffb1e 	bne	r3,zero,802a7c4 <__flash_rwdata_start+0xffffaca8>
 802a7d8:	38000126 	beq	r7,zero,802a7e0 <__modsi3+0x54>
 802a7dc:	0085c83a 	sub	r2,zero,r2
 802a7e0:	f800283a 	ret
 802a7e4:	014bc83a 	sub	r5,zero,r5
 802a7e8:	003fec06 	br	802a79c <__flash_rwdata_start+0xffffac80>
 802a7ec:	0109c83a 	sub	r4,zero,r4
 802a7f0:	01c00044 	movi	r7,1
 802a7f4:	003fe706 	br	802a794 <__flash_rwdata_start+0xffffac78>
 802a7f8:	00c00044 	movi	r3,1
 802a7fc:	003ff106 	br	802a7c4 <__flash_rwdata_start+0xffffaca8>

0802a800 <__udivsi3>:
 802a800:	200d883a 	mov	r6,r4
 802a804:	2900152e 	bgeu	r5,r4,802a85c <__udivsi3+0x5c>
 802a808:	28001416 	blt	r5,zero,802a85c <__udivsi3+0x5c>
 802a80c:	00800804 	movi	r2,32
 802a810:	00c00044 	movi	r3,1
 802a814:	00000206 	br	802a820 <__udivsi3+0x20>
 802a818:	10000e26 	beq	r2,zero,802a854 <__udivsi3+0x54>
 802a81c:	28000516 	blt	r5,zero,802a834 <__udivsi3+0x34>
 802a820:	294b883a 	add	r5,r5,r5
 802a824:	10bfffc4 	addi	r2,r2,-1
 802a828:	18c7883a 	add	r3,r3,r3
 802a82c:	293ffa36 	bltu	r5,r4,802a818 <__flash_rwdata_start+0xffffacfc>
 802a830:	18000826 	beq	r3,zero,802a854 <__udivsi3+0x54>
 802a834:	0005883a 	mov	r2,zero
 802a838:	31400236 	bltu	r6,r5,802a844 <__udivsi3+0x44>
 802a83c:	314dc83a 	sub	r6,r6,r5
 802a840:	10c4b03a 	or	r2,r2,r3
 802a844:	1806d07a 	srli	r3,r3,1
 802a848:	280ad07a 	srli	r5,r5,1
 802a84c:	183ffa1e 	bne	r3,zero,802a838 <__flash_rwdata_start+0xffffad1c>
 802a850:	f800283a 	ret
 802a854:	0005883a 	mov	r2,zero
 802a858:	f800283a 	ret
 802a85c:	00c00044 	movi	r3,1
 802a860:	003ff406 	br	802a834 <__flash_rwdata_start+0xffffad18>

0802a864 <__umodsi3>:
 802a864:	2005883a 	mov	r2,r4
 802a868:	2900122e 	bgeu	r5,r4,802a8b4 <__umodsi3+0x50>
 802a86c:	28001116 	blt	r5,zero,802a8b4 <__umodsi3+0x50>
 802a870:	01800804 	movi	r6,32
 802a874:	00c00044 	movi	r3,1
 802a878:	00000206 	br	802a884 <__umodsi3+0x20>
 802a87c:	30000c26 	beq	r6,zero,802a8b0 <__umodsi3+0x4c>
 802a880:	28000516 	blt	r5,zero,802a898 <__umodsi3+0x34>
 802a884:	294b883a 	add	r5,r5,r5
 802a888:	31bfffc4 	addi	r6,r6,-1
 802a88c:	18c7883a 	add	r3,r3,r3
 802a890:	293ffa36 	bltu	r5,r4,802a87c <__flash_rwdata_start+0xffffad60>
 802a894:	18000626 	beq	r3,zero,802a8b0 <__umodsi3+0x4c>
 802a898:	1806d07a 	srli	r3,r3,1
 802a89c:	11400136 	bltu	r2,r5,802a8a4 <__umodsi3+0x40>
 802a8a0:	1145c83a 	sub	r2,r2,r5
 802a8a4:	280ad07a 	srli	r5,r5,1
 802a8a8:	183ffb1e 	bne	r3,zero,802a898 <__flash_rwdata_start+0xffffad7c>
 802a8ac:	f800283a 	ret
 802a8b0:	f800283a 	ret
 802a8b4:	00c00044 	movi	r3,1
 802a8b8:	003ff706 	br	802a898 <__flash_rwdata_start+0xffffad7c>

0802a8bc <__mulsi3>:
 802a8bc:	0005883a 	mov	r2,zero
 802a8c0:	20000726 	beq	r4,zero,802a8e0 <__mulsi3+0x24>
 802a8c4:	20c0004c 	andi	r3,r4,1
 802a8c8:	2008d07a 	srli	r4,r4,1
 802a8cc:	18000126 	beq	r3,zero,802a8d4 <__mulsi3+0x18>
 802a8d0:	1145883a 	add	r2,r2,r5
 802a8d4:	294b883a 	add	r5,r5,r5
 802a8d8:	203ffa1e 	bne	r4,zero,802a8c4 <__flash_rwdata_start+0xffffada8>
 802a8dc:	f800283a 	ret
 802a8e0:	f800283a 	ret

0802a8e4 <__adddf3>:
 802a8e4:	02c00434 	movhi	r11,16
 802a8e8:	5affffc4 	addi	r11,r11,-1
 802a8ec:	2806d7fa 	srli	r3,r5,31
 802a8f0:	2ad4703a 	and	r10,r5,r11
 802a8f4:	3ad2703a 	and	r9,r7,r11
 802a8f8:	3804d53a 	srli	r2,r7,20
 802a8fc:	3018d77a 	srli	r12,r6,29
 802a900:	280ad53a 	srli	r5,r5,20
 802a904:	501490fa 	slli	r10,r10,3
 802a908:	2010d77a 	srli	r8,r4,29
 802a90c:	481290fa 	slli	r9,r9,3
 802a910:	380ed7fa 	srli	r7,r7,31
 802a914:	defffb04 	addi	sp,sp,-20
 802a918:	dc800215 	stw	r18,8(sp)
 802a91c:	dc400115 	stw	r17,4(sp)
 802a920:	dc000015 	stw	r16,0(sp)
 802a924:	dfc00415 	stw	ra,16(sp)
 802a928:	dcc00315 	stw	r19,12(sp)
 802a92c:	1c803fcc 	andi	r18,r3,255
 802a930:	2c01ffcc 	andi	r16,r5,2047
 802a934:	5210b03a 	or	r8,r10,r8
 802a938:	202290fa 	slli	r17,r4,3
 802a93c:	1081ffcc 	andi	r2,r2,2047
 802a940:	4b12b03a 	or	r9,r9,r12
 802a944:	300c90fa 	slli	r6,r6,3
 802a948:	91c07526 	beq	r18,r7,802ab20 <__adddf3+0x23c>
 802a94c:	8087c83a 	sub	r3,r16,r2
 802a950:	00c0ab0e 	bge	zero,r3,802ac00 <__adddf3+0x31c>
 802a954:	10002a1e 	bne	r2,zero,802aa00 <__adddf3+0x11c>
 802a958:	4984b03a 	or	r2,r9,r6
 802a95c:	1000961e 	bne	r2,zero,802abb8 <__adddf3+0x2d4>
 802a960:	888001cc 	andi	r2,r17,7
 802a964:	10000726 	beq	r2,zero,802a984 <__adddf3+0xa0>
 802a968:	888003cc 	andi	r2,r17,15
 802a96c:	00c00104 	movi	r3,4
 802a970:	10c00426 	beq	r2,r3,802a984 <__adddf3+0xa0>
 802a974:	88c7883a 	add	r3,r17,r3
 802a978:	1c63803a 	cmpltu	r17,r3,r17
 802a97c:	4451883a 	add	r8,r8,r17
 802a980:	1823883a 	mov	r17,r3
 802a984:	4080202c 	andhi	r2,r8,128
 802a988:	10005926 	beq	r2,zero,802aaf0 <__adddf3+0x20c>
 802a98c:	84000044 	addi	r16,r16,1
 802a990:	0081ffc4 	movi	r2,2047
 802a994:	8080ba26 	beq	r16,r2,802ac80 <__adddf3+0x39c>
 802a998:	00bfe034 	movhi	r2,65408
 802a99c:	10bfffc4 	addi	r2,r2,-1
 802a9a0:	4090703a 	and	r8,r8,r2
 802a9a4:	4004977a 	slli	r2,r8,29
 802a9a8:	4010927a 	slli	r8,r8,9
 802a9ac:	8822d0fa 	srli	r17,r17,3
 802a9b0:	8401ffcc 	andi	r16,r16,2047
 802a9b4:	4010d33a 	srli	r8,r8,12
 802a9b8:	9007883a 	mov	r3,r18
 802a9bc:	1444b03a 	or	r2,r2,r17
 802a9c0:	8401ffcc 	andi	r16,r16,2047
 802a9c4:	8020953a 	slli	r16,r16,20
 802a9c8:	18c03fcc 	andi	r3,r3,255
 802a9cc:	01000434 	movhi	r4,16
 802a9d0:	213fffc4 	addi	r4,r4,-1
 802a9d4:	180697fa 	slli	r3,r3,31
 802a9d8:	4110703a 	and	r8,r8,r4
 802a9dc:	4410b03a 	or	r8,r8,r16
 802a9e0:	40c6b03a 	or	r3,r8,r3
 802a9e4:	dfc00417 	ldw	ra,16(sp)
 802a9e8:	dcc00317 	ldw	r19,12(sp)
 802a9ec:	dc800217 	ldw	r18,8(sp)
 802a9f0:	dc400117 	ldw	r17,4(sp)
 802a9f4:	dc000017 	ldw	r16,0(sp)
 802a9f8:	dec00504 	addi	sp,sp,20
 802a9fc:	f800283a 	ret
 802aa00:	0081ffc4 	movi	r2,2047
 802aa04:	80bfd626 	beq	r16,r2,802a960 <__flash_rwdata_start+0xffffae44>
 802aa08:	4a402034 	orhi	r9,r9,128
 802aa0c:	00800e04 	movi	r2,56
 802aa10:	10c09f16 	blt	r2,r3,802ac90 <__adddf3+0x3ac>
 802aa14:	008007c4 	movi	r2,31
 802aa18:	10c0c216 	blt	r2,r3,802ad24 <__adddf3+0x440>
 802aa1c:	00800804 	movi	r2,32
 802aa20:	10c5c83a 	sub	r2,r2,r3
 802aa24:	488a983a 	sll	r5,r9,r2
 802aa28:	30c8d83a 	srl	r4,r6,r3
 802aa2c:	3084983a 	sll	r2,r6,r2
 802aa30:	48c6d83a 	srl	r3,r9,r3
 802aa34:	290cb03a 	or	r6,r5,r4
 802aa38:	1004c03a 	cmpne	r2,r2,zero
 802aa3c:	308cb03a 	or	r6,r6,r2
 802aa40:	898dc83a 	sub	r6,r17,r6
 802aa44:	89a3803a 	cmpltu	r17,r17,r6
 802aa48:	40d1c83a 	sub	r8,r8,r3
 802aa4c:	4451c83a 	sub	r8,r8,r17
 802aa50:	3023883a 	mov	r17,r6
 802aa54:	4080202c 	andhi	r2,r8,128
 802aa58:	10002326 	beq	r2,zero,802aae8 <__adddf3+0x204>
 802aa5c:	04c02034 	movhi	r19,128
 802aa60:	9cffffc4 	addi	r19,r19,-1
 802aa64:	44e6703a 	and	r19,r8,r19
 802aa68:	98007626 	beq	r19,zero,802ac44 <__adddf3+0x360>
 802aa6c:	9809883a 	mov	r4,r19
 802aa70:	802d1240 	call	802d124 <__clzsi2>
 802aa74:	10fffe04 	addi	r3,r2,-8
 802aa78:	010007c4 	movi	r4,31
 802aa7c:	20c07716 	blt	r4,r3,802ac5c <__adddf3+0x378>
 802aa80:	00800804 	movi	r2,32
 802aa84:	10c5c83a 	sub	r2,r2,r3
 802aa88:	8884d83a 	srl	r2,r17,r2
 802aa8c:	98d0983a 	sll	r8,r19,r3
 802aa90:	88e2983a 	sll	r17,r17,r3
 802aa94:	1204b03a 	or	r2,r2,r8
 802aa98:	1c007416 	blt	r3,r16,802ac6c <__adddf3+0x388>
 802aa9c:	1c21c83a 	sub	r16,r3,r16
 802aaa0:	82000044 	addi	r8,r16,1
 802aaa4:	00c007c4 	movi	r3,31
 802aaa8:	1a009116 	blt	r3,r8,802acf0 <__adddf3+0x40c>
 802aaac:	00c00804 	movi	r3,32
 802aab0:	1a07c83a 	sub	r3,r3,r8
 802aab4:	8a08d83a 	srl	r4,r17,r8
 802aab8:	88e2983a 	sll	r17,r17,r3
 802aabc:	10c6983a 	sll	r3,r2,r3
 802aac0:	1210d83a 	srl	r8,r2,r8
 802aac4:	8804c03a 	cmpne	r2,r17,zero
 802aac8:	1906b03a 	or	r3,r3,r4
 802aacc:	18a2b03a 	or	r17,r3,r2
 802aad0:	0021883a 	mov	r16,zero
 802aad4:	003fa206 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802aad8:	1890b03a 	or	r8,r3,r2
 802aadc:	40017d26 	beq	r8,zero,802b0d4 <__adddf3+0x7f0>
 802aae0:	1011883a 	mov	r8,r2
 802aae4:	1823883a 	mov	r17,r3
 802aae8:	888001cc 	andi	r2,r17,7
 802aaec:	103f9e1e 	bne	r2,zero,802a968 <__flash_rwdata_start+0xffffae4c>
 802aaf0:	4004977a 	slli	r2,r8,29
 802aaf4:	8822d0fa 	srli	r17,r17,3
 802aaf8:	4010d0fa 	srli	r8,r8,3
 802aafc:	9007883a 	mov	r3,r18
 802ab00:	1444b03a 	or	r2,r2,r17
 802ab04:	0101ffc4 	movi	r4,2047
 802ab08:	81002426 	beq	r16,r4,802ab9c <__adddf3+0x2b8>
 802ab0c:	8120703a 	and	r16,r16,r4
 802ab10:	01000434 	movhi	r4,16
 802ab14:	213fffc4 	addi	r4,r4,-1
 802ab18:	4110703a 	and	r8,r8,r4
 802ab1c:	003fa806 	br	802a9c0 <__flash_rwdata_start+0xffffaea4>
 802ab20:	8089c83a 	sub	r4,r16,r2
 802ab24:	01005e0e 	bge	zero,r4,802aca0 <__adddf3+0x3bc>
 802ab28:	10002b26 	beq	r2,zero,802abd8 <__adddf3+0x2f4>
 802ab2c:	0081ffc4 	movi	r2,2047
 802ab30:	80bf8b26 	beq	r16,r2,802a960 <__flash_rwdata_start+0xffffae44>
 802ab34:	4a402034 	orhi	r9,r9,128
 802ab38:	00800e04 	movi	r2,56
 802ab3c:	1100a40e 	bge	r2,r4,802add0 <__adddf3+0x4ec>
 802ab40:	498cb03a 	or	r6,r9,r6
 802ab44:	300ac03a 	cmpne	r5,r6,zero
 802ab48:	0013883a 	mov	r9,zero
 802ab4c:	2c4b883a 	add	r5,r5,r17
 802ab50:	2c63803a 	cmpltu	r17,r5,r17
 802ab54:	4a11883a 	add	r8,r9,r8
 802ab58:	8a11883a 	add	r8,r17,r8
 802ab5c:	2823883a 	mov	r17,r5
 802ab60:	4080202c 	andhi	r2,r8,128
 802ab64:	103fe026 	beq	r2,zero,802aae8 <__flash_rwdata_start+0xffffafcc>
 802ab68:	84000044 	addi	r16,r16,1
 802ab6c:	0081ffc4 	movi	r2,2047
 802ab70:	8080d226 	beq	r16,r2,802aebc <__adddf3+0x5d8>
 802ab74:	00bfe034 	movhi	r2,65408
 802ab78:	10bfffc4 	addi	r2,r2,-1
 802ab7c:	4090703a 	and	r8,r8,r2
 802ab80:	880ad07a 	srli	r5,r17,1
 802ab84:	400897fa 	slli	r4,r8,31
 802ab88:	88c0004c 	andi	r3,r17,1
 802ab8c:	28e2b03a 	or	r17,r5,r3
 802ab90:	4010d07a 	srli	r8,r8,1
 802ab94:	2462b03a 	or	r17,r4,r17
 802ab98:	003f7106 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802ab9c:	4088b03a 	or	r4,r8,r2
 802aba0:	20014526 	beq	r4,zero,802b0b8 <__adddf3+0x7d4>
 802aba4:	01000434 	movhi	r4,16
 802aba8:	42000234 	orhi	r8,r8,8
 802abac:	213fffc4 	addi	r4,r4,-1
 802abb0:	4110703a 	and	r8,r8,r4
 802abb4:	003f8206 	br	802a9c0 <__flash_rwdata_start+0xffffaea4>
 802abb8:	18ffffc4 	addi	r3,r3,-1
 802abbc:	1800491e 	bne	r3,zero,802ace4 <__adddf3+0x400>
 802abc0:	898bc83a 	sub	r5,r17,r6
 802abc4:	8963803a 	cmpltu	r17,r17,r5
 802abc8:	4251c83a 	sub	r8,r8,r9
 802abcc:	4451c83a 	sub	r8,r8,r17
 802abd0:	2823883a 	mov	r17,r5
 802abd4:	003f9f06 	br	802aa54 <__flash_rwdata_start+0xffffaf38>
 802abd8:	4984b03a 	or	r2,r9,r6
 802abdc:	103f6026 	beq	r2,zero,802a960 <__flash_rwdata_start+0xffffae44>
 802abe0:	213fffc4 	addi	r4,r4,-1
 802abe4:	2000931e 	bne	r4,zero,802ae34 <__adddf3+0x550>
 802abe8:	898d883a 	add	r6,r17,r6
 802abec:	3463803a 	cmpltu	r17,r6,r17
 802abf0:	4251883a 	add	r8,r8,r9
 802abf4:	8a11883a 	add	r8,r17,r8
 802abf8:	3023883a 	mov	r17,r6
 802abfc:	003fd806 	br	802ab60 <__flash_rwdata_start+0xffffb044>
 802ac00:	1800541e 	bne	r3,zero,802ad54 <__adddf3+0x470>
 802ac04:	80800044 	addi	r2,r16,1
 802ac08:	1081ffcc 	andi	r2,r2,2047
 802ac0c:	00c00044 	movi	r3,1
 802ac10:	1880a00e 	bge	r3,r2,802ae94 <__adddf3+0x5b0>
 802ac14:	8989c83a 	sub	r4,r17,r6
 802ac18:	8905803a 	cmpltu	r2,r17,r4
 802ac1c:	4267c83a 	sub	r19,r8,r9
 802ac20:	98a7c83a 	sub	r19,r19,r2
 802ac24:	9880202c 	andhi	r2,r19,128
 802ac28:	10006326 	beq	r2,zero,802adb8 <__adddf3+0x4d4>
 802ac2c:	3463c83a 	sub	r17,r6,r17
 802ac30:	4a07c83a 	sub	r3,r9,r8
 802ac34:	344d803a 	cmpltu	r6,r6,r17
 802ac38:	19a7c83a 	sub	r19,r3,r6
 802ac3c:	3825883a 	mov	r18,r7
 802ac40:	983f8a1e 	bne	r19,zero,802aa6c <__flash_rwdata_start+0xffffaf50>
 802ac44:	8809883a 	mov	r4,r17
 802ac48:	802d1240 	call	802d124 <__clzsi2>
 802ac4c:	10800804 	addi	r2,r2,32
 802ac50:	10fffe04 	addi	r3,r2,-8
 802ac54:	010007c4 	movi	r4,31
 802ac58:	20ff890e 	bge	r4,r3,802aa80 <__flash_rwdata_start+0xffffaf64>
 802ac5c:	10bff604 	addi	r2,r2,-40
 802ac60:	8884983a 	sll	r2,r17,r2
 802ac64:	0023883a 	mov	r17,zero
 802ac68:	1c3f8c0e 	bge	r3,r16,802aa9c <__flash_rwdata_start+0xffffaf80>
 802ac6c:	023fe034 	movhi	r8,65408
 802ac70:	423fffc4 	addi	r8,r8,-1
 802ac74:	80e1c83a 	sub	r16,r16,r3
 802ac78:	1210703a 	and	r8,r2,r8
 802ac7c:	003f3806 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802ac80:	9007883a 	mov	r3,r18
 802ac84:	0011883a 	mov	r8,zero
 802ac88:	0005883a 	mov	r2,zero
 802ac8c:	003f4c06 	br	802a9c0 <__flash_rwdata_start+0xffffaea4>
 802ac90:	498cb03a 	or	r6,r9,r6
 802ac94:	300cc03a 	cmpne	r6,r6,zero
 802ac98:	0007883a 	mov	r3,zero
 802ac9c:	003f6806 	br	802aa40 <__flash_rwdata_start+0xffffaf24>
 802aca0:	20009c1e 	bne	r4,zero,802af14 <__adddf3+0x630>
 802aca4:	80800044 	addi	r2,r16,1
 802aca8:	1141ffcc 	andi	r5,r2,2047
 802acac:	01000044 	movi	r4,1
 802acb0:	2140670e 	bge	r4,r5,802ae50 <__adddf3+0x56c>
 802acb4:	0101ffc4 	movi	r4,2047
 802acb8:	11007f26 	beq	r2,r4,802aeb8 <__adddf3+0x5d4>
 802acbc:	898d883a 	add	r6,r17,r6
 802acc0:	4247883a 	add	r3,r8,r9
 802acc4:	3451803a 	cmpltu	r8,r6,r17
 802acc8:	40d1883a 	add	r8,r8,r3
 802accc:	402297fa 	slli	r17,r8,31
 802acd0:	300cd07a 	srli	r6,r6,1
 802acd4:	4010d07a 	srli	r8,r8,1
 802acd8:	1021883a 	mov	r16,r2
 802acdc:	89a2b03a 	or	r17,r17,r6
 802ace0:	003f1f06 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802ace4:	0081ffc4 	movi	r2,2047
 802ace8:	80bf481e 	bne	r16,r2,802aa0c <__flash_rwdata_start+0xffffaef0>
 802acec:	003f1c06 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802acf0:	843ff844 	addi	r16,r16,-31
 802acf4:	01000804 	movi	r4,32
 802acf8:	1406d83a 	srl	r3,r2,r16
 802acfc:	41005026 	beq	r8,r4,802ae40 <__adddf3+0x55c>
 802ad00:	01001004 	movi	r4,64
 802ad04:	2211c83a 	sub	r8,r4,r8
 802ad08:	1204983a 	sll	r2,r2,r8
 802ad0c:	88a2b03a 	or	r17,r17,r2
 802ad10:	8822c03a 	cmpne	r17,r17,zero
 802ad14:	1c62b03a 	or	r17,r3,r17
 802ad18:	0011883a 	mov	r8,zero
 802ad1c:	0021883a 	mov	r16,zero
 802ad20:	003f7106 	br	802aae8 <__flash_rwdata_start+0xffffafcc>
 802ad24:	193ff804 	addi	r4,r3,-32
 802ad28:	00800804 	movi	r2,32
 802ad2c:	4908d83a 	srl	r4,r9,r4
 802ad30:	18804526 	beq	r3,r2,802ae48 <__adddf3+0x564>
 802ad34:	00801004 	movi	r2,64
 802ad38:	10c5c83a 	sub	r2,r2,r3
 802ad3c:	4886983a 	sll	r3,r9,r2
 802ad40:	198cb03a 	or	r6,r3,r6
 802ad44:	300cc03a 	cmpne	r6,r6,zero
 802ad48:	218cb03a 	or	r6,r4,r6
 802ad4c:	0007883a 	mov	r3,zero
 802ad50:	003f3b06 	br	802aa40 <__flash_rwdata_start+0xffffaf24>
 802ad54:	80002a26 	beq	r16,zero,802ae00 <__adddf3+0x51c>
 802ad58:	0101ffc4 	movi	r4,2047
 802ad5c:	11006826 	beq	r2,r4,802af00 <__adddf3+0x61c>
 802ad60:	00c7c83a 	sub	r3,zero,r3
 802ad64:	42002034 	orhi	r8,r8,128
 802ad68:	01000e04 	movi	r4,56
 802ad6c:	20c07c16 	blt	r4,r3,802af60 <__adddf3+0x67c>
 802ad70:	010007c4 	movi	r4,31
 802ad74:	20c0da16 	blt	r4,r3,802b0e0 <__adddf3+0x7fc>
 802ad78:	01000804 	movi	r4,32
 802ad7c:	20c9c83a 	sub	r4,r4,r3
 802ad80:	4114983a 	sll	r10,r8,r4
 802ad84:	88cad83a 	srl	r5,r17,r3
 802ad88:	8908983a 	sll	r4,r17,r4
 802ad8c:	40c6d83a 	srl	r3,r8,r3
 802ad90:	5162b03a 	or	r17,r10,r5
 802ad94:	2008c03a 	cmpne	r4,r4,zero
 802ad98:	8922b03a 	or	r17,r17,r4
 802ad9c:	3463c83a 	sub	r17,r6,r17
 802ada0:	48c7c83a 	sub	r3,r9,r3
 802ada4:	344d803a 	cmpltu	r6,r6,r17
 802ada8:	1991c83a 	sub	r8,r3,r6
 802adac:	1021883a 	mov	r16,r2
 802adb0:	3825883a 	mov	r18,r7
 802adb4:	003f2706 	br	802aa54 <__flash_rwdata_start+0xffffaf38>
 802adb8:	24d0b03a 	or	r8,r4,r19
 802adbc:	40001b1e 	bne	r8,zero,802ae2c <__adddf3+0x548>
 802adc0:	0005883a 	mov	r2,zero
 802adc4:	0007883a 	mov	r3,zero
 802adc8:	0021883a 	mov	r16,zero
 802adcc:	003f4d06 	br	802ab04 <__flash_rwdata_start+0xffffafe8>
 802add0:	008007c4 	movi	r2,31
 802add4:	11003c16 	blt	r2,r4,802aec8 <__adddf3+0x5e4>
 802add8:	00800804 	movi	r2,32
 802addc:	1105c83a 	sub	r2,r2,r4
 802ade0:	488e983a 	sll	r7,r9,r2
 802ade4:	310ad83a 	srl	r5,r6,r4
 802ade8:	3084983a 	sll	r2,r6,r2
 802adec:	4912d83a 	srl	r9,r9,r4
 802adf0:	394ab03a 	or	r5,r7,r5
 802adf4:	1004c03a 	cmpne	r2,r2,zero
 802adf8:	288ab03a 	or	r5,r5,r2
 802adfc:	003f5306 	br	802ab4c <__flash_rwdata_start+0xffffb030>
 802ae00:	4448b03a 	or	r4,r8,r17
 802ae04:	20003e26 	beq	r4,zero,802af00 <__adddf3+0x61c>
 802ae08:	00c6303a 	nor	r3,zero,r3
 802ae0c:	18003a1e 	bne	r3,zero,802aef8 <__adddf3+0x614>
 802ae10:	3463c83a 	sub	r17,r6,r17
 802ae14:	4a07c83a 	sub	r3,r9,r8
 802ae18:	344d803a 	cmpltu	r6,r6,r17
 802ae1c:	1991c83a 	sub	r8,r3,r6
 802ae20:	1021883a 	mov	r16,r2
 802ae24:	3825883a 	mov	r18,r7
 802ae28:	003f0a06 	br	802aa54 <__flash_rwdata_start+0xffffaf38>
 802ae2c:	2023883a 	mov	r17,r4
 802ae30:	003f0d06 	br	802aa68 <__flash_rwdata_start+0xffffaf4c>
 802ae34:	0081ffc4 	movi	r2,2047
 802ae38:	80bf3f1e 	bne	r16,r2,802ab38 <__flash_rwdata_start+0xffffb01c>
 802ae3c:	003ec806 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802ae40:	0005883a 	mov	r2,zero
 802ae44:	003fb106 	br	802ad0c <__flash_rwdata_start+0xffffb1f0>
 802ae48:	0007883a 	mov	r3,zero
 802ae4c:	003fbc06 	br	802ad40 <__flash_rwdata_start+0xffffb224>
 802ae50:	4444b03a 	or	r2,r8,r17
 802ae54:	8000871e 	bne	r16,zero,802b074 <__adddf3+0x790>
 802ae58:	1000ba26 	beq	r2,zero,802b144 <__adddf3+0x860>
 802ae5c:	4984b03a 	or	r2,r9,r6
 802ae60:	103ebf26 	beq	r2,zero,802a960 <__flash_rwdata_start+0xffffae44>
 802ae64:	8985883a 	add	r2,r17,r6
 802ae68:	4247883a 	add	r3,r8,r9
 802ae6c:	1451803a 	cmpltu	r8,r2,r17
 802ae70:	40d1883a 	add	r8,r8,r3
 802ae74:	40c0202c 	andhi	r3,r8,128
 802ae78:	1023883a 	mov	r17,r2
 802ae7c:	183f1a26 	beq	r3,zero,802aae8 <__flash_rwdata_start+0xffffafcc>
 802ae80:	00bfe034 	movhi	r2,65408
 802ae84:	10bfffc4 	addi	r2,r2,-1
 802ae88:	2021883a 	mov	r16,r4
 802ae8c:	4090703a 	and	r8,r8,r2
 802ae90:	003eb306 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802ae94:	4444b03a 	or	r2,r8,r17
 802ae98:	8000291e 	bne	r16,zero,802af40 <__adddf3+0x65c>
 802ae9c:	10004b1e 	bne	r2,zero,802afcc <__adddf3+0x6e8>
 802aea0:	4990b03a 	or	r8,r9,r6
 802aea4:	40008b26 	beq	r8,zero,802b0d4 <__adddf3+0x7f0>
 802aea8:	4811883a 	mov	r8,r9
 802aeac:	3023883a 	mov	r17,r6
 802aeb0:	3825883a 	mov	r18,r7
 802aeb4:	003eaa06 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802aeb8:	1021883a 	mov	r16,r2
 802aebc:	0011883a 	mov	r8,zero
 802aec0:	0005883a 	mov	r2,zero
 802aec4:	003f0f06 	br	802ab04 <__flash_rwdata_start+0xffffafe8>
 802aec8:	217ff804 	addi	r5,r4,-32
 802aecc:	00800804 	movi	r2,32
 802aed0:	494ad83a 	srl	r5,r9,r5
 802aed4:	20807d26 	beq	r4,r2,802b0cc <__adddf3+0x7e8>
 802aed8:	00801004 	movi	r2,64
 802aedc:	1109c83a 	sub	r4,r2,r4
 802aee0:	4912983a 	sll	r9,r9,r4
 802aee4:	498cb03a 	or	r6,r9,r6
 802aee8:	300cc03a 	cmpne	r6,r6,zero
 802aeec:	298ab03a 	or	r5,r5,r6
 802aef0:	0013883a 	mov	r9,zero
 802aef4:	003f1506 	br	802ab4c <__flash_rwdata_start+0xffffb030>
 802aef8:	0101ffc4 	movi	r4,2047
 802aefc:	113f9a1e 	bne	r2,r4,802ad68 <__flash_rwdata_start+0xffffb24c>
 802af00:	4811883a 	mov	r8,r9
 802af04:	3023883a 	mov	r17,r6
 802af08:	1021883a 	mov	r16,r2
 802af0c:	3825883a 	mov	r18,r7
 802af10:	003e9306 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802af14:	8000161e 	bne	r16,zero,802af70 <__adddf3+0x68c>
 802af18:	444ab03a 	or	r5,r8,r17
 802af1c:	28005126 	beq	r5,zero,802b064 <__adddf3+0x780>
 802af20:	0108303a 	nor	r4,zero,r4
 802af24:	20004d1e 	bne	r4,zero,802b05c <__adddf3+0x778>
 802af28:	89a3883a 	add	r17,r17,r6
 802af2c:	4253883a 	add	r9,r8,r9
 802af30:	898d803a 	cmpltu	r6,r17,r6
 802af34:	3251883a 	add	r8,r6,r9
 802af38:	1021883a 	mov	r16,r2
 802af3c:	003f0806 	br	802ab60 <__flash_rwdata_start+0xffffb044>
 802af40:	1000301e 	bne	r2,zero,802b004 <__adddf3+0x720>
 802af44:	4984b03a 	or	r2,r9,r6
 802af48:	10007126 	beq	r2,zero,802b110 <__adddf3+0x82c>
 802af4c:	4811883a 	mov	r8,r9
 802af50:	3023883a 	mov	r17,r6
 802af54:	3825883a 	mov	r18,r7
 802af58:	0401ffc4 	movi	r16,2047
 802af5c:	003e8006 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802af60:	4462b03a 	or	r17,r8,r17
 802af64:	8822c03a 	cmpne	r17,r17,zero
 802af68:	0007883a 	mov	r3,zero
 802af6c:	003f8b06 	br	802ad9c <__flash_rwdata_start+0xffffb280>
 802af70:	0141ffc4 	movi	r5,2047
 802af74:	11403b26 	beq	r2,r5,802b064 <__adddf3+0x780>
 802af78:	0109c83a 	sub	r4,zero,r4
 802af7c:	42002034 	orhi	r8,r8,128
 802af80:	01400e04 	movi	r5,56
 802af84:	29006716 	blt	r5,r4,802b124 <__adddf3+0x840>
 802af88:	014007c4 	movi	r5,31
 802af8c:	29007016 	blt	r5,r4,802b150 <__adddf3+0x86c>
 802af90:	01400804 	movi	r5,32
 802af94:	290bc83a 	sub	r5,r5,r4
 802af98:	4154983a 	sll	r10,r8,r5
 802af9c:	890ed83a 	srl	r7,r17,r4
 802afa0:	894a983a 	sll	r5,r17,r5
 802afa4:	4108d83a 	srl	r4,r8,r4
 802afa8:	51e2b03a 	or	r17,r10,r7
 802afac:	280ac03a 	cmpne	r5,r5,zero
 802afb0:	8962b03a 	or	r17,r17,r5
 802afb4:	89a3883a 	add	r17,r17,r6
 802afb8:	2253883a 	add	r9,r4,r9
 802afbc:	898d803a 	cmpltu	r6,r17,r6
 802afc0:	3251883a 	add	r8,r6,r9
 802afc4:	1021883a 	mov	r16,r2
 802afc8:	003ee506 	br	802ab60 <__flash_rwdata_start+0xffffb044>
 802afcc:	4984b03a 	or	r2,r9,r6
 802afd0:	103e6326 	beq	r2,zero,802a960 <__flash_rwdata_start+0xffffae44>
 802afd4:	8987c83a 	sub	r3,r17,r6
 802afd8:	88c9803a 	cmpltu	r4,r17,r3
 802afdc:	4245c83a 	sub	r2,r8,r9
 802afe0:	1105c83a 	sub	r2,r2,r4
 802afe4:	1100202c 	andhi	r4,r2,128
 802afe8:	203ebb26 	beq	r4,zero,802aad8 <__flash_rwdata_start+0xffffafbc>
 802afec:	3463c83a 	sub	r17,r6,r17
 802aff0:	4a07c83a 	sub	r3,r9,r8
 802aff4:	344d803a 	cmpltu	r6,r6,r17
 802aff8:	1991c83a 	sub	r8,r3,r6
 802affc:	3825883a 	mov	r18,r7
 802b000:	003e5706 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802b004:	4984b03a 	or	r2,r9,r6
 802b008:	10002e26 	beq	r2,zero,802b0c4 <__adddf3+0x7e0>
 802b00c:	4004d0fa 	srli	r2,r8,3
 802b010:	8822d0fa 	srli	r17,r17,3
 802b014:	4010977a 	slli	r8,r8,29
 802b018:	10c0022c 	andhi	r3,r2,8
 802b01c:	4462b03a 	or	r17,r8,r17
 802b020:	18000826 	beq	r3,zero,802b044 <__adddf3+0x760>
 802b024:	4808d0fa 	srli	r4,r9,3
 802b028:	20c0022c 	andhi	r3,r4,8
 802b02c:	1800051e 	bne	r3,zero,802b044 <__adddf3+0x760>
 802b030:	300cd0fa 	srli	r6,r6,3
 802b034:	4806977a 	slli	r3,r9,29
 802b038:	2005883a 	mov	r2,r4
 802b03c:	3825883a 	mov	r18,r7
 802b040:	19a2b03a 	or	r17,r3,r6
 802b044:	8810d77a 	srli	r8,r17,29
 802b048:	100490fa 	slli	r2,r2,3
 802b04c:	882290fa 	slli	r17,r17,3
 802b050:	0401ffc4 	movi	r16,2047
 802b054:	4090b03a 	or	r8,r8,r2
 802b058:	003e4106 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802b05c:	0141ffc4 	movi	r5,2047
 802b060:	117fc71e 	bne	r2,r5,802af80 <__flash_rwdata_start+0xffffb464>
 802b064:	4811883a 	mov	r8,r9
 802b068:	3023883a 	mov	r17,r6
 802b06c:	1021883a 	mov	r16,r2
 802b070:	003e3b06 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802b074:	10002f26 	beq	r2,zero,802b134 <__adddf3+0x850>
 802b078:	4984b03a 	or	r2,r9,r6
 802b07c:	10001126 	beq	r2,zero,802b0c4 <__adddf3+0x7e0>
 802b080:	4004d0fa 	srli	r2,r8,3
 802b084:	8822d0fa 	srli	r17,r17,3
 802b088:	4010977a 	slli	r8,r8,29
 802b08c:	10c0022c 	andhi	r3,r2,8
 802b090:	4462b03a 	or	r17,r8,r17
 802b094:	183feb26 	beq	r3,zero,802b044 <__flash_rwdata_start+0xffffb528>
 802b098:	4808d0fa 	srli	r4,r9,3
 802b09c:	20c0022c 	andhi	r3,r4,8
 802b0a0:	183fe81e 	bne	r3,zero,802b044 <__flash_rwdata_start+0xffffb528>
 802b0a4:	300cd0fa 	srli	r6,r6,3
 802b0a8:	4806977a 	slli	r3,r9,29
 802b0ac:	2005883a 	mov	r2,r4
 802b0b0:	19a2b03a 	or	r17,r3,r6
 802b0b4:	003fe306 	br	802b044 <__flash_rwdata_start+0xffffb528>
 802b0b8:	0011883a 	mov	r8,zero
 802b0bc:	0005883a 	mov	r2,zero
 802b0c0:	003e3f06 	br	802a9c0 <__flash_rwdata_start+0xffffaea4>
 802b0c4:	0401ffc4 	movi	r16,2047
 802b0c8:	003e2506 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802b0cc:	0013883a 	mov	r9,zero
 802b0d0:	003f8406 	br	802aee4 <__flash_rwdata_start+0xffffb3c8>
 802b0d4:	0005883a 	mov	r2,zero
 802b0d8:	0007883a 	mov	r3,zero
 802b0dc:	003e8906 	br	802ab04 <__flash_rwdata_start+0xffffafe8>
 802b0e0:	197ff804 	addi	r5,r3,-32
 802b0e4:	01000804 	movi	r4,32
 802b0e8:	414ad83a 	srl	r5,r8,r5
 802b0ec:	19002426 	beq	r3,r4,802b180 <__adddf3+0x89c>
 802b0f0:	01001004 	movi	r4,64
 802b0f4:	20c7c83a 	sub	r3,r4,r3
 802b0f8:	40c6983a 	sll	r3,r8,r3
 802b0fc:	1c46b03a 	or	r3,r3,r17
 802b100:	1806c03a 	cmpne	r3,r3,zero
 802b104:	28e2b03a 	or	r17,r5,r3
 802b108:	0007883a 	mov	r3,zero
 802b10c:	003f2306 	br	802ad9c <__flash_rwdata_start+0xffffb280>
 802b110:	0007883a 	mov	r3,zero
 802b114:	5811883a 	mov	r8,r11
 802b118:	00bfffc4 	movi	r2,-1
 802b11c:	0401ffc4 	movi	r16,2047
 802b120:	003e7806 	br	802ab04 <__flash_rwdata_start+0xffffafe8>
 802b124:	4462b03a 	or	r17,r8,r17
 802b128:	8822c03a 	cmpne	r17,r17,zero
 802b12c:	0009883a 	mov	r4,zero
 802b130:	003fa006 	br	802afb4 <__flash_rwdata_start+0xffffb498>
 802b134:	4811883a 	mov	r8,r9
 802b138:	3023883a 	mov	r17,r6
 802b13c:	0401ffc4 	movi	r16,2047
 802b140:	003e0706 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802b144:	4811883a 	mov	r8,r9
 802b148:	3023883a 	mov	r17,r6
 802b14c:	003e0406 	br	802a960 <__flash_rwdata_start+0xffffae44>
 802b150:	21fff804 	addi	r7,r4,-32
 802b154:	01400804 	movi	r5,32
 802b158:	41ced83a 	srl	r7,r8,r7
 802b15c:	21400a26 	beq	r4,r5,802b188 <__adddf3+0x8a4>
 802b160:	01401004 	movi	r5,64
 802b164:	2909c83a 	sub	r4,r5,r4
 802b168:	4108983a 	sll	r4,r8,r4
 802b16c:	2448b03a 	or	r4,r4,r17
 802b170:	2008c03a 	cmpne	r4,r4,zero
 802b174:	3922b03a 	or	r17,r7,r4
 802b178:	0009883a 	mov	r4,zero
 802b17c:	003f8d06 	br	802afb4 <__flash_rwdata_start+0xffffb498>
 802b180:	0007883a 	mov	r3,zero
 802b184:	003fdd06 	br	802b0fc <__flash_rwdata_start+0xffffb5e0>
 802b188:	0009883a 	mov	r4,zero
 802b18c:	003ff706 	br	802b16c <__flash_rwdata_start+0xffffb650>

0802b190 <__divdf3>:
 802b190:	defff004 	addi	sp,sp,-64
 802b194:	dc800815 	stw	r18,32(sp)
 802b198:	2824d53a 	srli	r18,r5,20
 802b19c:	dd800c15 	stw	r22,48(sp)
 802b1a0:	282cd7fa 	srli	r22,r5,31
 802b1a4:	dc000615 	stw	r16,24(sp)
 802b1a8:	04000434 	movhi	r16,16
 802b1ac:	843fffc4 	addi	r16,r16,-1
 802b1b0:	dfc00f15 	stw	ra,60(sp)
 802b1b4:	df000e15 	stw	fp,56(sp)
 802b1b8:	ddc00d15 	stw	r23,52(sp)
 802b1bc:	dd400b15 	stw	r21,44(sp)
 802b1c0:	dd000a15 	stw	r20,40(sp)
 802b1c4:	dcc00915 	stw	r19,36(sp)
 802b1c8:	dc400715 	stw	r17,28(sp)
 802b1cc:	9481ffcc 	andi	r18,r18,2047
 802b1d0:	2c20703a 	and	r16,r5,r16
 802b1d4:	b2003fcc 	andi	r8,r22,255
 802b1d8:	90006126 	beq	r18,zero,802b360 <__divdf3+0x1d0>
 802b1dc:	0081ffc4 	movi	r2,2047
 802b1e0:	202b883a 	mov	r21,r4
 802b1e4:	90803726 	beq	r18,r2,802b2c4 <__divdf3+0x134>
 802b1e8:	80800434 	orhi	r2,r16,16
 802b1ec:	100490fa 	slli	r2,r2,3
 802b1f0:	2020d77a 	srli	r16,r4,29
 802b1f4:	202a90fa 	slli	r21,r4,3
 802b1f8:	94bf0044 	addi	r18,r18,-1023
 802b1fc:	80a0b03a 	or	r16,r16,r2
 802b200:	0013883a 	mov	r9,zero
 802b204:	000b883a 	mov	r5,zero
 802b208:	3806d53a 	srli	r3,r7,20
 802b20c:	382ed7fa 	srli	r23,r7,31
 802b210:	04400434 	movhi	r17,16
 802b214:	8c7fffc4 	addi	r17,r17,-1
 802b218:	18c1ffcc 	andi	r3,r3,2047
 802b21c:	3029883a 	mov	r20,r6
 802b220:	3c62703a 	and	r17,r7,r17
 802b224:	bf003fcc 	andi	fp,r23,255
 802b228:	18006e26 	beq	r3,zero,802b3e4 <__divdf3+0x254>
 802b22c:	0081ffc4 	movi	r2,2047
 802b230:	18806626 	beq	r3,r2,802b3cc <__divdf3+0x23c>
 802b234:	88800434 	orhi	r2,r17,16
 802b238:	100490fa 	slli	r2,r2,3
 802b23c:	3022d77a 	srli	r17,r6,29
 802b240:	302890fa 	slli	r20,r6,3
 802b244:	18ff0044 	addi	r3,r3,-1023
 802b248:	88a2b03a 	or	r17,r17,r2
 802b24c:	000f883a 	mov	r7,zero
 802b250:	b5e6f03a 	xor	r19,r22,r23
 802b254:	3a4cb03a 	or	r6,r7,r9
 802b258:	008003c4 	movi	r2,15
 802b25c:	9809883a 	mov	r4,r19
 802b260:	90c7c83a 	sub	r3,r18,r3
 802b264:	9cc03fcc 	andi	r19,r19,255
 802b268:	11809636 	bltu	r2,r6,802b4c4 <__divdf3+0x334>
 802b26c:	300c90ba 	slli	r6,r6,2
 802b270:	008200f4 	movhi	r2,2051
 802b274:	10aca104 	addi	r2,r2,-19836
 802b278:	308d883a 	add	r6,r6,r2
 802b27c:	30800017 	ldw	r2,0(r6)
 802b280:	1000683a 	jmp	r2
 802b284:	0802b4c4 	addi	zero,at,2771
 802b288:	0802b2fc 	xorhi	zero,at,2763
 802b28c:	0802b4b4 	orhi	zero,at,2770
 802b290:	0802b2f0 	cmpltui	zero,at,2763
 802b294:	0802b4b4 	orhi	zero,at,2770
 802b298:	0802b488 	cmpgei	zero,at,2770
 802b29c:	0802b4b4 	orhi	zero,at,2770
 802b2a0:	0802b2f0 	cmpltui	zero,at,2763
 802b2a4:	0802b2fc 	xorhi	zero,at,2763
 802b2a8:	0802b2fc 	xorhi	zero,at,2763
 802b2ac:	0802b488 	cmpgei	zero,at,2770
 802b2b0:	0802b2f0 	cmpltui	zero,at,2763
 802b2b4:	0802b2e0 	cmpeqi	zero,at,2763
 802b2b8:	0802b2e0 	cmpeqi	zero,at,2763
 802b2bc:	0802b2e0 	cmpeqi	zero,at,2763
 802b2c0:	0802b84c 	andi	zero,at,2785
 802b2c4:	2404b03a 	or	r2,r4,r16
 802b2c8:	10006c1e 	bne	r2,zero,802b47c <__divdf3+0x2ec>
 802b2cc:	02400204 	movi	r9,8
 802b2d0:	0021883a 	mov	r16,zero
 802b2d4:	002b883a 	mov	r21,zero
 802b2d8:	01400084 	movi	r5,2
 802b2dc:	003fca06 	br	802b208 <__flash_rwdata_start+0xffffb6ec>
 802b2e0:	8023883a 	mov	r17,r16
 802b2e4:	a829883a 	mov	r20,r21
 802b2e8:	4039883a 	mov	fp,r8
 802b2ec:	280f883a 	mov	r7,r5
 802b2f0:	00800084 	movi	r2,2
 802b2f4:	3881601e 	bne	r7,r2,802b878 <__divdf3+0x6e8>
 802b2f8:	e027883a 	mov	r19,fp
 802b2fc:	9900004c 	andi	r4,r19,1
 802b300:	0081ffc4 	movi	r2,2047
 802b304:	0021883a 	mov	r16,zero
 802b308:	002b883a 	mov	r21,zero
 802b30c:	1004953a 	slli	r2,r2,20
 802b310:	20c03fcc 	andi	r3,r4,255
 802b314:	01400434 	movhi	r5,16
 802b318:	297fffc4 	addi	r5,r5,-1
 802b31c:	180697fa 	slli	r3,r3,31
 802b320:	8160703a 	and	r16,r16,r5
 802b324:	80a0b03a 	or	r16,r16,r2
 802b328:	80c6b03a 	or	r3,r16,r3
 802b32c:	a805883a 	mov	r2,r21
 802b330:	dfc00f17 	ldw	ra,60(sp)
 802b334:	df000e17 	ldw	fp,56(sp)
 802b338:	ddc00d17 	ldw	r23,52(sp)
 802b33c:	dd800c17 	ldw	r22,48(sp)
 802b340:	dd400b17 	ldw	r21,44(sp)
 802b344:	dd000a17 	ldw	r20,40(sp)
 802b348:	dcc00917 	ldw	r19,36(sp)
 802b34c:	dc800817 	ldw	r18,32(sp)
 802b350:	dc400717 	ldw	r17,28(sp)
 802b354:	dc000617 	ldw	r16,24(sp)
 802b358:	dec01004 	addi	sp,sp,64
 802b35c:	f800283a 	ret
 802b360:	2404b03a 	or	r2,r4,r16
 802b364:	2023883a 	mov	r17,r4
 802b368:	10003f26 	beq	r2,zero,802b468 <__divdf3+0x2d8>
 802b36c:	80015e26 	beq	r16,zero,802b8e8 <__divdf3+0x758>
 802b370:	8009883a 	mov	r4,r16
 802b374:	d9800215 	stw	r6,8(sp)
 802b378:	d9c00515 	stw	r7,20(sp)
 802b37c:	da000415 	stw	r8,16(sp)
 802b380:	802d1240 	call	802d124 <__clzsi2>
 802b384:	d9800217 	ldw	r6,8(sp)
 802b388:	d9c00517 	ldw	r7,20(sp)
 802b38c:	da000417 	ldw	r8,16(sp)
 802b390:	113ffd44 	addi	r4,r2,-11
 802b394:	00c00704 	movi	r3,28
 802b398:	19014f16 	blt	r3,r4,802b8d8 <__divdf3+0x748>
 802b39c:	00c00744 	movi	r3,29
 802b3a0:	157ffe04 	addi	r21,r2,-8
 802b3a4:	1907c83a 	sub	r3,r3,r4
 802b3a8:	8560983a 	sll	r16,r16,r21
 802b3ac:	88c6d83a 	srl	r3,r17,r3
 802b3b0:	8d6a983a 	sll	r21,r17,r21
 802b3b4:	1c20b03a 	or	r16,r3,r16
 802b3b8:	1080fcc4 	addi	r2,r2,1011
 802b3bc:	00a5c83a 	sub	r18,zero,r2
 802b3c0:	0013883a 	mov	r9,zero
 802b3c4:	000b883a 	mov	r5,zero
 802b3c8:	003f8f06 	br	802b208 <__flash_rwdata_start+0xffffb6ec>
 802b3cc:	3444b03a 	or	r2,r6,r17
 802b3d0:	1000231e 	bne	r2,zero,802b460 <__divdf3+0x2d0>
 802b3d4:	0023883a 	mov	r17,zero
 802b3d8:	0029883a 	mov	r20,zero
 802b3dc:	01c00084 	movi	r7,2
 802b3e0:	003f9b06 	br	802b250 <__flash_rwdata_start+0xffffb734>
 802b3e4:	3444b03a 	or	r2,r6,r17
 802b3e8:	10001926 	beq	r2,zero,802b450 <__divdf3+0x2c0>
 802b3ec:	88014b26 	beq	r17,zero,802b91c <__divdf3+0x78c>
 802b3f0:	8809883a 	mov	r4,r17
 802b3f4:	d9400115 	stw	r5,4(sp)
 802b3f8:	d9800215 	stw	r6,8(sp)
 802b3fc:	da000415 	stw	r8,16(sp)
 802b400:	da400315 	stw	r9,12(sp)
 802b404:	802d1240 	call	802d124 <__clzsi2>
 802b408:	d9400117 	ldw	r5,4(sp)
 802b40c:	d9800217 	ldw	r6,8(sp)
 802b410:	da000417 	ldw	r8,16(sp)
 802b414:	da400317 	ldw	r9,12(sp)
 802b418:	113ffd44 	addi	r4,r2,-11
 802b41c:	00c00704 	movi	r3,28
 802b420:	19013a16 	blt	r3,r4,802b90c <__divdf3+0x77c>
 802b424:	00c00744 	movi	r3,29
 802b428:	153ffe04 	addi	r20,r2,-8
 802b42c:	1907c83a 	sub	r3,r3,r4
 802b430:	8d22983a 	sll	r17,r17,r20
 802b434:	30c6d83a 	srl	r3,r6,r3
 802b438:	3528983a 	sll	r20,r6,r20
 802b43c:	1c62b03a 	or	r17,r3,r17
 802b440:	1080fcc4 	addi	r2,r2,1011
 802b444:	0087c83a 	sub	r3,zero,r2
 802b448:	000f883a 	mov	r7,zero
 802b44c:	003f8006 	br	802b250 <__flash_rwdata_start+0xffffb734>
 802b450:	0023883a 	mov	r17,zero
 802b454:	0029883a 	mov	r20,zero
 802b458:	01c00044 	movi	r7,1
 802b45c:	003f7c06 	br	802b250 <__flash_rwdata_start+0xffffb734>
 802b460:	01c000c4 	movi	r7,3
 802b464:	003f7a06 	br	802b250 <__flash_rwdata_start+0xffffb734>
 802b468:	02400104 	movi	r9,4
 802b46c:	0021883a 	mov	r16,zero
 802b470:	002b883a 	mov	r21,zero
 802b474:	01400044 	movi	r5,1
 802b478:	003f6306 	br	802b208 <__flash_rwdata_start+0xffffb6ec>
 802b47c:	02400304 	movi	r9,12
 802b480:	014000c4 	movi	r5,3
 802b484:	003f6006 	br	802b208 <__flash_rwdata_start+0xffffb6ec>
 802b488:	04000434 	movhi	r16,16
 802b48c:	0009883a 	mov	r4,zero
 802b490:	843fffc4 	addi	r16,r16,-1
 802b494:	057fffc4 	movi	r21,-1
 802b498:	0081ffc4 	movi	r2,2047
 802b49c:	003f9b06 	br	802b30c <__flash_rwdata_start+0xffffb7f0>
 802b4a0:	00c00044 	movi	r3,1
 802b4a4:	1887c83a 	sub	r3,r3,r2
 802b4a8:	01000e04 	movi	r4,56
 802b4ac:	20c1530e 	bge	r4,r3,802b9fc <__divdf3+0x86c>
 802b4b0:	9900004c 	andi	r4,r19,1
 802b4b4:	0005883a 	mov	r2,zero
 802b4b8:	0021883a 	mov	r16,zero
 802b4bc:	002b883a 	mov	r21,zero
 802b4c0:	003f9206 	br	802b30c <__flash_rwdata_start+0xffffb7f0>
 802b4c4:	8c012e36 	bltu	r17,r16,802b980 <__divdf3+0x7f0>
 802b4c8:	84412c26 	beq	r16,r17,802b97c <__divdf3+0x7ec>
 802b4cc:	a82f883a 	mov	r23,r21
 802b4d0:	18ffffc4 	addi	r3,r3,-1
 802b4d4:	002b883a 	mov	r21,zero
 802b4d8:	a004d63a 	srli	r2,r20,24
 802b4dc:	8822923a 	slli	r17,r17,8
 802b4e0:	a028923a 	slli	r20,r20,8
 802b4e4:	8009883a 	mov	r4,r16
 802b4e8:	88acb03a 	or	r22,r17,r2
 802b4ec:	dd000015 	stw	r20,0(sp)
 802b4f0:	b028d43a 	srli	r20,r22,16
 802b4f4:	d8c00215 	stw	r3,8(sp)
 802b4f8:	b4bfffcc 	andi	r18,r22,65535
 802b4fc:	a00b883a 	mov	r5,r20
 802b500:	802a8000 	call	802a800 <__udivsi3>
 802b504:	100b883a 	mov	r5,r2
 802b508:	9009883a 	mov	r4,r18
 802b50c:	1023883a 	mov	r17,r2
 802b510:	802a8bc0 	call	802a8bc <__mulsi3>
 802b514:	8009883a 	mov	r4,r16
 802b518:	a00b883a 	mov	r5,r20
 802b51c:	1039883a 	mov	fp,r2
 802b520:	802a8640 	call	802a864 <__umodsi3>
 802b524:	1004943a 	slli	r2,r2,16
 802b528:	b808d43a 	srli	r4,r23,16
 802b52c:	d8c00217 	ldw	r3,8(sp)
 802b530:	2084b03a 	or	r2,r4,r2
 802b534:	1700062e 	bgeu	r2,fp,802b550 <__divdf3+0x3c0>
 802b538:	1585883a 	add	r2,r2,r22
 802b53c:	893fffc4 	addi	r4,r17,-1
 802b540:	15811d36 	bltu	r2,r22,802b9b8 <__divdf3+0x828>
 802b544:	17011c2e 	bgeu	r2,fp,802b9b8 <__divdf3+0x828>
 802b548:	8c7fff84 	addi	r17,r17,-2
 802b54c:	1585883a 	add	r2,r2,r22
 802b550:	1739c83a 	sub	fp,r2,fp
 802b554:	a00b883a 	mov	r5,r20
 802b558:	e009883a 	mov	r4,fp
 802b55c:	d8c00215 	stw	r3,8(sp)
 802b560:	802a8000 	call	802a800 <__udivsi3>
 802b564:	100b883a 	mov	r5,r2
 802b568:	9009883a 	mov	r4,r18
 802b56c:	1021883a 	mov	r16,r2
 802b570:	802a8bc0 	call	802a8bc <__mulsi3>
 802b574:	a00b883a 	mov	r5,r20
 802b578:	e009883a 	mov	r4,fp
 802b57c:	d8800415 	stw	r2,16(sp)
 802b580:	802a8640 	call	802a864 <__umodsi3>
 802b584:	1004943a 	slli	r2,r2,16
 802b588:	da000417 	ldw	r8,16(sp)
 802b58c:	bdffffcc 	andi	r23,r23,65535
 802b590:	b884b03a 	or	r2,r23,r2
 802b594:	d8c00217 	ldw	r3,8(sp)
 802b598:	1200062e 	bgeu	r2,r8,802b5b4 <__divdf3+0x424>
 802b59c:	1585883a 	add	r2,r2,r22
 802b5a0:	813fffc4 	addi	r4,r16,-1
 802b5a4:	15810236 	bltu	r2,r22,802b9b0 <__divdf3+0x820>
 802b5a8:	1201012e 	bgeu	r2,r8,802b9b0 <__divdf3+0x820>
 802b5ac:	843fff84 	addi	r16,r16,-2
 802b5b0:	1585883a 	add	r2,r2,r22
 802b5b4:	8822943a 	slli	r17,r17,16
 802b5b8:	d9800017 	ldw	r6,0(sp)
 802b5bc:	1211c83a 	sub	r8,r2,r8
 802b5c0:	8c22b03a 	or	r17,r17,r16
 802b5c4:	373fffcc 	andi	fp,r6,65535
 802b5c8:	8abfffcc 	andi	r10,r17,65535
 802b5cc:	8820d43a 	srli	r16,r17,16
 802b5d0:	5009883a 	mov	r4,r10
 802b5d4:	e00b883a 	mov	r5,fp
 802b5d8:	302ed43a 	srli	r23,r6,16
 802b5dc:	d8c00215 	stw	r3,8(sp)
 802b5e0:	da000415 	stw	r8,16(sp)
 802b5e4:	da800115 	stw	r10,4(sp)
 802b5e8:	802a8bc0 	call	802a8bc <__mulsi3>
 802b5ec:	800b883a 	mov	r5,r16
 802b5f0:	e009883a 	mov	r4,fp
 802b5f4:	d8800515 	stw	r2,20(sp)
 802b5f8:	802a8bc0 	call	802a8bc <__mulsi3>
 802b5fc:	8009883a 	mov	r4,r16
 802b600:	b80b883a 	mov	r5,r23
 802b604:	d8800315 	stw	r2,12(sp)
 802b608:	802a8bc0 	call	802a8bc <__mulsi3>
 802b60c:	da800117 	ldw	r10,4(sp)
 802b610:	b80b883a 	mov	r5,r23
 802b614:	1021883a 	mov	r16,r2
 802b618:	5009883a 	mov	r4,r10
 802b61c:	802a8bc0 	call	802a8bc <__mulsi3>
 802b620:	d9c00517 	ldw	r7,20(sp)
 802b624:	da400317 	ldw	r9,12(sp)
 802b628:	d8c00217 	ldw	r3,8(sp)
 802b62c:	3808d43a 	srli	r4,r7,16
 802b630:	1245883a 	add	r2,r2,r9
 802b634:	da000417 	ldw	r8,16(sp)
 802b638:	2085883a 	add	r2,r4,r2
 802b63c:	1240022e 	bgeu	r2,r9,802b648 <__divdf3+0x4b8>
 802b640:	01000074 	movhi	r4,1
 802b644:	8121883a 	add	r16,r16,r4
 802b648:	1008d43a 	srli	r4,r2,16
 802b64c:	1004943a 	slli	r2,r2,16
 802b650:	39ffffcc 	andi	r7,r7,65535
 802b654:	2409883a 	add	r4,r4,r16
 802b658:	11c5883a 	add	r2,r2,r7
 802b65c:	4100bb36 	bltu	r8,r4,802b94c <__divdf3+0x7bc>
 802b660:	4100d726 	beq	r8,r4,802b9c0 <__divdf3+0x830>
 802b664:	4109c83a 	sub	r4,r8,r4
 802b668:	a8a1c83a 	sub	r16,r21,r2
 802b66c:	ac2b803a 	cmpltu	r21,r21,r16
 802b670:	256bc83a 	sub	r21,r4,r21
 802b674:	b540d926 	beq	r22,r21,802b9dc <__divdf3+0x84c>
 802b678:	a00b883a 	mov	r5,r20
 802b67c:	a809883a 	mov	r4,r21
 802b680:	d8c00215 	stw	r3,8(sp)
 802b684:	802a8000 	call	802a800 <__udivsi3>
 802b688:	100b883a 	mov	r5,r2
 802b68c:	9009883a 	mov	r4,r18
 802b690:	d8800515 	stw	r2,20(sp)
 802b694:	802a8bc0 	call	802a8bc <__mulsi3>
 802b698:	a809883a 	mov	r4,r21
 802b69c:	a00b883a 	mov	r5,r20
 802b6a0:	d8800415 	stw	r2,16(sp)
 802b6a4:	802a8640 	call	802a864 <__umodsi3>
 802b6a8:	1004943a 	slli	r2,r2,16
 802b6ac:	8008d43a 	srli	r4,r16,16
 802b6b0:	da000417 	ldw	r8,16(sp)
 802b6b4:	d8c00217 	ldw	r3,8(sp)
 802b6b8:	2084b03a 	or	r2,r4,r2
 802b6bc:	d9c00517 	ldw	r7,20(sp)
 802b6c0:	1200062e 	bgeu	r2,r8,802b6dc <__divdf3+0x54c>
 802b6c4:	1585883a 	add	r2,r2,r22
 802b6c8:	393fffc4 	addi	r4,r7,-1
 802b6cc:	1580c536 	bltu	r2,r22,802b9e4 <__divdf3+0x854>
 802b6d0:	1200c42e 	bgeu	r2,r8,802b9e4 <__divdf3+0x854>
 802b6d4:	39ffff84 	addi	r7,r7,-2
 802b6d8:	1585883a 	add	r2,r2,r22
 802b6dc:	122bc83a 	sub	r21,r2,r8
 802b6e0:	a00b883a 	mov	r5,r20
 802b6e4:	a809883a 	mov	r4,r21
 802b6e8:	d8c00215 	stw	r3,8(sp)
 802b6ec:	d9c00515 	stw	r7,20(sp)
 802b6f0:	802a8000 	call	802a800 <__udivsi3>
 802b6f4:	9009883a 	mov	r4,r18
 802b6f8:	100b883a 	mov	r5,r2
 802b6fc:	d8800415 	stw	r2,16(sp)
 802b700:	802a8bc0 	call	802a8bc <__mulsi3>
 802b704:	a809883a 	mov	r4,r21
 802b708:	a00b883a 	mov	r5,r20
 802b70c:	1025883a 	mov	r18,r2
 802b710:	802a8640 	call	802a864 <__umodsi3>
 802b714:	1004943a 	slli	r2,r2,16
 802b718:	813fffcc 	andi	r4,r16,65535
 802b71c:	d8c00217 	ldw	r3,8(sp)
 802b720:	20a0b03a 	or	r16,r4,r2
 802b724:	d9c00517 	ldw	r7,20(sp)
 802b728:	da000417 	ldw	r8,16(sp)
 802b72c:	8480062e 	bgeu	r16,r18,802b748 <__divdf3+0x5b8>
 802b730:	85a1883a 	add	r16,r16,r22
 802b734:	40bfffc4 	addi	r2,r8,-1
 802b738:	8580ac36 	bltu	r16,r22,802b9ec <__divdf3+0x85c>
 802b73c:	8480ab2e 	bgeu	r16,r18,802b9ec <__divdf3+0x85c>
 802b740:	423fff84 	addi	r8,r8,-2
 802b744:	85a1883a 	add	r16,r16,r22
 802b748:	3804943a 	slli	r2,r7,16
 802b74c:	84a1c83a 	sub	r16,r16,r18
 802b750:	e009883a 	mov	r4,fp
 802b754:	1228b03a 	or	r20,r2,r8
 802b758:	a1ffffcc 	andi	r7,r20,65535
 802b75c:	a024d43a 	srli	r18,r20,16
 802b760:	380b883a 	mov	r5,r7
 802b764:	d8c00215 	stw	r3,8(sp)
 802b768:	d9c00515 	stw	r7,20(sp)
 802b76c:	802a8bc0 	call	802a8bc <__mulsi3>
 802b770:	900b883a 	mov	r5,r18
 802b774:	e009883a 	mov	r4,fp
 802b778:	102b883a 	mov	r21,r2
 802b77c:	802a8bc0 	call	802a8bc <__mulsi3>
 802b780:	900b883a 	mov	r5,r18
 802b784:	b809883a 	mov	r4,r23
 802b788:	1039883a 	mov	fp,r2
 802b78c:	802a8bc0 	call	802a8bc <__mulsi3>
 802b790:	d9c00517 	ldw	r7,20(sp)
 802b794:	b80b883a 	mov	r5,r23
 802b798:	1025883a 	mov	r18,r2
 802b79c:	3809883a 	mov	r4,r7
 802b7a0:	802a8bc0 	call	802a8bc <__mulsi3>
 802b7a4:	a808d43a 	srli	r4,r21,16
 802b7a8:	1705883a 	add	r2,r2,fp
 802b7ac:	d8c00217 	ldw	r3,8(sp)
 802b7b0:	2085883a 	add	r2,r4,r2
 802b7b4:	1700022e 	bgeu	r2,fp,802b7c0 <__divdf3+0x630>
 802b7b8:	01000074 	movhi	r4,1
 802b7bc:	9125883a 	add	r18,r18,r4
 802b7c0:	1008d43a 	srli	r4,r2,16
 802b7c4:	1004943a 	slli	r2,r2,16
 802b7c8:	ad7fffcc 	andi	r21,r21,65535
 802b7cc:	2489883a 	add	r4,r4,r18
 802b7d0:	1545883a 	add	r2,r2,r21
 802b7d4:	81003836 	bltu	r16,r4,802b8b8 <__divdf3+0x728>
 802b7d8:	81003626 	beq	r16,r4,802b8b4 <__divdf3+0x724>
 802b7dc:	a5000054 	ori	r20,r20,1
 802b7e0:	1880ffc4 	addi	r2,r3,1023
 802b7e4:	00bf2e0e 	bge	zero,r2,802b4a0 <__flash_rwdata_start+0xffffb984>
 802b7e8:	a10001cc 	andi	r4,r20,7
 802b7ec:	20000726 	beq	r4,zero,802b80c <__divdf3+0x67c>
 802b7f0:	a10003cc 	andi	r4,r20,15
 802b7f4:	01400104 	movi	r5,4
 802b7f8:	21400426 	beq	r4,r5,802b80c <__divdf3+0x67c>
 802b7fc:	a149883a 	add	r4,r20,r5
 802b800:	2529803a 	cmpltu	r20,r4,r20
 802b804:	8d23883a 	add	r17,r17,r20
 802b808:	2029883a 	mov	r20,r4
 802b80c:	8900402c 	andhi	r4,r17,256
 802b810:	20000426 	beq	r4,zero,802b824 <__divdf3+0x694>
 802b814:	18810004 	addi	r2,r3,1024
 802b818:	00ffc034 	movhi	r3,65280
 802b81c:	18ffffc4 	addi	r3,r3,-1
 802b820:	88e2703a 	and	r17,r17,r3
 802b824:	00c1ff84 	movi	r3,2046
 802b828:	18beb416 	blt	r3,r2,802b2fc <__flash_rwdata_start+0xffffb7e0>
 802b82c:	a028d0fa 	srli	r20,r20,3
 802b830:	882a977a 	slli	r21,r17,29
 802b834:	8820927a 	slli	r16,r17,9
 802b838:	1081ffcc 	andi	r2,r2,2047
 802b83c:	ad2ab03a 	or	r21,r21,r20
 802b840:	8020d33a 	srli	r16,r16,12
 802b844:	9900004c 	andi	r4,r19,1
 802b848:	003eb006 	br	802b30c <__flash_rwdata_start+0xffffb7f0>
 802b84c:	8080022c 	andhi	r2,r16,8
 802b850:	10001226 	beq	r2,zero,802b89c <__divdf3+0x70c>
 802b854:	8880022c 	andhi	r2,r17,8
 802b858:	1000101e 	bne	r2,zero,802b89c <__divdf3+0x70c>
 802b85c:	00800434 	movhi	r2,16
 802b860:	8c000234 	orhi	r16,r17,8
 802b864:	10bfffc4 	addi	r2,r2,-1
 802b868:	b809883a 	mov	r4,r23
 802b86c:	80a0703a 	and	r16,r16,r2
 802b870:	a02b883a 	mov	r21,r20
 802b874:	003f0806 	br	802b498 <__flash_rwdata_start+0xffffb97c>
 802b878:	008000c4 	movi	r2,3
 802b87c:	3880b126 	beq	r7,r2,802bb44 <__divdf3+0x9b4>
 802b880:	00800044 	movi	r2,1
 802b884:	38805b1e 	bne	r7,r2,802b9f4 <__divdf3+0x864>
 802b888:	e009883a 	mov	r4,fp
 802b88c:	0005883a 	mov	r2,zero
 802b890:	0021883a 	mov	r16,zero
 802b894:	002b883a 	mov	r21,zero
 802b898:	003e9c06 	br	802b30c <__flash_rwdata_start+0xffffb7f0>
 802b89c:	00800434 	movhi	r2,16
 802b8a0:	84000234 	orhi	r16,r16,8
 802b8a4:	10bfffc4 	addi	r2,r2,-1
 802b8a8:	b009883a 	mov	r4,r22
 802b8ac:	80a0703a 	and	r16,r16,r2
 802b8b0:	003ef906 	br	802b498 <__flash_rwdata_start+0xffffb97c>
 802b8b4:	103fca26 	beq	r2,zero,802b7e0 <__flash_rwdata_start+0xffffbcc4>
 802b8b8:	b421883a 	add	r16,r22,r16
 802b8bc:	a17fffc4 	addi	r5,r20,-1
 802b8c0:	8580422e 	bgeu	r16,r22,802b9cc <__divdf3+0x83c>
 802b8c4:	2829883a 	mov	r20,r5
 802b8c8:	813fc41e 	bne	r16,r4,802b7dc <__flash_rwdata_start+0xffffbcc0>
 802b8cc:	d9800017 	ldw	r6,0(sp)
 802b8d0:	30bfc21e 	bne	r6,r2,802b7dc <__flash_rwdata_start+0xffffbcc0>
 802b8d4:	003fc206 	br	802b7e0 <__flash_rwdata_start+0xffffbcc4>
 802b8d8:	143ff604 	addi	r16,r2,-40
 802b8dc:	8c20983a 	sll	r16,r17,r16
 802b8e0:	002b883a 	mov	r21,zero
 802b8e4:	003eb406 	br	802b3b8 <__flash_rwdata_start+0xffffb89c>
 802b8e8:	d9800215 	stw	r6,8(sp)
 802b8ec:	d9c00515 	stw	r7,20(sp)
 802b8f0:	da000415 	stw	r8,16(sp)
 802b8f4:	802d1240 	call	802d124 <__clzsi2>
 802b8f8:	10800804 	addi	r2,r2,32
 802b8fc:	da000417 	ldw	r8,16(sp)
 802b900:	d9c00517 	ldw	r7,20(sp)
 802b904:	d9800217 	ldw	r6,8(sp)
 802b908:	003ea106 	br	802b390 <__flash_rwdata_start+0xffffb874>
 802b90c:	147ff604 	addi	r17,r2,-40
 802b910:	3462983a 	sll	r17,r6,r17
 802b914:	0029883a 	mov	r20,zero
 802b918:	003ec906 	br	802b440 <__flash_rwdata_start+0xffffb924>
 802b91c:	3009883a 	mov	r4,r6
 802b920:	d9400115 	stw	r5,4(sp)
 802b924:	d9800215 	stw	r6,8(sp)
 802b928:	da000415 	stw	r8,16(sp)
 802b92c:	da400315 	stw	r9,12(sp)
 802b930:	802d1240 	call	802d124 <__clzsi2>
 802b934:	10800804 	addi	r2,r2,32
 802b938:	da400317 	ldw	r9,12(sp)
 802b93c:	da000417 	ldw	r8,16(sp)
 802b940:	d9800217 	ldw	r6,8(sp)
 802b944:	d9400117 	ldw	r5,4(sp)
 802b948:	003eb306 	br	802b418 <__flash_rwdata_start+0xffffb8fc>
 802b94c:	d9800017 	ldw	r6,0(sp)
 802b950:	a9ab883a 	add	r21,r21,r6
 802b954:	a98b803a 	cmpltu	r5,r21,r6
 802b958:	2d8b883a 	add	r5,r5,r22
 802b95c:	2a11883a 	add	r8,r5,r8
 802b960:	897fffc4 	addi	r5,r17,-1
 802b964:	b2000c2e 	bgeu	r22,r8,802b998 <__divdf3+0x808>
 802b968:	41003f36 	bltu	r8,r4,802ba68 <__divdf3+0x8d8>
 802b96c:	22006c26 	beq	r4,r8,802bb20 <__divdf3+0x990>
 802b970:	4109c83a 	sub	r4,r8,r4
 802b974:	2823883a 	mov	r17,r5
 802b978:	003f3b06 	br	802b668 <__flash_rwdata_start+0xffffbb4c>
 802b97c:	ad3ed336 	bltu	r21,r20,802b4cc <__flash_rwdata_start+0xffffb9b0>
 802b980:	a804d07a 	srli	r2,r21,1
 802b984:	802e97fa 	slli	r23,r16,31
 802b988:	a82a97fa 	slli	r21,r21,31
 802b98c:	8020d07a 	srli	r16,r16,1
 802b990:	b8aeb03a 	or	r23,r23,r2
 802b994:	003ed006 	br	802b4d8 <__flash_rwdata_start+0xffffb9bc>
 802b998:	b23ff51e 	bne	r22,r8,802b970 <__flash_rwdata_start+0xffffbe54>
 802b99c:	d9800017 	ldw	r6,0(sp)
 802b9a0:	a9bff12e 	bgeu	r21,r6,802b968 <__flash_rwdata_start+0xffffbe4c>
 802b9a4:	b109c83a 	sub	r4,r22,r4
 802b9a8:	2823883a 	mov	r17,r5
 802b9ac:	003f2e06 	br	802b668 <__flash_rwdata_start+0xffffbb4c>
 802b9b0:	2021883a 	mov	r16,r4
 802b9b4:	003eff06 	br	802b5b4 <__flash_rwdata_start+0xffffba98>
 802b9b8:	2023883a 	mov	r17,r4
 802b9bc:	003ee406 	br	802b550 <__flash_rwdata_start+0xffffba34>
 802b9c0:	a8bfe236 	bltu	r21,r2,802b94c <__flash_rwdata_start+0xffffbe30>
 802b9c4:	0009883a 	mov	r4,zero
 802b9c8:	003f2706 	br	802b668 <__flash_rwdata_start+0xffffbb4c>
 802b9cc:	81002d36 	bltu	r16,r4,802ba84 <__divdf3+0x8f4>
 802b9d0:	24005626 	beq	r4,r16,802bb2c <__divdf3+0x99c>
 802b9d4:	2829883a 	mov	r20,r5
 802b9d8:	003f8006 	br	802b7dc <__flash_rwdata_start+0xffffbcc0>
 802b9dc:	053fffc4 	movi	r20,-1
 802b9e0:	003f7f06 	br	802b7e0 <__flash_rwdata_start+0xffffbcc4>
 802b9e4:	200f883a 	mov	r7,r4
 802b9e8:	003f3c06 	br	802b6dc <__flash_rwdata_start+0xffffbbc0>
 802b9ec:	1011883a 	mov	r8,r2
 802b9f0:	003f5506 	br	802b748 <__flash_rwdata_start+0xffffbc2c>
 802b9f4:	e027883a 	mov	r19,fp
 802b9f8:	003f7906 	br	802b7e0 <__flash_rwdata_start+0xffffbcc4>
 802b9fc:	010007c4 	movi	r4,31
 802ba00:	20c02816 	blt	r4,r3,802baa4 <__divdf3+0x914>
 802ba04:	00800804 	movi	r2,32
 802ba08:	10c5c83a 	sub	r2,r2,r3
 802ba0c:	888a983a 	sll	r5,r17,r2
 802ba10:	a0c8d83a 	srl	r4,r20,r3
 802ba14:	a084983a 	sll	r2,r20,r2
 802ba18:	88e2d83a 	srl	r17,r17,r3
 802ba1c:	2906b03a 	or	r3,r5,r4
 802ba20:	1004c03a 	cmpne	r2,r2,zero
 802ba24:	1886b03a 	or	r3,r3,r2
 802ba28:	188001cc 	andi	r2,r3,7
 802ba2c:	10000726 	beq	r2,zero,802ba4c <__divdf3+0x8bc>
 802ba30:	188003cc 	andi	r2,r3,15
 802ba34:	01000104 	movi	r4,4
 802ba38:	11000426 	beq	r2,r4,802ba4c <__divdf3+0x8bc>
 802ba3c:	1805883a 	mov	r2,r3
 802ba40:	10c00104 	addi	r3,r2,4
 802ba44:	1885803a 	cmpltu	r2,r3,r2
 802ba48:	88a3883a 	add	r17,r17,r2
 802ba4c:	8880202c 	andhi	r2,r17,128
 802ba50:	10002926 	beq	r2,zero,802baf8 <__divdf3+0x968>
 802ba54:	9900004c 	andi	r4,r19,1
 802ba58:	00800044 	movi	r2,1
 802ba5c:	0021883a 	mov	r16,zero
 802ba60:	002b883a 	mov	r21,zero
 802ba64:	003e2906 	br	802b30c <__flash_rwdata_start+0xffffb7f0>
 802ba68:	d9800017 	ldw	r6,0(sp)
 802ba6c:	8c7fff84 	addi	r17,r17,-2
 802ba70:	a9ab883a 	add	r21,r21,r6
 802ba74:	a98b803a 	cmpltu	r5,r21,r6
 802ba78:	2d8b883a 	add	r5,r5,r22
 802ba7c:	2a11883a 	add	r8,r5,r8
 802ba80:	003ef806 	br	802b664 <__flash_rwdata_start+0xffffbb48>
 802ba84:	d9800017 	ldw	r6,0(sp)
 802ba88:	318f883a 	add	r7,r6,r6
 802ba8c:	398b803a 	cmpltu	r5,r7,r6
 802ba90:	2d8d883a 	add	r6,r5,r22
 802ba94:	81a1883a 	add	r16,r16,r6
 802ba98:	a17fff84 	addi	r5,r20,-2
 802ba9c:	d9c00015 	stw	r7,0(sp)
 802baa0:	003f8806 	br	802b8c4 <__flash_rwdata_start+0xffffbda8>
 802baa4:	013ff844 	movi	r4,-31
 802baa8:	2085c83a 	sub	r2,r4,r2
 802baac:	8888d83a 	srl	r4,r17,r2
 802bab0:	00800804 	movi	r2,32
 802bab4:	18802126 	beq	r3,r2,802bb3c <__divdf3+0x9ac>
 802bab8:	04001004 	movi	r16,64
 802babc:	80c7c83a 	sub	r3,r16,r3
 802bac0:	88e0983a 	sll	r16,r17,r3
 802bac4:	8504b03a 	or	r2,r16,r20
 802bac8:	1004c03a 	cmpne	r2,r2,zero
 802bacc:	2084b03a 	or	r2,r4,r2
 802bad0:	144001cc 	andi	r17,r2,7
 802bad4:	88000d1e 	bne	r17,zero,802bb0c <__divdf3+0x97c>
 802bad8:	0021883a 	mov	r16,zero
 802badc:	102ad0fa 	srli	r21,r2,3
 802bae0:	9900004c 	andi	r4,r19,1
 802bae4:	0005883a 	mov	r2,zero
 802bae8:	ac6ab03a 	or	r21,r21,r17
 802baec:	003e0706 	br	802b30c <__flash_rwdata_start+0xffffb7f0>
 802baf0:	1007883a 	mov	r3,r2
 802baf4:	0023883a 	mov	r17,zero
 802baf8:	8820927a 	slli	r16,r17,9
 802bafc:	1805883a 	mov	r2,r3
 802bb00:	8822977a 	slli	r17,r17,29
 802bb04:	8020d33a 	srli	r16,r16,12
 802bb08:	003ff406 	br	802badc <__flash_rwdata_start+0xffffbfc0>
 802bb0c:	10c003cc 	andi	r3,r2,15
 802bb10:	01000104 	movi	r4,4
 802bb14:	193ff626 	beq	r3,r4,802baf0 <__flash_rwdata_start+0xffffbfd4>
 802bb18:	0023883a 	mov	r17,zero
 802bb1c:	003fc806 	br	802ba40 <__flash_rwdata_start+0xffffbf24>
 802bb20:	a8bfd136 	bltu	r21,r2,802ba68 <__flash_rwdata_start+0xffffbf4c>
 802bb24:	2823883a 	mov	r17,r5
 802bb28:	003fa606 	br	802b9c4 <__flash_rwdata_start+0xffffbea8>
 802bb2c:	d9800017 	ldw	r6,0(sp)
 802bb30:	30bfd436 	bltu	r6,r2,802ba84 <__flash_rwdata_start+0xffffbf68>
 802bb34:	2829883a 	mov	r20,r5
 802bb38:	003f6406 	br	802b8cc <__flash_rwdata_start+0xffffbdb0>
 802bb3c:	0021883a 	mov	r16,zero
 802bb40:	003fe006 	br	802bac4 <__flash_rwdata_start+0xffffbfa8>
 802bb44:	00800434 	movhi	r2,16
 802bb48:	8c000234 	orhi	r16,r17,8
 802bb4c:	10bfffc4 	addi	r2,r2,-1
 802bb50:	e009883a 	mov	r4,fp
 802bb54:	80a0703a 	and	r16,r16,r2
 802bb58:	a02b883a 	mov	r21,r20
 802bb5c:	003e4e06 	br	802b498 <__flash_rwdata_start+0xffffb97c>

0802bb60 <__eqdf2>:
 802bb60:	2804d53a 	srli	r2,r5,20
 802bb64:	3806d53a 	srli	r3,r7,20
 802bb68:	02000434 	movhi	r8,16
 802bb6c:	423fffc4 	addi	r8,r8,-1
 802bb70:	1081ffcc 	andi	r2,r2,2047
 802bb74:	0281ffc4 	movi	r10,2047
 802bb78:	2a12703a 	and	r9,r5,r8
 802bb7c:	18c1ffcc 	andi	r3,r3,2047
 802bb80:	3a10703a 	and	r8,r7,r8
 802bb84:	280ad7fa 	srli	r5,r5,31
 802bb88:	380ed7fa 	srli	r7,r7,31
 802bb8c:	12801026 	beq	r2,r10,802bbd0 <__eqdf2+0x70>
 802bb90:	0281ffc4 	movi	r10,2047
 802bb94:	1a800a26 	beq	r3,r10,802bbc0 <__eqdf2+0x60>
 802bb98:	10c00226 	beq	r2,r3,802bba4 <__eqdf2+0x44>
 802bb9c:	00800044 	movi	r2,1
 802bba0:	f800283a 	ret
 802bba4:	4a3ffd1e 	bne	r9,r8,802bb9c <__flash_rwdata_start+0xffffc080>
 802bba8:	21bffc1e 	bne	r4,r6,802bb9c <__flash_rwdata_start+0xffffc080>
 802bbac:	29c00c26 	beq	r5,r7,802bbe0 <__eqdf2+0x80>
 802bbb0:	103ffa1e 	bne	r2,zero,802bb9c <__flash_rwdata_start+0xffffc080>
 802bbb4:	2244b03a 	or	r2,r4,r9
 802bbb8:	1004c03a 	cmpne	r2,r2,zero
 802bbbc:	f800283a 	ret
 802bbc0:	3214b03a 	or	r10,r6,r8
 802bbc4:	503ff426 	beq	r10,zero,802bb98 <__flash_rwdata_start+0xffffc07c>
 802bbc8:	00800044 	movi	r2,1
 802bbcc:	f800283a 	ret
 802bbd0:	2254b03a 	or	r10,r4,r9
 802bbd4:	503fee26 	beq	r10,zero,802bb90 <__flash_rwdata_start+0xffffc074>
 802bbd8:	00800044 	movi	r2,1
 802bbdc:	f800283a 	ret
 802bbe0:	0005883a 	mov	r2,zero
 802bbe4:	f800283a 	ret

0802bbe8 <__gedf2>:
 802bbe8:	2804d53a 	srli	r2,r5,20
 802bbec:	3806d53a 	srli	r3,r7,20
 802bbf0:	02000434 	movhi	r8,16
 802bbf4:	423fffc4 	addi	r8,r8,-1
 802bbf8:	1081ffcc 	andi	r2,r2,2047
 802bbfc:	0241ffc4 	movi	r9,2047
 802bc00:	2a14703a 	and	r10,r5,r8
 802bc04:	18c1ffcc 	andi	r3,r3,2047
 802bc08:	3a10703a 	and	r8,r7,r8
 802bc0c:	280ad7fa 	srli	r5,r5,31
 802bc10:	380ed7fa 	srli	r7,r7,31
 802bc14:	12401d26 	beq	r2,r9,802bc8c <__gedf2+0xa4>
 802bc18:	0241ffc4 	movi	r9,2047
 802bc1c:	1a401226 	beq	r3,r9,802bc68 <__gedf2+0x80>
 802bc20:	1000081e 	bne	r2,zero,802bc44 <__gedf2+0x5c>
 802bc24:	2296b03a 	or	r11,r4,r10
 802bc28:	5813003a 	cmpeq	r9,r11,zero
 802bc2c:	1800091e 	bne	r3,zero,802bc54 <__gedf2+0x6c>
 802bc30:	3218b03a 	or	r12,r6,r8
 802bc34:	6000071e 	bne	r12,zero,802bc54 <__gedf2+0x6c>
 802bc38:	0005883a 	mov	r2,zero
 802bc3c:	5800101e 	bne	r11,zero,802bc80 <__gedf2+0x98>
 802bc40:	f800283a 	ret
 802bc44:	18000c1e 	bne	r3,zero,802bc78 <__gedf2+0x90>
 802bc48:	3212b03a 	or	r9,r6,r8
 802bc4c:	48000c26 	beq	r9,zero,802bc80 <__gedf2+0x98>
 802bc50:	0013883a 	mov	r9,zero
 802bc54:	39c03fcc 	andi	r7,r7,255
 802bc58:	48000826 	beq	r9,zero,802bc7c <__gedf2+0x94>
 802bc5c:	38000926 	beq	r7,zero,802bc84 <__gedf2+0x9c>
 802bc60:	00800044 	movi	r2,1
 802bc64:	f800283a 	ret
 802bc68:	3212b03a 	or	r9,r6,r8
 802bc6c:	483fec26 	beq	r9,zero,802bc20 <__flash_rwdata_start+0xffffc104>
 802bc70:	00bfff84 	movi	r2,-2
 802bc74:	f800283a 	ret
 802bc78:	39c03fcc 	andi	r7,r7,255
 802bc7c:	29c00626 	beq	r5,r7,802bc98 <__gedf2+0xb0>
 802bc80:	283ff726 	beq	r5,zero,802bc60 <__flash_rwdata_start+0xffffc144>
 802bc84:	00bfffc4 	movi	r2,-1
 802bc88:	f800283a 	ret
 802bc8c:	2292b03a 	or	r9,r4,r10
 802bc90:	483fe126 	beq	r9,zero,802bc18 <__flash_rwdata_start+0xffffc0fc>
 802bc94:	003ff606 	br	802bc70 <__flash_rwdata_start+0xffffc154>
 802bc98:	18bff916 	blt	r3,r2,802bc80 <__flash_rwdata_start+0xffffc164>
 802bc9c:	10c00316 	blt	r2,r3,802bcac <__gedf2+0xc4>
 802bca0:	42bff736 	bltu	r8,r10,802bc80 <__flash_rwdata_start+0xffffc164>
 802bca4:	52000326 	beq	r10,r8,802bcb4 <__gedf2+0xcc>
 802bca8:	5200042e 	bgeu	r10,r8,802bcbc <__gedf2+0xd4>
 802bcac:	283fec1e 	bne	r5,zero,802bc60 <__flash_rwdata_start+0xffffc144>
 802bcb0:	003ff406 	br	802bc84 <__flash_rwdata_start+0xffffc168>
 802bcb4:	313ff236 	bltu	r6,r4,802bc80 <__flash_rwdata_start+0xffffc164>
 802bcb8:	21bffc36 	bltu	r4,r6,802bcac <__flash_rwdata_start+0xffffc190>
 802bcbc:	0005883a 	mov	r2,zero
 802bcc0:	f800283a 	ret

0802bcc4 <__ledf2>:
 802bcc4:	2804d53a 	srli	r2,r5,20
 802bcc8:	3810d53a 	srli	r8,r7,20
 802bccc:	00c00434 	movhi	r3,16
 802bcd0:	18ffffc4 	addi	r3,r3,-1
 802bcd4:	1081ffcc 	andi	r2,r2,2047
 802bcd8:	0241ffc4 	movi	r9,2047
 802bcdc:	28d4703a 	and	r10,r5,r3
 802bce0:	4201ffcc 	andi	r8,r8,2047
 802bce4:	38c6703a 	and	r3,r7,r3
 802bce8:	280ad7fa 	srli	r5,r5,31
 802bcec:	380ed7fa 	srli	r7,r7,31
 802bcf0:	12401f26 	beq	r2,r9,802bd70 <__ledf2+0xac>
 802bcf4:	0241ffc4 	movi	r9,2047
 802bcf8:	42401426 	beq	r8,r9,802bd4c <__ledf2+0x88>
 802bcfc:	1000091e 	bne	r2,zero,802bd24 <__ledf2+0x60>
 802bd00:	2296b03a 	or	r11,r4,r10
 802bd04:	5813003a 	cmpeq	r9,r11,zero
 802bd08:	29403fcc 	andi	r5,r5,255
 802bd0c:	40000a1e 	bne	r8,zero,802bd38 <__ledf2+0x74>
 802bd10:	30d8b03a 	or	r12,r6,r3
 802bd14:	6000081e 	bne	r12,zero,802bd38 <__ledf2+0x74>
 802bd18:	0005883a 	mov	r2,zero
 802bd1c:	5800111e 	bne	r11,zero,802bd64 <__ledf2+0xa0>
 802bd20:	f800283a 	ret
 802bd24:	29403fcc 	andi	r5,r5,255
 802bd28:	40000c1e 	bne	r8,zero,802bd5c <__ledf2+0x98>
 802bd2c:	30d2b03a 	or	r9,r6,r3
 802bd30:	48000c26 	beq	r9,zero,802bd64 <__ledf2+0xa0>
 802bd34:	0013883a 	mov	r9,zero
 802bd38:	39c03fcc 	andi	r7,r7,255
 802bd3c:	48000826 	beq	r9,zero,802bd60 <__ledf2+0x9c>
 802bd40:	38001126 	beq	r7,zero,802bd88 <__ledf2+0xc4>
 802bd44:	00800044 	movi	r2,1
 802bd48:	f800283a 	ret
 802bd4c:	30d2b03a 	or	r9,r6,r3
 802bd50:	483fea26 	beq	r9,zero,802bcfc <__flash_rwdata_start+0xffffc1e0>
 802bd54:	00800084 	movi	r2,2
 802bd58:	f800283a 	ret
 802bd5c:	39c03fcc 	andi	r7,r7,255
 802bd60:	39400726 	beq	r7,r5,802bd80 <__ledf2+0xbc>
 802bd64:	2800081e 	bne	r5,zero,802bd88 <__ledf2+0xc4>
 802bd68:	00800044 	movi	r2,1
 802bd6c:	f800283a 	ret
 802bd70:	2292b03a 	or	r9,r4,r10
 802bd74:	483fdf26 	beq	r9,zero,802bcf4 <__flash_rwdata_start+0xffffc1d8>
 802bd78:	00800084 	movi	r2,2
 802bd7c:	f800283a 	ret
 802bd80:	4080030e 	bge	r8,r2,802bd90 <__ledf2+0xcc>
 802bd84:	383fef26 	beq	r7,zero,802bd44 <__flash_rwdata_start+0xffffc228>
 802bd88:	00bfffc4 	movi	r2,-1
 802bd8c:	f800283a 	ret
 802bd90:	123feb16 	blt	r2,r8,802bd40 <__flash_rwdata_start+0xffffc224>
 802bd94:	1abff336 	bltu	r3,r10,802bd64 <__flash_rwdata_start+0xffffc248>
 802bd98:	50c00326 	beq	r10,r3,802bda8 <__ledf2+0xe4>
 802bd9c:	50c0042e 	bgeu	r10,r3,802bdb0 <__ledf2+0xec>
 802bda0:	283fe81e 	bne	r5,zero,802bd44 <__flash_rwdata_start+0xffffc228>
 802bda4:	003ff806 	br	802bd88 <__flash_rwdata_start+0xffffc26c>
 802bda8:	313fee36 	bltu	r6,r4,802bd64 <__flash_rwdata_start+0xffffc248>
 802bdac:	21bffc36 	bltu	r4,r6,802bda0 <__flash_rwdata_start+0xffffc284>
 802bdb0:	0005883a 	mov	r2,zero
 802bdb4:	f800283a 	ret

0802bdb8 <__muldf3>:
 802bdb8:	deffee04 	addi	sp,sp,-72
 802bdbc:	dd000c15 	stw	r20,48(sp)
 802bdc0:	2828d53a 	srli	r20,r5,20
 802bdc4:	ddc00f15 	stw	r23,60(sp)
 802bdc8:	282ed7fa 	srli	r23,r5,31
 802bdcc:	dc000815 	stw	r16,32(sp)
 802bdd0:	04000434 	movhi	r16,16
 802bdd4:	dcc00b15 	stw	r19,44(sp)
 802bdd8:	843fffc4 	addi	r16,r16,-1
 802bddc:	dfc01115 	stw	ra,68(sp)
 802bde0:	df001015 	stw	fp,64(sp)
 802bde4:	dd800e15 	stw	r22,56(sp)
 802bde8:	dd400d15 	stw	r21,52(sp)
 802bdec:	dc800a15 	stw	r18,40(sp)
 802bdf0:	dc400915 	stw	r17,36(sp)
 802bdf4:	a501ffcc 	andi	r20,r20,2047
 802bdf8:	2c20703a 	and	r16,r5,r16
 802bdfc:	b827883a 	mov	r19,r23
 802be00:	ba403fcc 	andi	r9,r23,255
 802be04:	a0006026 	beq	r20,zero,802bf88 <__muldf3+0x1d0>
 802be08:	0081ffc4 	movi	r2,2047
 802be0c:	202d883a 	mov	r22,r4
 802be10:	a0803626 	beq	r20,r2,802beec <__muldf3+0x134>
 802be14:	84000434 	orhi	r16,r16,16
 802be18:	200ad77a 	srli	r5,r4,29
 802be1c:	800490fa 	slli	r2,r16,3
 802be20:	202c90fa 	slli	r22,r4,3
 802be24:	a53f0044 	addi	r20,r20,-1023
 802be28:	28a0b03a 	or	r16,r5,r2
 802be2c:	002b883a 	mov	r21,zero
 802be30:	000b883a 	mov	r5,zero
 802be34:	3804d53a 	srli	r2,r7,20
 802be38:	3838d7fa 	srli	fp,r7,31
 802be3c:	04400434 	movhi	r17,16
 802be40:	8c7fffc4 	addi	r17,r17,-1
 802be44:	1081ffcc 	andi	r2,r2,2047
 802be48:	3025883a 	mov	r18,r6
 802be4c:	3c62703a 	and	r17,r7,r17
 802be50:	e2803fcc 	andi	r10,fp,255
 802be54:	10006d26 	beq	r2,zero,802c00c <__muldf3+0x254>
 802be58:	00c1ffc4 	movi	r3,2047
 802be5c:	10c06526 	beq	r2,r3,802bff4 <__muldf3+0x23c>
 802be60:	8c400434 	orhi	r17,r17,16
 802be64:	300ed77a 	srli	r7,r6,29
 802be68:	880690fa 	slli	r3,r17,3
 802be6c:	302490fa 	slli	r18,r6,3
 802be70:	10bf0044 	addi	r2,r2,-1023
 802be74:	38e2b03a 	or	r17,r7,r3
 802be78:	000f883a 	mov	r7,zero
 802be7c:	a087883a 	add	r3,r20,r2
 802be80:	010003c4 	movi	r4,15
 802be84:	3d44b03a 	or	r2,r7,r21
 802be88:	e5ccf03a 	xor	r6,fp,r23
 802be8c:	1a000044 	addi	r8,r3,1
 802be90:	20809b36 	bltu	r4,r2,802c100 <__muldf3+0x348>
 802be94:	100490ba 	slli	r2,r2,2
 802be98:	010200f4 	movhi	r4,2051
 802be9c:	212fab04 	addi	r4,r4,-16724
 802bea0:	1105883a 	add	r2,r2,r4
 802bea4:	10800017 	ldw	r2,0(r2)
 802bea8:	1000683a 	jmp	r2
 802beac:	0802c100 	call	802c10 <_gp+0x7f8e64>
 802beb0:	0802bf0c 	andi	zero,at,2812
 802beb4:	0802bf0c 	andi	zero,at,2812
 802beb8:	0802bf08 	cmpgei	zero,at,2812
 802bebc:	0802c0dc 	xori	zero,at,2819
 802bec0:	0802c0dc 	xori	zero,at,2819
 802bec4:	0802c0c4 	addi	zero,at,2819
 802bec8:	0802bf08 	cmpgei	zero,at,2812
 802becc:	0802c0dc 	xori	zero,at,2819
 802bed0:	0802c0c4 	addi	zero,at,2819
 802bed4:	0802c0dc 	xori	zero,at,2819
 802bed8:	0802bf08 	cmpgei	zero,at,2812
 802bedc:	0802c0ec 	andhi	zero,at,2819
 802bee0:	0802c0ec 	andhi	zero,at,2819
 802bee4:	0802c0ec 	andhi	zero,at,2819
 802bee8:	0802c44c 	andi	zero,at,2833
 802beec:	2404b03a 	or	r2,r4,r16
 802bef0:	1000711e 	bne	r2,zero,802c0b8 <__muldf3+0x300>
 802bef4:	05400204 	movi	r21,8
 802bef8:	0021883a 	mov	r16,zero
 802befc:	002d883a 	mov	r22,zero
 802bf00:	01400084 	movi	r5,2
 802bf04:	003fcb06 	br	802be34 <__flash_rwdata_start+0xffffc318>
 802bf08:	500d883a 	mov	r6,r10
 802bf0c:	00800084 	movi	r2,2
 802bf10:	38805926 	beq	r7,r2,802c078 <__muldf3+0x2c0>
 802bf14:	008000c4 	movi	r2,3
 802bf18:	3881bb26 	beq	r7,r2,802c608 <__muldf3+0x850>
 802bf1c:	00800044 	movi	r2,1
 802bf20:	3881961e 	bne	r7,r2,802c57c <__muldf3+0x7c4>
 802bf24:	3027883a 	mov	r19,r6
 802bf28:	0005883a 	mov	r2,zero
 802bf2c:	0021883a 	mov	r16,zero
 802bf30:	002d883a 	mov	r22,zero
 802bf34:	1004953a 	slli	r2,r2,20
 802bf38:	98c03fcc 	andi	r3,r19,255
 802bf3c:	04400434 	movhi	r17,16
 802bf40:	8c7fffc4 	addi	r17,r17,-1
 802bf44:	180697fa 	slli	r3,r3,31
 802bf48:	8460703a 	and	r16,r16,r17
 802bf4c:	80a0b03a 	or	r16,r16,r2
 802bf50:	80c6b03a 	or	r3,r16,r3
 802bf54:	b005883a 	mov	r2,r22
 802bf58:	dfc01117 	ldw	ra,68(sp)
 802bf5c:	df001017 	ldw	fp,64(sp)
 802bf60:	ddc00f17 	ldw	r23,60(sp)
 802bf64:	dd800e17 	ldw	r22,56(sp)
 802bf68:	dd400d17 	ldw	r21,52(sp)
 802bf6c:	dd000c17 	ldw	r20,48(sp)
 802bf70:	dcc00b17 	ldw	r19,44(sp)
 802bf74:	dc800a17 	ldw	r18,40(sp)
 802bf78:	dc400917 	ldw	r17,36(sp)
 802bf7c:	dc000817 	ldw	r16,32(sp)
 802bf80:	dec01204 	addi	sp,sp,72
 802bf84:	f800283a 	ret
 802bf88:	2404b03a 	or	r2,r4,r16
 802bf8c:	202b883a 	mov	r21,r4
 802bf90:	10004426 	beq	r2,zero,802c0a4 <__muldf3+0x2ec>
 802bf94:	80015126 	beq	r16,zero,802c4dc <__muldf3+0x724>
 802bf98:	8009883a 	mov	r4,r16
 802bf9c:	d9800715 	stw	r6,28(sp)
 802bfa0:	d9c00215 	stw	r7,8(sp)
 802bfa4:	da400415 	stw	r9,16(sp)
 802bfa8:	802d1240 	call	802d124 <__clzsi2>
 802bfac:	d9800717 	ldw	r6,28(sp)
 802bfb0:	d9c00217 	ldw	r7,8(sp)
 802bfb4:	da400417 	ldw	r9,16(sp)
 802bfb8:	113ffd44 	addi	r4,r2,-11
 802bfbc:	00c00704 	movi	r3,28
 802bfc0:	19014216 	blt	r3,r4,802c4cc <__muldf3+0x714>
 802bfc4:	00c00744 	movi	r3,29
 802bfc8:	15bffe04 	addi	r22,r2,-8
 802bfcc:	1907c83a 	sub	r3,r3,r4
 802bfd0:	85a0983a 	sll	r16,r16,r22
 802bfd4:	a8c6d83a 	srl	r3,r21,r3
 802bfd8:	adac983a 	sll	r22,r21,r22
 802bfdc:	1c20b03a 	or	r16,r3,r16
 802bfe0:	1080fcc4 	addi	r2,r2,1011
 802bfe4:	00a9c83a 	sub	r20,zero,r2
 802bfe8:	002b883a 	mov	r21,zero
 802bfec:	000b883a 	mov	r5,zero
 802bff0:	003f9006 	br	802be34 <__flash_rwdata_start+0xffffc318>
 802bff4:	3446b03a 	or	r3,r6,r17
 802bff8:	1800281e 	bne	r3,zero,802c09c <__muldf3+0x2e4>
 802bffc:	0023883a 	mov	r17,zero
 802c000:	0025883a 	mov	r18,zero
 802c004:	01c00084 	movi	r7,2
 802c008:	003f9c06 	br	802be7c <__flash_rwdata_start+0xffffc360>
 802c00c:	3446b03a 	or	r3,r6,r17
 802c010:	18001e26 	beq	r3,zero,802c08c <__muldf3+0x2d4>
 802c014:	88012126 	beq	r17,zero,802c49c <__muldf3+0x6e4>
 802c018:	8809883a 	mov	r4,r17
 802c01c:	d9400215 	stw	r5,8(sp)
 802c020:	d9800715 	stw	r6,28(sp)
 802c024:	da400415 	stw	r9,16(sp)
 802c028:	da800315 	stw	r10,12(sp)
 802c02c:	802d1240 	call	802d124 <__clzsi2>
 802c030:	d9400217 	ldw	r5,8(sp)
 802c034:	d9800717 	ldw	r6,28(sp)
 802c038:	da400417 	ldw	r9,16(sp)
 802c03c:	da800317 	ldw	r10,12(sp)
 802c040:	113ffd44 	addi	r4,r2,-11
 802c044:	00c00704 	movi	r3,28
 802c048:	19011016 	blt	r3,r4,802c48c <__muldf3+0x6d4>
 802c04c:	00c00744 	movi	r3,29
 802c050:	14bffe04 	addi	r18,r2,-8
 802c054:	1907c83a 	sub	r3,r3,r4
 802c058:	8ca2983a 	sll	r17,r17,r18
 802c05c:	30c6d83a 	srl	r3,r6,r3
 802c060:	34a4983a 	sll	r18,r6,r18
 802c064:	1c62b03a 	or	r17,r3,r17
 802c068:	1080fcc4 	addi	r2,r2,1011
 802c06c:	0085c83a 	sub	r2,zero,r2
 802c070:	000f883a 	mov	r7,zero
 802c074:	003f8106 	br	802be7c <__flash_rwdata_start+0xffffc360>
 802c078:	3027883a 	mov	r19,r6
 802c07c:	0081ffc4 	movi	r2,2047
 802c080:	0021883a 	mov	r16,zero
 802c084:	002d883a 	mov	r22,zero
 802c088:	003faa06 	br	802bf34 <__flash_rwdata_start+0xffffc418>
 802c08c:	0023883a 	mov	r17,zero
 802c090:	0025883a 	mov	r18,zero
 802c094:	01c00044 	movi	r7,1
 802c098:	003f7806 	br	802be7c <__flash_rwdata_start+0xffffc360>
 802c09c:	01c000c4 	movi	r7,3
 802c0a0:	003f7606 	br	802be7c <__flash_rwdata_start+0xffffc360>
 802c0a4:	05400104 	movi	r21,4
 802c0a8:	0021883a 	mov	r16,zero
 802c0ac:	002d883a 	mov	r22,zero
 802c0b0:	01400044 	movi	r5,1
 802c0b4:	003f5f06 	br	802be34 <__flash_rwdata_start+0xffffc318>
 802c0b8:	05400304 	movi	r21,12
 802c0bc:	014000c4 	movi	r5,3
 802c0c0:	003f5c06 	br	802be34 <__flash_rwdata_start+0xffffc318>
 802c0c4:	04000434 	movhi	r16,16
 802c0c8:	0027883a 	mov	r19,zero
 802c0cc:	843fffc4 	addi	r16,r16,-1
 802c0d0:	05bfffc4 	movi	r22,-1
 802c0d4:	0081ffc4 	movi	r2,2047
 802c0d8:	003f9606 	br	802bf34 <__flash_rwdata_start+0xffffc418>
 802c0dc:	8023883a 	mov	r17,r16
 802c0e0:	b025883a 	mov	r18,r22
 802c0e4:	280f883a 	mov	r7,r5
 802c0e8:	003f8806 	br	802bf0c <__flash_rwdata_start+0xffffc3f0>
 802c0ec:	8023883a 	mov	r17,r16
 802c0f0:	b025883a 	mov	r18,r22
 802c0f4:	480d883a 	mov	r6,r9
 802c0f8:	280f883a 	mov	r7,r5
 802c0fc:	003f8306 	br	802bf0c <__flash_rwdata_start+0xffffc3f0>
 802c100:	b026d43a 	srli	r19,r22,16
 802c104:	902ed43a 	srli	r23,r18,16
 802c108:	b5bfffcc 	andi	r22,r22,65535
 802c10c:	94bfffcc 	andi	r18,r18,65535
 802c110:	b00b883a 	mov	r5,r22
 802c114:	9009883a 	mov	r4,r18
 802c118:	d8c00515 	stw	r3,20(sp)
 802c11c:	d9800715 	stw	r6,28(sp)
 802c120:	da000615 	stw	r8,24(sp)
 802c124:	802a8bc0 	call	802a8bc <__mulsi3>
 802c128:	980b883a 	mov	r5,r19
 802c12c:	9009883a 	mov	r4,r18
 802c130:	1029883a 	mov	r20,r2
 802c134:	802a8bc0 	call	802a8bc <__mulsi3>
 802c138:	b80b883a 	mov	r5,r23
 802c13c:	9809883a 	mov	r4,r19
 802c140:	102b883a 	mov	r21,r2
 802c144:	802a8bc0 	call	802a8bc <__mulsi3>
 802c148:	b809883a 	mov	r4,r23
 802c14c:	b00b883a 	mov	r5,r22
 802c150:	1039883a 	mov	fp,r2
 802c154:	802a8bc0 	call	802a8bc <__mulsi3>
 802c158:	a008d43a 	srli	r4,r20,16
 802c15c:	1545883a 	add	r2,r2,r21
 802c160:	d8c00517 	ldw	r3,20(sp)
 802c164:	2085883a 	add	r2,r4,r2
 802c168:	d9800717 	ldw	r6,28(sp)
 802c16c:	da000617 	ldw	r8,24(sp)
 802c170:	1540022e 	bgeu	r2,r21,802c17c <__muldf3+0x3c4>
 802c174:	01000074 	movhi	r4,1
 802c178:	e139883a 	add	fp,fp,r4
 802c17c:	100e943a 	slli	r7,r2,16
 802c180:	1004d43a 	srli	r2,r2,16
 802c184:	882ad43a 	srli	r21,r17,16
 802c188:	a53fffcc 	andi	r20,r20,65535
 802c18c:	8c7fffcc 	andi	r17,r17,65535
 802c190:	3d29883a 	add	r20,r7,r20
 802c194:	b00b883a 	mov	r5,r22
 802c198:	8809883a 	mov	r4,r17
 802c19c:	d8c00515 	stw	r3,20(sp)
 802c1a0:	d9800715 	stw	r6,28(sp)
 802c1a4:	da000615 	stw	r8,24(sp)
 802c1a8:	dd000115 	stw	r20,4(sp)
 802c1ac:	d8800015 	stw	r2,0(sp)
 802c1b0:	802a8bc0 	call	802a8bc <__mulsi3>
 802c1b4:	980b883a 	mov	r5,r19
 802c1b8:	8809883a 	mov	r4,r17
 802c1bc:	d8800215 	stw	r2,8(sp)
 802c1c0:	802a8bc0 	call	802a8bc <__mulsi3>
 802c1c4:	9809883a 	mov	r4,r19
 802c1c8:	a80b883a 	mov	r5,r21
 802c1cc:	1029883a 	mov	r20,r2
 802c1d0:	802a8bc0 	call	802a8bc <__mulsi3>
 802c1d4:	b00b883a 	mov	r5,r22
 802c1d8:	a809883a 	mov	r4,r21
 802c1dc:	d8800415 	stw	r2,16(sp)
 802c1e0:	802a8bc0 	call	802a8bc <__mulsi3>
 802c1e4:	d9c00217 	ldw	r7,8(sp)
 802c1e8:	1505883a 	add	r2,r2,r20
 802c1ec:	d8c00517 	ldw	r3,20(sp)
 802c1f0:	3826d43a 	srli	r19,r7,16
 802c1f4:	d9800717 	ldw	r6,28(sp)
 802c1f8:	da000617 	ldw	r8,24(sp)
 802c1fc:	9885883a 	add	r2,r19,r2
 802c200:	da400417 	ldw	r9,16(sp)
 802c204:	1500022e 	bgeu	r2,r20,802c210 <__muldf3+0x458>
 802c208:	01000074 	movhi	r4,1
 802c20c:	4913883a 	add	r9,r9,r4
 802c210:	1028d43a 	srli	r20,r2,16
 802c214:	1004943a 	slli	r2,r2,16
 802c218:	802cd43a 	srli	r22,r16,16
 802c21c:	843fffcc 	andi	r16,r16,65535
 802c220:	3cffffcc 	andi	r19,r7,65535
 802c224:	9009883a 	mov	r4,r18
 802c228:	800b883a 	mov	r5,r16
 802c22c:	a269883a 	add	r20,r20,r9
 802c230:	d8c00515 	stw	r3,20(sp)
 802c234:	d9800715 	stw	r6,28(sp)
 802c238:	da000615 	stw	r8,24(sp)
 802c23c:	14e7883a 	add	r19,r2,r19
 802c240:	802a8bc0 	call	802a8bc <__mulsi3>
 802c244:	9009883a 	mov	r4,r18
 802c248:	b00b883a 	mov	r5,r22
 802c24c:	d8800315 	stw	r2,12(sp)
 802c250:	802a8bc0 	call	802a8bc <__mulsi3>
 802c254:	b809883a 	mov	r4,r23
 802c258:	b00b883a 	mov	r5,r22
 802c25c:	d8800215 	stw	r2,8(sp)
 802c260:	802a8bc0 	call	802a8bc <__mulsi3>
 802c264:	b80b883a 	mov	r5,r23
 802c268:	8009883a 	mov	r4,r16
 802c26c:	d8800415 	stw	r2,16(sp)
 802c270:	802a8bc0 	call	802a8bc <__mulsi3>
 802c274:	da800317 	ldw	r10,12(sp)
 802c278:	d9c00217 	ldw	r7,8(sp)
 802c27c:	d9000017 	ldw	r4,0(sp)
 802c280:	502ed43a 	srli	r23,r10,16
 802c284:	11c5883a 	add	r2,r2,r7
 802c288:	24e5883a 	add	r18,r4,r19
 802c28c:	b885883a 	add	r2,r23,r2
 802c290:	d8c00517 	ldw	r3,20(sp)
 802c294:	d9800717 	ldw	r6,28(sp)
 802c298:	da000617 	ldw	r8,24(sp)
 802c29c:	da400417 	ldw	r9,16(sp)
 802c2a0:	11c0022e 	bgeu	r2,r7,802c2ac <__muldf3+0x4f4>
 802c2a4:	01000074 	movhi	r4,1
 802c2a8:	4913883a 	add	r9,r9,r4
 802c2ac:	100ed43a 	srli	r7,r2,16
 802c2b0:	1004943a 	slli	r2,r2,16
 802c2b4:	55ffffcc 	andi	r23,r10,65535
 802c2b8:	3a53883a 	add	r9,r7,r9
 802c2bc:	8809883a 	mov	r4,r17
 802c2c0:	800b883a 	mov	r5,r16
 802c2c4:	d8c00515 	stw	r3,20(sp)
 802c2c8:	d9800715 	stw	r6,28(sp)
 802c2cc:	da000615 	stw	r8,24(sp)
 802c2d0:	da400415 	stw	r9,16(sp)
 802c2d4:	15ef883a 	add	r23,r2,r23
 802c2d8:	802a8bc0 	call	802a8bc <__mulsi3>
 802c2dc:	8809883a 	mov	r4,r17
 802c2e0:	b00b883a 	mov	r5,r22
 802c2e4:	d8800215 	stw	r2,8(sp)
 802c2e8:	802a8bc0 	call	802a8bc <__mulsi3>
 802c2ec:	b00b883a 	mov	r5,r22
 802c2f0:	a809883a 	mov	r4,r21
 802c2f4:	d8800315 	stw	r2,12(sp)
 802c2f8:	802a8bc0 	call	802a8bc <__mulsi3>
 802c2fc:	8009883a 	mov	r4,r16
 802c300:	a80b883a 	mov	r5,r21
 802c304:	1023883a 	mov	r17,r2
 802c308:	802a8bc0 	call	802a8bc <__mulsi3>
 802c30c:	d9c00217 	ldw	r7,8(sp)
 802c310:	da800317 	ldw	r10,12(sp)
 802c314:	d8c00517 	ldw	r3,20(sp)
 802c318:	3808d43a 	srli	r4,r7,16
 802c31c:	1285883a 	add	r2,r2,r10
 802c320:	d9800717 	ldw	r6,28(sp)
 802c324:	2085883a 	add	r2,r4,r2
 802c328:	da000617 	ldw	r8,24(sp)
 802c32c:	da400417 	ldw	r9,16(sp)
 802c330:	1280022e 	bgeu	r2,r10,802c33c <__muldf3+0x584>
 802c334:	01000074 	movhi	r4,1
 802c338:	8923883a 	add	r17,r17,r4
 802c33c:	1008943a 	slli	r4,r2,16
 802c340:	39ffffcc 	andi	r7,r7,65535
 802c344:	e4b9883a 	add	fp,fp,r18
 802c348:	21cf883a 	add	r7,r4,r7
 802c34c:	e4e7803a 	cmpltu	r19,fp,r19
 802c350:	3d0f883a 	add	r7,r7,r20
 802c354:	bf39883a 	add	fp,r23,fp
 802c358:	99c9883a 	add	r4,r19,r7
 802c35c:	e5ef803a 	cmpltu	r23,fp,r23
 802c360:	490b883a 	add	r5,r9,r4
 802c364:	1004d43a 	srli	r2,r2,16
 802c368:	b965883a 	add	r18,r23,r5
 802c36c:	24c9803a 	cmpltu	r4,r4,r19
 802c370:	3d29803a 	cmpltu	r20,r7,r20
 802c374:	a128b03a 	or	r20,r20,r4
 802c378:	95ef803a 	cmpltu	r23,r18,r23
 802c37c:	2a53803a 	cmpltu	r9,r5,r9
 802c380:	a0a9883a 	add	r20,r20,r2
 802c384:	4deeb03a 	or	r23,r9,r23
 802c388:	a5ef883a 	add	r23,r20,r23
 802c38c:	bc63883a 	add	r17,r23,r17
 802c390:	e004927a 	slli	r2,fp,9
 802c394:	d9000117 	ldw	r4,4(sp)
 802c398:	882e927a 	slli	r23,r17,9
 802c39c:	9022d5fa 	srli	r17,r18,23
 802c3a0:	e038d5fa 	srli	fp,fp,23
 802c3a4:	1104b03a 	or	r2,r2,r4
 802c3a8:	9024927a 	slli	r18,r18,9
 802c3ac:	1004c03a 	cmpne	r2,r2,zero
 802c3b0:	bc62b03a 	or	r17,r23,r17
 802c3b4:	1738b03a 	or	fp,r2,fp
 802c3b8:	8880402c 	andhi	r2,r17,256
 802c3bc:	e4a4b03a 	or	r18,fp,r18
 802c3c0:	10000726 	beq	r2,zero,802c3e0 <__muldf3+0x628>
 802c3c4:	9006d07a 	srli	r3,r18,1
 802c3c8:	880497fa 	slli	r2,r17,31
 802c3cc:	9480004c 	andi	r18,r18,1
 802c3d0:	8822d07a 	srli	r17,r17,1
 802c3d4:	1ca4b03a 	or	r18,r3,r18
 802c3d8:	14a4b03a 	or	r18,r2,r18
 802c3dc:	4007883a 	mov	r3,r8
 802c3e0:	1880ffc4 	addi	r2,r3,1023
 802c3e4:	0080460e 	bge	zero,r2,802c500 <__muldf3+0x748>
 802c3e8:	910001cc 	andi	r4,r18,7
 802c3ec:	20000726 	beq	r4,zero,802c40c <__muldf3+0x654>
 802c3f0:	910003cc 	andi	r4,r18,15
 802c3f4:	01400104 	movi	r5,4
 802c3f8:	21400426 	beq	r4,r5,802c40c <__muldf3+0x654>
 802c3fc:	9149883a 	add	r4,r18,r5
 802c400:	24a5803a 	cmpltu	r18,r4,r18
 802c404:	8ca3883a 	add	r17,r17,r18
 802c408:	2025883a 	mov	r18,r4
 802c40c:	8900402c 	andhi	r4,r17,256
 802c410:	20000426 	beq	r4,zero,802c424 <__muldf3+0x66c>
 802c414:	18810004 	addi	r2,r3,1024
 802c418:	00ffc034 	movhi	r3,65280
 802c41c:	18ffffc4 	addi	r3,r3,-1
 802c420:	88e2703a 	and	r17,r17,r3
 802c424:	00c1ff84 	movi	r3,2046
 802c428:	18bf1316 	blt	r3,r2,802c078 <__flash_rwdata_start+0xffffc55c>
 802c42c:	882c977a 	slli	r22,r17,29
 802c430:	9024d0fa 	srli	r18,r18,3
 802c434:	8822927a 	slli	r17,r17,9
 802c438:	1081ffcc 	andi	r2,r2,2047
 802c43c:	b4acb03a 	or	r22,r22,r18
 802c440:	8820d33a 	srli	r16,r17,12
 802c444:	3027883a 	mov	r19,r6
 802c448:	003eba06 	br	802bf34 <__flash_rwdata_start+0xffffc418>
 802c44c:	8080022c 	andhi	r2,r16,8
 802c450:	10000926 	beq	r2,zero,802c478 <__muldf3+0x6c0>
 802c454:	8880022c 	andhi	r2,r17,8
 802c458:	1000071e 	bne	r2,zero,802c478 <__muldf3+0x6c0>
 802c45c:	00800434 	movhi	r2,16
 802c460:	8c000234 	orhi	r16,r17,8
 802c464:	10bfffc4 	addi	r2,r2,-1
 802c468:	e027883a 	mov	r19,fp
 802c46c:	80a0703a 	and	r16,r16,r2
 802c470:	902d883a 	mov	r22,r18
 802c474:	003f1706 	br	802c0d4 <__flash_rwdata_start+0xffffc5b8>
 802c478:	00800434 	movhi	r2,16
 802c47c:	84000234 	orhi	r16,r16,8
 802c480:	10bfffc4 	addi	r2,r2,-1
 802c484:	80a0703a 	and	r16,r16,r2
 802c488:	003f1206 	br	802c0d4 <__flash_rwdata_start+0xffffc5b8>
 802c48c:	147ff604 	addi	r17,r2,-40
 802c490:	3462983a 	sll	r17,r6,r17
 802c494:	0025883a 	mov	r18,zero
 802c498:	003ef306 	br	802c068 <__flash_rwdata_start+0xffffc54c>
 802c49c:	3009883a 	mov	r4,r6
 802c4a0:	d9400215 	stw	r5,8(sp)
 802c4a4:	d9800715 	stw	r6,28(sp)
 802c4a8:	da400415 	stw	r9,16(sp)
 802c4ac:	da800315 	stw	r10,12(sp)
 802c4b0:	802d1240 	call	802d124 <__clzsi2>
 802c4b4:	10800804 	addi	r2,r2,32
 802c4b8:	da800317 	ldw	r10,12(sp)
 802c4bc:	da400417 	ldw	r9,16(sp)
 802c4c0:	d9800717 	ldw	r6,28(sp)
 802c4c4:	d9400217 	ldw	r5,8(sp)
 802c4c8:	003edd06 	br	802c040 <__flash_rwdata_start+0xffffc524>
 802c4cc:	143ff604 	addi	r16,r2,-40
 802c4d0:	ac20983a 	sll	r16,r21,r16
 802c4d4:	002d883a 	mov	r22,zero
 802c4d8:	003ec106 	br	802bfe0 <__flash_rwdata_start+0xffffc4c4>
 802c4dc:	d9800715 	stw	r6,28(sp)
 802c4e0:	d9c00215 	stw	r7,8(sp)
 802c4e4:	da400415 	stw	r9,16(sp)
 802c4e8:	802d1240 	call	802d124 <__clzsi2>
 802c4ec:	10800804 	addi	r2,r2,32
 802c4f0:	da400417 	ldw	r9,16(sp)
 802c4f4:	d9c00217 	ldw	r7,8(sp)
 802c4f8:	d9800717 	ldw	r6,28(sp)
 802c4fc:	003eae06 	br	802bfb8 <__flash_rwdata_start+0xffffc49c>
 802c500:	00c00044 	movi	r3,1
 802c504:	1887c83a 	sub	r3,r3,r2
 802c508:	01000e04 	movi	r4,56
 802c50c:	20fe8516 	blt	r4,r3,802bf24 <__flash_rwdata_start+0xffffc408>
 802c510:	010007c4 	movi	r4,31
 802c514:	20c01b16 	blt	r4,r3,802c584 <__muldf3+0x7cc>
 802c518:	00800804 	movi	r2,32
 802c51c:	10c5c83a 	sub	r2,r2,r3
 802c520:	888a983a 	sll	r5,r17,r2
 802c524:	90c8d83a 	srl	r4,r18,r3
 802c528:	9084983a 	sll	r2,r18,r2
 802c52c:	88e2d83a 	srl	r17,r17,r3
 802c530:	2906b03a 	or	r3,r5,r4
 802c534:	1004c03a 	cmpne	r2,r2,zero
 802c538:	1886b03a 	or	r3,r3,r2
 802c53c:	188001cc 	andi	r2,r3,7
 802c540:	10000726 	beq	r2,zero,802c560 <__muldf3+0x7a8>
 802c544:	188003cc 	andi	r2,r3,15
 802c548:	01000104 	movi	r4,4
 802c54c:	11000426 	beq	r2,r4,802c560 <__muldf3+0x7a8>
 802c550:	1805883a 	mov	r2,r3
 802c554:	10c00104 	addi	r3,r2,4
 802c558:	1885803a 	cmpltu	r2,r3,r2
 802c55c:	88a3883a 	add	r17,r17,r2
 802c560:	8880202c 	andhi	r2,r17,128
 802c564:	10001c26 	beq	r2,zero,802c5d8 <__muldf3+0x820>
 802c568:	3027883a 	mov	r19,r6
 802c56c:	00800044 	movi	r2,1
 802c570:	0021883a 	mov	r16,zero
 802c574:	002d883a 	mov	r22,zero
 802c578:	003e6e06 	br	802bf34 <__flash_rwdata_start+0xffffc418>
 802c57c:	4007883a 	mov	r3,r8
 802c580:	003f9706 	br	802c3e0 <__flash_rwdata_start+0xffffc8c4>
 802c584:	017ff844 	movi	r5,-31
 802c588:	2885c83a 	sub	r2,r5,r2
 802c58c:	888ad83a 	srl	r5,r17,r2
 802c590:	00800804 	movi	r2,32
 802c594:	18801a26 	beq	r3,r2,802c600 <__muldf3+0x848>
 802c598:	01001004 	movi	r4,64
 802c59c:	20c7c83a 	sub	r3,r4,r3
 802c5a0:	88e2983a 	sll	r17,r17,r3
 802c5a4:	8ca4b03a 	or	r18,r17,r18
 802c5a8:	9004c03a 	cmpne	r2,r18,zero
 802c5ac:	2884b03a 	or	r2,r5,r2
 802c5b0:	144001cc 	andi	r17,r2,7
 802c5b4:	88000d1e 	bne	r17,zero,802c5ec <__muldf3+0x834>
 802c5b8:	0021883a 	mov	r16,zero
 802c5bc:	102cd0fa 	srli	r22,r2,3
 802c5c0:	3027883a 	mov	r19,r6
 802c5c4:	0005883a 	mov	r2,zero
 802c5c8:	b46cb03a 	or	r22,r22,r17
 802c5cc:	003e5906 	br	802bf34 <__flash_rwdata_start+0xffffc418>
 802c5d0:	1007883a 	mov	r3,r2
 802c5d4:	0023883a 	mov	r17,zero
 802c5d8:	8820927a 	slli	r16,r17,9
 802c5dc:	1805883a 	mov	r2,r3
 802c5e0:	8822977a 	slli	r17,r17,29
 802c5e4:	8020d33a 	srli	r16,r16,12
 802c5e8:	003ff406 	br	802c5bc <__flash_rwdata_start+0xffffcaa0>
 802c5ec:	10c003cc 	andi	r3,r2,15
 802c5f0:	01000104 	movi	r4,4
 802c5f4:	193ff626 	beq	r3,r4,802c5d0 <__flash_rwdata_start+0xffffcab4>
 802c5f8:	0023883a 	mov	r17,zero
 802c5fc:	003fd506 	br	802c554 <__flash_rwdata_start+0xffffca38>
 802c600:	0023883a 	mov	r17,zero
 802c604:	003fe706 	br	802c5a4 <__flash_rwdata_start+0xffffca88>
 802c608:	00800434 	movhi	r2,16
 802c60c:	8c000234 	orhi	r16,r17,8
 802c610:	10bfffc4 	addi	r2,r2,-1
 802c614:	3027883a 	mov	r19,r6
 802c618:	80a0703a 	and	r16,r16,r2
 802c61c:	902d883a 	mov	r22,r18
 802c620:	003eac06 	br	802c0d4 <__flash_rwdata_start+0xffffc5b8>

0802c624 <__subdf3>:
 802c624:	02000434 	movhi	r8,16
 802c628:	423fffc4 	addi	r8,r8,-1
 802c62c:	defffb04 	addi	sp,sp,-20
 802c630:	2a14703a 	and	r10,r5,r8
 802c634:	3812d53a 	srli	r9,r7,20
 802c638:	3a10703a 	and	r8,r7,r8
 802c63c:	2006d77a 	srli	r3,r4,29
 802c640:	3004d77a 	srli	r2,r6,29
 802c644:	dc000015 	stw	r16,0(sp)
 802c648:	501490fa 	slli	r10,r10,3
 802c64c:	2820d53a 	srli	r16,r5,20
 802c650:	401090fa 	slli	r8,r8,3
 802c654:	dc800215 	stw	r18,8(sp)
 802c658:	dc400115 	stw	r17,4(sp)
 802c65c:	dfc00415 	stw	ra,16(sp)
 802c660:	202290fa 	slli	r17,r4,3
 802c664:	dcc00315 	stw	r19,12(sp)
 802c668:	4a41ffcc 	andi	r9,r9,2047
 802c66c:	0101ffc4 	movi	r4,2047
 802c670:	2824d7fa 	srli	r18,r5,31
 802c674:	8401ffcc 	andi	r16,r16,2047
 802c678:	50c6b03a 	or	r3,r10,r3
 802c67c:	380ed7fa 	srli	r7,r7,31
 802c680:	408ab03a 	or	r5,r8,r2
 802c684:	300c90fa 	slli	r6,r6,3
 802c688:	49009626 	beq	r9,r4,802c8e4 <__subdf3+0x2c0>
 802c68c:	39c0005c 	xori	r7,r7,1
 802c690:	8245c83a 	sub	r2,r16,r9
 802c694:	3c807426 	beq	r7,r18,802c868 <__subdf3+0x244>
 802c698:	0080af0e 	bge	zero,r2,802c958 <__subdf3+0x334>
 802c69c:	48002a1e 	bne	r9,zero,802c748 <__subdf3+0x124>
 802c6a0:	2988b03a 	or	r4,r5,r6
 802c6a4:	20009a1e 	bne	r4,zero,802c910 <__subdf3+0x2ec>
 802c6a8:	888001cc 	andi	r2,r17,7
 802c6ac:	10000726 	beq	r2,zero,802c6cc <__subdf3+0xa8>
 802c6b0:	888003cc 	andi	r2,r17,15
 802c6b4:	01000104 	movi	r4,4
 802c6b8:	11000426 	beq	r2,r4,802c6cc <__subdf3+0xa8>
 802c6bc:	890b883a 	add	r5,r17,r4
 802c6c0:	2c63803a 	cmpltu	r17,r5,r17
 802c6c4:	1c47883a 	add	r3,r3,r17
 802c6c8:	2823883a 	mov	r17,r5
 802c6cc:	1880202c 	andhi	r2,r3,128
 802c6d0:	10005926 	beq	r2,zero,802c838 <__subdf3+0x214>
 802c6d4:	84000044 	addi	r16,r16,1
 802c6d8:	0081ffc4 	movi	r2,2047
 802c6dc:	8080be26 	beq	r16,r2,802c9d8 <__subdf3+0x3b4>
 802c6e0:	017fe034 	movhi	r5,65408
 802c6e4:	297fffc4 	addi	r5,r5,-1
 802c6e8:	1946703a 	and	r3,r3,r5
 802c6ec:	1804977a 	slli	r2,r3,29
 802c6f0:	1806927a 	slli	r3,r3,9
 802c6f4:	8822d0fa 	srli	r17,r17,3
 802c6f8:	8401ffcc 	andi	r16,r16,2047
 802c6fc:	180ad33a 	srli	r5,r3,12
 802c700:	9100004c 	andi	r4,r18,1
 802c704:	1444b03a 	or	r2,r2,r17
 802c708:	80c1ffcc 	andi	r3,r16,2047
 802c70c:	1820953a 	slli	r16,r3,20
 802c710:	20c03fcc 	andi	r3,r4,255
 802c714:	180897fa 	slli	r4,r3,31
 802c718:	00c00434 	movhi	r3,16
 802c71c:	18ffffc4 	addi	r3,r3,-1
 802c720:	28c6703a 	and	r3,r5,r3
 802c724:	1c06b03a 	or	r3,r3,r16
 802c728:	1906b03a 	or	r3,r3,r4
 802c72c:	dfc00417 	ldw	ra,16(sp)
 802c730:	dcc00317 	ldw	r19,12(sp)
 802c734:	dc800217 	ldw	r18,8(sp)
 802c738:	dc400117 	ldw	r17,4(sp)
 802c73c:	dc000017 	ldw	r16,0(sp)
 802c740:	dec00504 	addi	sp,sp,20
 802c744:	f800283a 	ret
 802c748:	0101ffc4 	movi	r4,2047
 802c74c:	813fd626 	beq	r16,r4,802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802c750:	29402034 	orhi	r5,r5,128
 802c754:	01000e04 	movi	r4,56
 802c758:	2080a316 	blt	r4,r2,802c9e8 <__subdf3+0x3c4>
 802c75c:	010007c4 	movi	r4,31
 802c760:	2080c616 	blt	r4,r2,802ca7c <__subdf3+0x458>
 802c764:	01000804 	movi	r4,32
 802c768:	2089c83a 	sub	r4,r4,r2
 802c76c:	2910983a 	sll	r8,r5,r4
 802c770:	308ed83a 	srl	r7,r6,r2
 802c774:	3108983a 	sll	r4,r6,r4
 802c778:	2884d83a 	srl	r2,r5,r2
 802c77c:	41ccb03a 	or	r6,r8,r7
 802c780:	2008c03a 	cmpne	r4,r4,zero
 802c784:	310cb03a 	or	r6,r6,r4
 802c788:	898dc83a 	sub	r6,r17,r6
 802c78c:	89a3803a 	cmpltu	r17,r17,r6
 802c790:	1887c83a 	sub	r3,r3,r2
 802c794:	1c47c83a 	sub	r3,r3,r17
 802c798:	3023883a 	mov	r17,r6
 802c79c:	1880202c 	andhi	r2,r3,128
 802c7a0:	10002326 	beq	r2,zero,802c830 <__subdf3+0x20c>
 802c7a4:	04c02034 	movhi	r19,128
 802c7a8:	9cffffc4 	addi	r19,r19,-1
 802c7ac:	1ce6703a 	and	r19,r3,r19
 802c7b0:	98007a26 	beq	r19,zero,802c99c <__subdf3+0x378>
 802c7b4:	9809883a 	mov	r4,r19
 802c7b8:	802d1240 	call	802d124 <__clzsi2>
 802c7bc:	113ffe04 	addi	r4,r2,-8
 802c7c0:	00c007c4 	movi	r3,31
 802c7c4:	19007b16 	blt	r3,r4,802c9b4 <__subdf3+0x390>
 802c7c8:	00800804 	movi	r2,32
 802c7cc:	1105c83a 	sub	r2,r2,r4
 802c7d0:	8884d83a 	srl	r2,r17,r2
 802c7d4:	9906983a 	sll	r3,r19,r4
 802c7d8:	8922983a 	sll	r17,r17,r4
 802c7dc:	10c4b03a 	or	r2,r2,r3
 802c7e0:	24007816 	blt	r4,r16,802c9c4 <__subdf3+0x3a0>
 802c7e4:	2421c83a 	sub	r16,r4,r16
 802c7e8:	80c00044 	addi	r3,r16,1
 802c7ec:	010007c4 	movi	r4,31
 802c7f0:	20c09516 	blt	r4,r3,802ca48 <__subdf3+0x424>
 802c7f4:	01400804 	movi	r5,32
 802c7f8:	28cbc83a 	sub	r5,r5,r3
 802c7fc:	88c8d83a 	srl	r4,r17,r3
 802c800:	8962983a 	sll	r17,r17,r5
 802c804:	114a983a 	sll	r5,r2,r5
 802c808:	10c6d83a 	srl	r3,r2,r3
 802c80c:	8804c03a 	cmpne	r2,r17,zero
 802c810:	290ab03a 	or	r5,r5,r4
 802c814:	28a2b03a 	or	r17,r5,r2
 802c818:	0021883a 	mov	r16,zero
 802c81c:	003fa206 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802c820:	2090b03a 	or	r8,r4,r2
 802c824:	40018e26 	beq	r8,zero,802ce60 <__subdf3+0x83c>
 802c828:	1007883a 	mov	r3,r2
 802c82c:	2023883a 	mov	r17,r4
 802c830:	888001cc 	andi	r2,r17,7
 802c834:	103f9e1e 	bne	r2,zero,802c6b0 <__flash_rwdata_start+0xffffcb94>
 802c838:	1804977a 	slli	r2,r3,29
 802c83c:	8822d0fa 	srli	r17,r17,3
 802c840:	1810d0fa 	srli	r8,r3,3
 802c844:	9100004c 	andi	r4,r18,1
 802c848:	1444b03a 	or	r2,r2,r17
 802c84c:	00c1ffc4 	movi	r3,2047
 802c850:	80c02826 	beq	r16,r3,802c8f4 <__subdf3+0x2d0>
 802c854:	01400434 	movhi	r5,16
 802c858:	297fffc4 	addi	r5,r5,-1
 802c85c:	80e0703a 	and	r16,r16,r3
 802c860:	414a703a 	and	r5,r8,r5
 802c864:	003fa806 	br	802c708 <__flash_rwdata_start+0xffffcbec>
 802c868:	0080630e 	bge	zero,r2,802c9f8 <__subdf3+0x3d4>
 802c86c:	48003026 	beq	r9,zero,802c930 <__subdf3+0x30c>
 802c870:	0101ffc4 	movi	r4,2047
 802c874:	813f8c26 	beq	r16,r4,802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802c878:	29402034 	orhi	r5,r5,128
 802c87c:	01000e04 	movi	r4,56
 802c880:	2080a90e 	bge	r4,r2,802cb28 <__subdf3+0x504>
 802c884:	298cb03a 	or	r6,r5,r6
 802c888:	3012c03a 	cmpne	r9,r6,zero
 802c88c:	0005883a 	mov	r2,zero
 802c890:	4c53883a 	add	r9,r9,r17
 802c894:	4c63803a 	cmpltu	r17,r9,r17
 802c898:	10c7883a 	add	r3,r2,r3
 802c89c:	88c7883a 	add	r3,r17,r3
 802c8a0:	4823883a 	mov	r17,r9
 802c8a4:	1880202c 	andhi	r2,r3,128
 802c8a8:	1000d026 	beq	r2,zero,802cbec <__subdf3+0x5c8>
 802c8ac:	84000044 	addi	r16,r16,1
 802c8b0:	0081ffc4 	movi	r2,2047
 802c8b4:	8080fe26 	beq	r16,r2,802ccb0 <__subdf3+0x68c>
 802c8b8:	00bfe034 	movhi	r2,65408
 802c8bc:	10bfffc4 	addi	r2,r2,-1
 802c8c0:	1886703a 	and	r3,r3,r2
 802c8c4:	880ad07a 	srli	r5,r17,1
 802c8c8:	180497fa 	slli	r2,r3,31
 802c8cc:	8900004c 	andi	r4,r17,1
 802c8d0:	2922b03a 	or	r17,r5,r4
 802c8d4:	1806d07a 	srli	r3,r3,1
 802c8d8:	1462b03a 	or	r17,r2,r17
 802c8dc:	3825883a 	mov	r18,r7
 802c8e0:	003f7106 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802c8e4:	2984b03a 	or	r2,r5,r6
 802c8e8:	103f6826 	beq	r2,zero,802c68c <__flash_rwdata_start+0xffffcb70>
 802c8ec:	39c03fcc 	andi	r7,r7,255
 802c8f0:	003f6706 	br	802c690 <__flash_rwdata_start+0xffffcb74>
 802c8f4:	4086b03a 	or	r3,r8,r2
 802c8f8:	18015226 	beq	r3,zero,802ce44 <__subdf3+0x820>
 802c8fc:	00c00434 	movhi	r3,16
 802c900:	41400234 	orhi	r5,r8,8
 802c904:	18ffffc4 	addi	r3,r3,-1
 802c908:	28ca703a 	and	r5,r5,r3
 802c90c:	003f7e06 	br	802c708 <__flash_rwdata_start+0xffffcbec>
 802c910:	10bfffc4 	addi	r2,r2,-1
 802c914:	1000491e 	bne	r2,zero,802ca3c <__subdf3+0x418>
 802c918:	898fc83a 	sub	r7,r17,r6
 802c91c:	89e3803a 	cmpltu	r17,r17,r7
 802c920:	1947c83a 	sub	r3,r3,r5
 802c924:	1c47c83a 	sub	r3,r3,r17
 802c928:	3823883a 	mov	r17,r7
 802c92c:	003f9b06 	br	802c79c <__flash_rwdata_start+0xffffcc80>
 802c930:	2988b03a 	or	r4,r5,r6
 802c934:	203f5c26 	beq	r4,zero,802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802c938:	10bfffc4 	addi	r2,r2,-1
 802c93c:	1000931e 	bne	r2,zero,802cb8c <__subdf3+0x568>
 802c940:	898d883a 	add	r6,r17,r6
 802c944:	3463803a 	cmpltu	r17,r6,r17
 802c948:	1947883a 	add	r3,r3,r5
 802c94c:	88c7883a 	add	r3,r17,r3
 802c950:	3023883a 	mov	r17,r6
 802c954:	003fd306 	br	802c8a4 <__flash_rwdata_start+0xffffcd88>
 802c958:	1000541e 	bne	r2,zero,802caac <__subdf3+0x488>
 802c95c:	80800044 	addi	r2,r16,1
 802c960:	1081ffcc 	andi	r2,r2,2047
 802c964:	01000044 	movi	r4,1
 802c968:	2080a20e 	bge	r4,r2,802cbf4 <__subdf3+0x5d0>
 802c96c:	8989c83a 	sub	r4,r17,r6
 802c970:	8905803a 	cmpltu	r2,r17,r4
 802c974:	1967c83a 	sub	r19,r3,r5
 802c978:	98a7c83a 	sub	r19,r19,r2
 802c97c:	9880202c 	andhi	r2,r19,128
 802c980:	10006326 	beq	r2,zero,802cb10 <__subdf3+0x4ec>
 802c984:	3463c83a 	sub	r17,r6,r17
 802c988:	28c7c83a 	sub	r3,r5,r3
 802c98c:	344d803a 	cmpltu	r6,r6,r17
 802c990:	19a7c83a 	sub	r19,r3,r6
 802c994:	3825883a 	mov	r18,r7
 802c998:	983f861e 	bne	r19,zero,802c7b4 <__flash_rwdata_start+0xffffcc98>
 802c99c:	8809883a 	mov	r4,r17
 802c9a0:	802d1240 	call	802d124 <__clzsi2>
 802c9a4:	10800804 	addi	r2,r2,32
 802c9a8:	113ffe04 	addi	r4,r2,-8
 802c9ac:	00c007c4 	movi	r3,31
 802c9b0:	193f850e 	bge	r3,r4,802c7c8 <__flash_rwdata_start+0xffffccac>
 802c9b4:	10bff604 	addi	r2,r2,-40
 802c9b8:	8884983a 	sll	r2,r17,r2
 802c9bc:	0023883a 	mov	r17,zero
 802c9c0:	243f880e 	bge	r4,r16,802c7e4 <__flash_rwdata_start+0xffffccc8>
 802c9c4:	00ffe034 	movhi	r3,65408
 802c9c8:	18ffffc4 	addi	r3,r3,-1
 802c9cc:	8121c83a 	sub	r16,r16,r4
 802c9d0:	10c6703a 	and	r3,r2,r3
 802c9d4:	003f3406 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802c9d8:	9100004c 	andi	r4,r18,1
 802c9dc:	000b883a 	mov	r5,zero
 802c9e0:	0005883a 	mov	r2,zero
 802c9e4:	003f4806 	br	802c708 <__flash_rwdata_start+0xffffcbec>
 802c9e8:	298cb03a 	or	r6,r5,r6
 802c9ec:	300cc03a 	cmpne	r6,r6,zero
 802c9f0:	0005883a 	mov	r2,zero
 802c9f4:	003f6406 	br	802c788 <__flash_rwdata_start+0xffffcc6c>
 802c9f8:	10009a1e 	bne	r2,zero,802cc64 <__subdf3+0x640>
 802c9fc:	82400044 	addi	r9,r16,1
 802ca00:	4881ffcc 	andi	r2,r9,2047
 802ca04:	02800044 	movi	r10,1
 802ca08:	5080670e 	bge	r10,r2,802cba8 <__subdf3+0x584>
 802ca0c:	0081ffc4 	movi	r2,2047
 802ca10:	4880af26 	beq	r9,r2,802ccd0 <__subdf3+0x6ac>
 802ca14:	898d883a 	add	r6,r17,r6
 802ca18:	1945883a 	add	r2,r3,r5
 802ca1c:	3447803a 	cmpltu	r3,r6,r17
 802ca20:	1887883a 	add	r3,r3,r2
 802ca24:	182297fa 	slli	r17,r3,31
 802ca28:	300cd07a 	srli	r6,r6,1
 802ca2c:	1806d07a 	srli	r3,r3,1
 802ca30:	4821883a 	mov	r16,r9
 802ca34:	89a2b03a 	or	r17,r17,r6
 802ca38:	003f1b06 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802ca3c:	0101ffc4 	movi	r4,2047
 802ca40:	813f441e 	bne	r16,r4,802c754 <__flash_rwdata_start+0xffffcc38>
 802ca44:	003f1806 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802ca48:	843ff844 	addi	r16,r16,-31
 802ca4c:	01400804 	movi	r5,32
 802ca50:	1408d83a 	srl	r4,r2,r16
 802ca54:	19405026 	beq	r3,r5,802cb98 <__subdf3+0x574>
 802ca58:	01401004 	movi	r5,64
 802ca5c:	28c7c83a 	sub	r3,r5,r3
 802ca60:	10c4983a 	sll	r2,r2,r3
 802ca64:	88a2b03a 	or	r17,r17,r2
 802ca68:	8822c03a 	cmpne	r17,r17,zero
 802ca6c:	2462b03a 	or	r17,r4,r17
 802ca70:	0007883a 	mov	r3,zero
 802ca74:	0021883a 	mov	r16,zero
 802ca78:	003f6d06 	br	802c830 <__flash_rwdata_start+0xffffcd14>
 802ca7c:	11fff804 	addi	r7,r2,-32
 802ca80:	01000804 	movi	r4,32
 802ca84:	29ced83a 	srl	r7,r5,r7
 802ca88:	11004526 	beq	r2,r4,802cba0 <__subdf3+0x57c>
 802ca8c:	01001004 	movi	r4,64
 802ca90:	2089c83a 	sub	r4,r4,r2
 802ca94:	2904983a 	sll	r2,r5,r4
 802ca98:	118cb03a 	or	r6,r2,r6
 802ca9c:	300cc03a 	cmpne	r6,r6,zero
 802caa0:	398cb03a 	or	r6,r7,r6
 802caa4:	0005883a 	mov	r2,zero
 802caa8:	003f3706 	br	802c788 <__flash_rwdata_start+0xffffcc6c>
 802caac:	80002a26 	beq	r16,zero,802cb58 <__subdf3+0x534>
 802cab0:	0101ffc4 	movi	r4,2047
 802cab4:	49006626 	beq	r9,r4,802cc50 <__subdf3+0x62c>
 802cab8:	0085c83a 	sub	r2,zero,r2
 802cabc:	18c02034 	orhi	r3,r3,128
 802cac0:	01000e04 	movi	r4,56
 802cac4:	20807e16 	blt	r4,r2,802ccc0 <__subdf3+0x69c>
 802cac8:	010007c4 	movi	r4,31
 802cacc:	2080e716 	blt	r4,r2,802ce6c <__subdf3+0x848>
 802cad0:	01000804 	movi	r4,32
 802cad4:	2089c83a 	sub	r4,r4,r2
 802cad8:	1914983a 	sll	r10,r3,r4
 802cadc:	8890d83a 	srl	r8,r17,r2
 802cae0:	8908983a 	sll	r4,r17,r4
 802cae4:	1884d83a 	srl	r2,r3,r2
 802cae8:	5222b03a 	or	r17,r10,r8
 802caec:	2006c03a 	cmpne	r3,r4,zero
 802caf0:	88e2b03a 	or	r17,r17,r3
 802caf4:	3463c83a 	sub	r17,r6,r17
 802caf8:	2885c83a 	sub	r2,r5,r2
 802cafc:	344d803a 	cmpltu	r6,r6,r17
 802cb00:	1187c83a 	sub	r3,r2,r6
 802cb04:	4821883a 	mov	r16,r9
 802cb08:	3825883a 	mov	r18,r7
 802cb0c:	003f2306 	br	802c79c <__flash_rwdata_start+0xffffcc80>
 802cb10:	24d0b03a 	or	r8,r4,r19
 802cb14:	40001b1e 	bne	r8,zero,802cb84 <__subdf3+0x560>
 802cb18:	0005883a 	mov	r2,zero
 802cb1c:	0009883a 	mov	r4,zero
 802cb20:	0021883a 	mov	r16,zero
 802cb24:	003f4906 	br	802c84c <__flash_rwdata_start+0xffffcd30>
 802cb28:	010007c4 	movi	r4,31
 802cb2c:	20803a16 	blt	r4,r2,802cc18 <__subdf3+0x5f4>
 802cb30:	01000804 	movi	r4,32
 802cb34:	2089c83a 	sub	r4,r4,r2
 802cb38:	2912983a 	sll	r9,r5,r4
 802cb3c:	3090d83a 	srl	r8,r6,r2
 802cb40:	3108983a 	sll	r4,r6,r4
 802cb44:	2884d83a 	srl	r2,r5,r2
 802cb48:	4a12b03a 	or	r9,r9,r8
 802cb4c:	2008c03a 	cmpne	r4,r4,zero
 802cb50:	4912b03a 	or	r9,r9,r4
 802cb54:	003f4e06 	br	802c890 <__flash_rwdata_start+0xffffcd74>
 802cb58:	1c48b03a 	or	r4,r3,r17
 802cb5c:	20003c26 	beq	r4,zero,802cc50 <__subdf3+0x62c>
 802cb60:	0084303a 	nor	r2,zero,r2
 802cb64:	1000381e 	bne	r2,zero,802cc48 <__subdf3+0x624>
 802cb68:	3463c83a 	sub	r17,r6,r17
 802cb6c:	28c5c83a 	sub	r2,r5,r3
 802cb70:	344d803a 	cmpltu	r6,r6,r17
 802cb74:	1187c83a 	sub	r3,r2,r6
 802cb78:	4821883a 	mov	r16,r9
 802cb7c:	3825883a 	mov	r18,r7
 802cb80:	003f0606 	br	802c79c <__flash_rwdata_start+0xffffcc80>
 802cb84:	2023883a 	mov	r17,r4
 802cb88:	003f0906 	br	802c7b0 <__flash_rwdata_start+0xffffcc94>
 802cb8c:	0101ffc4 	movi	r4,2047
 802cb90:	813f3a1e 	bne	r16,r4,802c87c <__flash_rwdata_start+0xffffcd60>
 802cb94:	003ec406 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cb98:	0005883a 	mov	r2,zero
 802cb9c:	003fb106 	br	802ca64 <__flash_rwdata_start+0xffffcf48>
 802cba0:	0005883a 	mov	r2,zero
 802cba4:	003fbc06 	br	802ca98 <__flash_rwdata_start+0xffffcf7c>
 802cba8:	1c44b03a 	or	r2,r3,r17
 802cbac:	80008e1e 	bne	r16,zero,802cde8 <__subdf3+0x7c4>
 802cbb0:	1000c826 	beq	r2,zero,802ced4 <__subdf3+0x8b0>
 802cbb4:	2984b03a 	or	r2,r5,r6
 802cbb8:	103ebb26 	beq	r2,zero,802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cbbc:	8989883a 	add	r4,r17,r6
 802cbc0:	1945883a 	add	r2,r3,r5
 802cbc4:	2447803a 	cmpltu	r3,r4,r17
 802cbc8:	1887883a 	add	r3,r3,r2
 802cbcc:	1880202c 	andhi	r2,r3,128
 802cbd0:	2023883a 	mov	r17,r4
 802cbd4:	103f1626 	beq	r2,zero,802c830 <__flash_rwdata_start+0xffffcd14>
 802cbd8:	00bfe034 	movhi	r2,65408
 802cbdc:	10bfffc4 	addi	r2,r2,-1
 802cbe0:	5021883a 	mov	r16,r10
 802cbe4:	1886703a 	and	r3,r3,r2
 802cbe8:	003eaf06 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cbec:	3825883a 	mov	r18,r7
 802cbf0:	003f0f06 	br	802c830 <__flash_rwdata_start+0xffffcd14>
 802cbf4:	1c44b03a 	or	r2,r3,r17
 802cbf8:	8000251e 	bne	r16,zero,802cc90 <__subdf3+0x66c>
 802cbfc:	1000661e 	bne	r2,zero,802cd98 <__subdf3+0x774>
 802cc00:	2990b03a 	or	r8,r5,r6
 802cc04:	40009626 	beq	r8,zero,802ce60 <__subdf3+0x83c>
 802cc08:	2807883a 	mov	r3,r5
 802cc0c:	3023883a 	mov	r17,r6
 802cc10:	3825883a 	mov	r18,r7
 802cc14:	003ea406 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cc18:	127ff804 	addi	r9,r2,-32
 802cc1c:	01000804 	movi	r4,32
 802cc20:	2a52d83a 	srl	r9,r5,r9
 802cc24:	11008c26 	beq	r2,r4,802ce58 <__subdf3+0x834>
 802cc28:	01001004 	movi	r4,64
 802cc2c:	2085c83a 	sub	r2,r4,r2
 802cc30:	2884983a 	sll	r2,r5,r2
 802cc34:	118cb03a 	or	r6,r2,r6
 802cc38:	300cc03a 	cmpne	r6,r6,zero
 802cc3c:	4992b03a 	or	r9,r9,r6
 802cc40:	0005883a 	mov	r2,zero
 802cc44:	003f1206 	br	802c890 <__flash_rwdata_start+0xffffcd74>
 802cc48:	0101ffc4 	movi	r4,2047
 802cc4c:	493f9c1e 	bne	r9,r4,802cac0 <__flash_rwdata_start+0xffffcfa4>
 802cc50:	2807883a 	mov	r3,r5
 802cc54:	3023883a 	mov	r17,r6
 802cc58:	4821883a 	mov	r16,r9
 802cc5c:	3825883a 	mov	r18,r7
 802cc60:	003e9106 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cc64:	80001f1e 	bne	r16,zero,802cce4 <__subdf3+0x6c0>
 802cc68:	1c48b03a 	or	r4,r3,r17
 802cc6c:	20005a26 	beq	r4,zero,802cdd8 <__subdf3+0x7b4>
 802cc70:	0084303a 	nor	r2,zero,r2
 802cc74:	1000561e 	bne	r2,zero,802cdd0 <__subdf3+0x7ac>
 802cc78:	89a3883a 	add	r17,r17,r6
 802cc7c:	1945883a 	add	r2,r3,r5
 802cc80:	898d803a 	cmpltu	r6,r17,r6
 802cc84:	3087883a 	add	r3,r6,r2
 802cc88:	4821883a 	mov	r16,r9
 802cc8c:	003f0506 	br	802c8a4 <__flash_rwdata_start+0xffffcd88>
 802cc90:	10002b1e 	bne	r2,zero,802cd40 <__subdf3+0x71c>
 802cc94:	2984b03a 	or	r2,r5,r6
 802cc98:	10008026 	beq	r2,zero,802ce9c <__subdf3+0x878>
 802cc9c:	2807883a 	mov	r3,r5
 802cca0:	3023883a 	mov	r17,r6
 802cca4:	3825883a 	mov	r18,r7
 802cca8:	0401ffc4 	movi	r16,2047
 802ccac:	003e7e06 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802ccb0:	3809883a 	mov	r4,r7
 802ccb4:	0011883a 	mov	r8,zero
 802ccb8:	0005883a 	mov	r2,zero
 802ccbc:	003ee306 	br	802c84c <__flash_rwdata_start+0xffffcd30>
 802ccc0:	1c62b03a 	or	r17,r3,r17
 802ccc4:	8822c03a 	cmpne	r17,r17,zero
 802ccc8:	0005883a 	mov	r2,zero
 802cccc:	003f8906 	br	802caf4 <__flash_rwdata_start+0xffffcfd8>
 802ccd0:	3809883a 	mov	r4,r7
 802ccd4:	4821883a 	mov	r16,r9
 802ccd8:	0011883a 	mov	r8,zero
 802ccdc:	0005883a 	mov	r2,zero
 802cce0:	003eda06 	br	802c84c <__flash_rwdata_start+0xffffcd30>
 802cce4:	0101ffc4 	movi	r4,2047
 802cce8:	49003b26 	beq	r9,r4,802cdd8 <__subdf3+0x7b4>
 802ccec:	0085c83a 	sub	r2,zero,r2
 802ccf0:	18c02034 	orhi	r3,r3,128
 802ccf4:	01000e04 	movi	r4,56
 802ccf8:	20806e16 	blt	r4,r2,802ceb4 <__subdf3+0x890>
 802ccfc:	010007c4 	movi	r4,31
 802cd00:	20807716 	blt	r4,r2,802cee0 <__subdf3+0x8bc>
 802cd04:	01000804 	movi	r4,32
 802cd08:	2089c83a 	sub	r4,r4,r2
 802cd0c:	1914983a 	sll	r10,r3,r4
 802cd10:	8890d83a 	srl	r8,r17,r2
 802cd14:	8908983a 	sll	r4,r17,r4
 802cd18:	1884d83a 	srl	r2,r3,r2
 802cd1c:	5222b03a 	or	r17,r10,r8
 802cd20:	2006c03a 	cmpne	r3,r4,zero
 802cd24:	88e2b03a 	or	r17,r17,r3
 802cd28:	89a3883a 	add	r17,r17,r6
 802cd2c:	1145883a 	add	r2,r2,r5
 802cd30:	898d803a 	cmpltu	r6,r17,r6
 802cd34:	3087883a 	add	r3,r6,r2
 802cd38:	4821883a 	mov	r16,r9
 802cd3c:	003ed906 	br	802c8a4 <__flash_rwdata_start+0xffffcd88>
 802cd40:	2984b03a 	or	r2,r5,r6
 802cd44:	10004226 	beq	r2,zero,802ce50 <__subdf3+0x82c>
 802cd48:	1808d0fa 	srli	r4,r3,3
 802cd4c:	8822d0fa 	srli	r17,r17,3
 802cd50:	1806977a 	slli	r3,r3,29
 802cd54:	2080022c 	andhi	r2,r4,8
 802cd58:	1c62b03a 	or	r17,r3,r17
 802cd5c:	10000826 	beq	r2,zero,802cd80 <__subdf3+0x75c>
 802cd60:	2812d0fa 	srli	r9,r5,3
 802cd64:	4880022c 	andhi	r2,r9,8
 802cd68:	1000051e 	bne	r2,zero,802cd80 <__subdf3+0x75c>
 802cd6c:	300cd0fa 	srli	r6,r6,3
 802cd70:	2804977a 	slli	r2,r5,29
 802cd74:	4809883a 	mov	r4,r9
 802cd78:	3825883a 	mov	r18,r7
 802cd7c:	11a2b03a 	or	r17,r2,r6
 802cd80:	8806d77a 	srli	r3,r17,29
 802cd84:	200890fa 	slli	r4,r4,3
 802cd88:	882290fa 	slli	r17,r17,3
 802cd8c:	0401ffc4 	movi	r16,2047
 802cd90:	1906b03a 	or	r3,r3,r4
 802cd94:	003e4406 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cd98:	2984b03a 	or	r2,r5,r6
 802cd9c:	103e4226 	beq	r2,zero,802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cda0:	8989c83a 	sub	r4,r17,r6
 802cda4:	8911803a 	cmpltu	r8,r17,r4
 802cda8:	1945c83a 	sub	r2,r3,r5
 802cdac:	1205c83a 	sub	r2,r2,r8
 802cdb0:	1200202c 	andhi	r8,r2,128
 802cdb4:	403e9a26 	beq	r8,zero,802c820 <__flash_rwdata_start+0xffffcd04>
 802cdb8:	3463c83a 	sub	r17,r6,r17
 802cdbc:	28c5c83a 	sub	r2,r5,r3
 802cdc0:	344d803a 	cmpltu	r6,r6,r17
 802cdc4:	1187c83a 	sub	r3,r2,r6
 802cdc8:	3825883a 	mov	r18,r7
 802cdcc:	003e3606 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cdd0:	0101ffc4 	movi	r4,2047
 802cdd4:	493fc71e 	bne	r9,r4,802ccf4 <__flash_rwdata_start+0xffffd1d8>
 802cdd8:	2807883a 	mov	r3,r5
 802cddc:	3023883a 	mov	r17,r6
 802cde0:	4821883a 	mov	r16,r9
 802cde4:	003e3006 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cde8:	10003626 	beq	r2,zero,802cec4 <__subdf3+0x8a0>
 802cdec:	2984b03a 	or	r2,r5,r6
 802cdf0:	10001726 	beq	r2,zero,802ce50 <__subdf3+0x82c>
 802cdf4:	1808d0fa 	srli	r4,r3,3
 802cdf8:	8822d0fa 	srli	r17,r17,3
 802cdfc:	1806977a 	slli	r3,r3,29
 802ce00:	2080022c 	andhi	r2,r4,8
 802ce04:	1c62b03a 	or	r17,r3,r17
 802ce08:	10000726 	beq	r2,zero,802ce28 <__subdf3+0x804>
 802ce0c:	2812d0fa 	srli	r9,r5,3
 802ce10:	4880022c 	andhi	r2,r9,8
 802ce14:	1000041e 	bne	r2,zero,802ce28 <__subdf3+0x804>
 802ce18:	300cd0fa 	srli	r6,r6,3
 802ce1c:	2804977a 	slli	r2,r5,29
 802ce20:	4809883a 	mov	r4,r9
 802ce24:	11a2b03a 	or	r17,r2,r6
 802ce28:	8806d77a 	srli	r3,r17,29
 802ce2c:	200890fa 	slli	r4,r4,3
 802ce30:	882290fa 	slli	r17,r17,3
 802ce34:	3825883a 	mov	r18,r7
 802ce38:	1906b03a 	or	r3,r3,r4
 802ce3c:	0401ffc4 	movi	r16,2047
 802ce40:	003e1906 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802ce44:	000b883a 	mov	r5,zero
 802ce48:	0005883a 	mov	r2,zero
 802ce4c:	003e2e06 	br	802c708 <__flash_rwdata_start+0xffffcbec>
 802ce50:	0401ffc4 	movi	r16,2047
 802ce54:	003e1406 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802ce58:	0005883a 	mov	r2,zero
 802ce5c:	003f7506 	br	802cc34 <__flash_rwdata_start+0xffffd118>
 802ce60:	0005883a 	mov	r2,zero
 802ce64:	0009883a 	mov	r4,zero
 802ce68:	003e7806 	br	802c84c <__flash_rwdata_start+0xffffcd30>
 802ce6c:	123ff804 	addi	r8,r2,-32
 802ce70:	01000804 	movi	r4,32
 802ce74:	1a10d83a 	srl	r8,r3,r8
 802ce78:	11002526 	beq	r2,r4,802cf10 <__subdf3+0x8ec>
 802ce7c:	01001004 	movi	r4,64
 802ce80:	2085c83a 	sub	r2,r4,r2
 802ce84:	1884983a 	sll	r2,r3,r2
 802ce88:	1444b03a 	or	r2,r2,r17
 802ce8c:	1004c03a 	cmpne	r2,r2,zero
 802ce90:	40a2b03a 	or	r17,r8,r2
 802ce94:	0005883a 	mov	r2,zero
 802ce98:	003f1606 	br	802caf4 <__flash_rwdata_start+0xffffcfd8>
 802ce9c:	02000434 	movhi	r8,16
 802cea0:	0009883a 	mov	r4,zero
 802cea4:	423fffc4 	addi	r8,r8,-1
 802cea8:	00bfffc4 	movi	r2,-1
 802ceac:	0401ffc4 	movi	r16,2047
 802ceb0:	003e6606 	br	802c84c <__flash_rwdata_start+0xffffcd30>
 802ceb4:	1c62b03a 	or	r17,r3,r17
 802ceb8:	8822c03a 	cmpne	r17,r17,zero
 802cebc:	0005883a 	mov	r2,zero
 802cec0:	003f9906 	br	802cd28 <__flash_rwdata_start+0xffffd20c>
 802cec4:	2807883a 	mov	r3,r5
 802cec8:	3023883a 	mov	r17,r6
 802cecc:	0401ffc4 	movi	r16,2047
 802ced0:	003df506 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802ced4:	2807883a 	mov	r3,r5
 802ced8:	3023883a 	mov	r17,r6
 802cedc:	003df206 	br	802c6a8 <__flash_rwdata_start+0xffffcb8c>
 802cee0:	123ff804 	addi	r8,r2,-32
 802cee4:	01000804 	movi	r4,32
 802cee8:	1a10d83a 	srl	r8,r3,r8
 802ceec:	11000a26 	beq	r2,r4,802cf18 <__subdf3+0x8f4>
 802cef0:	01001004 	movi	r4,64
 802cef4:	2085c83a 	sub	r2,r4,r2
 802cef8:	1884983a 	sll	r2,r3,r2
 802cefc:	1444b03a 	or	r2,r2,r17
 802cf00:	1004c03a 	cmpne	r2,r2,zero
 802cf04:	40a2b03a 	or	r17,r8,r2
 802cf08:	0005883a 	mov	r2,zero
 802cf0c:	003f8606 	br	802cd28 <__flash_rwdata_start+0xffffd20c>
 802cf10:	0005883a 	mov	r2,zero
 802cf14:	003fdc06 	br	802ce88 <__flash_rwdata_start+0xffffd36c>
 802cf18:	0005883a 	mov	r2,zero
 802cf1c:	003ff706 	br	802cefc <__flash_rwdata_start+0xffffd3e0>

0802cf20 <__fixdfsi>:
 802cf20:	280cd53a 	srli	r6,r5,20
 802cf24:	00c00434 	movhi	r3,16
 802cf28:	18ffffc4 	addi	r3,r3,-1
 802cf2c:	3181ffcc 	andi	r6,r6,2047
 802cf30:	01c0ff84 	movi	r7,1022
 802cf34:	28c6703a 	and	r3,r5,r3
 802cf38:	280ad7fa 	srli	r5,r5,31
 802cf3c:	3980120e 	bge	r7,r6,802cf88 <__fixdfsi+0x68>
 802cf40:	00810744 	movi	r2,1053
 802cf44:	11800c16 	blt	r2,r6,802cf78 <__fixdfsi+0x58>
 802cf48:	00810cc4 	movi	r2,1075
 802cf4c:	1185c83a 	sub	r2,r2,r6
 802cf50:	01c007c4 	movi	r7,31
 802cf54:	18c00434 	orhi	r3,r3,16
 802cf58:	38800d16 	blt	r7,r2,802cf90 <__fixdfsi+0x70>
 802cf5c:	31befb44 	addi	r6,r6,-1043
 802cf60:	2084d83a 	srl	r2,r4,r2
 802cf64:	1986983a 	sll	r3,r3,r6
 802cf68:	1884b03a 	or	r2,r3,r2
 802cf6c:	28000726 	beq	r5,zero,802cf8c <__fixdfsi+0x6c>
 802cf70:	0085c83a 	sub	r2,zero,r2
 802cf74:	f800283a 	ret
 802cf78:	00a00034 	movhi	r2,32768
 802cf7c:	10bfffc4 	addi	r2,r2,-1
 802cf80:	2885883a 	add	r2,r5,r2
 802cf84:	f800283a 	ret
 802cf88:	0005883a 	mov	r2,zero
 802cf8c:	f800283a 	ret
 802cf90:	008104c4 	movi	r2,1043
 802cf94:	1185c83a 	sub	r2,r2,r6
 802cf98:	1884d83a 	srl	r2,r3,r2
 802cf9c:	003ff306 	br	802cf6c <__flash_rwdata_start+0xffffd450>

0802cfa0 <__floatsidf>:
 802cfa0:	defffd04 	addi	sp,sp,-12
 802cfa4:	dfc00215 	stw	ra,8(sp)
 802cfa8:	dc400115 	stw	r17,4(sp)
 802cfac:	dc000015 	stw	r16,0(sp)
 802cfb0:	20002b26 	beq	r4,zero,802d060 <__floatsidf+0xc0>
 802cfb4:	2023883a 	mov	r17,r4
 802cfb8:	2020d7fa 	srli	r16,r4,31
 802cfbc:	20002d16 	blt	r4,zero,802d074 <__floatsidf+0xd4>
 802cfc0:	8809883a 	mov	r4,r17
 802cfc4:	802d1240 	call	802d124 <__clzsi2>
 802cfc8:	01410784 	movi	r5,1054
 802cfcc:	288bc83a 	sub	r5,r5,r2
 802cfd0:	01010cc4 	movi	r4,1075
 802cfd4:	2149c83a 	sub	r4,r4,r5
 802cfd8:	00c007c4 	movi	r3,31
 802cfdc:	1900160e 	bge	r3,r4,802d038 <__floatsidf+0x98>
 802cfe0:	00c104c4 	movi	r3,1043
 802cfe4:	1947c83a 	sub	r3,r3,r5
 802cfe8:	88c6983a 	sll	r3,r17,r3
 802cfec:	00800434 	movhi	r2,16
 802cff0:	10bfffc4 	addi	r2,r2,-1
 802cff4:	1886703a 	and	r3,r3,r2
 802cff8:	2941ffcc 	andi	r5,r5,2047
 802cffc:	800d883a 	mov	r6,r16
 802d000:	0005883a 	mov	r2,zero
 802d004:	280a953a 	slli	r5,r5,20
 802d008:	31803fcc 	andi	r6,r6,255
 802d00c:	01000434 	movhi	r4,16
 802d010:	300c97fa 	slli	r6,r6,31
 802d014:	213fffc4 	addi	r4,r4,-1
 802d018:	1906703a 	and	r3,r3,r4
 802d01c:	1946b03a 	or	r3,r3,r5
 802d020:	1986b03a 	or	r3,r3,r6
 802d024:	dfc00217 	ldw	ra,8(sp)
 802d028:	dc400117 	ldw	r17,4(sp)
 802d02c:	dc000017 	ldw	r16,0(sp)
 802d030:	dec00304 	addi	sp,sp,12
 802d034:	f800283a 	ret
 802d038:	00c002c4 	movi	r3,11
 802d03c:	1887c83a 	sub	r3,r3,r2
 802d040:	88c6d83a 	srl	r3,r17,r3
 802d044:	8904983a 	sll	r2,r17,r4
 802d048:	01000434 	movhi	r4,16
 802d04c:	213fffc4 	addi	r4,r4,-1
 802d050:	2941ffcc 	andi	r5,r5,2047
 802d054:	1906703a 	and	r3,r3,r4
 802d058:	800d883a 	mov	r6,r16
 802d05c:	003fe906 	br	802d004 <__flash_rwdata_start+0xffffd4e8>
 802d060:	000d883a 	mov	r6,zero
 802d064:	000b883a 	mov	r5,zero
 802d068:	0007883a 	mov	r3,zero
 802d06c:	0005883a 	mov	r2,zero
 802d070:	003fe406 	br	802d004 <__flash_rwdata_start+0xffffd4e8>
 802d074:	0123c83a 	sub	r17,zero,r4
 802d078:	003fd106 	br	802cfc0 <__flash_rwdata_start+0xffffd4a4>

0802d07c <__floatunsidf>:
 802d07c:	defffe04 	addi	sp,sp,-8
 802d080:	dc000015 	stw	r16,0(sp)
 802d084:	dfc00115 	stw	ra,4(sp)
 802d088:	2021883a 	mov	r16,r4
 802d08c:	20002226 	beq	r4,zero,802d118 <__floatunsidf+0x9c>
 802d090:	802d1240 	call	802d124 <__clzsi2>
 802d094:	01010784 	movi	r4,1054
 802d098:	2089c83a 	sub	r4,r4,r2
 802d09c:	01810cc4 	movi	r6,1075
 802d0a0:	310dc83a 	sub	r6,r6,r4
 802d0a4:	00c007c4 	movi	r3,31
 802d0a8:	1980120e 	bge	r3,r6,802d0f4 <__floatunsidf+0x78>
 802d0ac:	00c104c4 	movi	r3,1043
 802d0b0:	1907c83a 	sub	r3,r3,r4
 802d0b4:	80ca983a 	sll	r5,r16,r3
 802d0b8:	00800434 	movhi	r2,16
 802d0bc:	10bfffc4 	addi	r2,r2,-1
 802d0c0:	2101ffcc 	andi	r4,r4,2047
 802d0c4:	0021883a 	mov	r16,zero
 802d0c8:	288a703a 	and	r5,r5,r2
 802d0cc:	2008953a 	slli	r4,r4,20
 802d0d0:	00c00434 	movhi	r3,16
 802d0d4:	18ffffc4 	addi	r3,r3,-1
 802d0d8:	28c6703a 	and	r3,r5,r3
 802d0dc:	8005883a 	mov	r2,r16
 802d0e0:	1906b03a 	or	r3,r3,r4
 802d0e4:	dfc00117 	ldw	ra,4(sp)
 802d0e8:	dc000017 	ldw	r16,0(sp)
 802d0ec:	dec00204 	addi	sp,sp,8
 802d0f0:	f800283a 	ret
 802d0f4:	00c002c4 	movi	r3,11
 802d0f8:	188bc83a 	sub	r5,r3,r2
 802d0fc:	814ad83a 	srl	r5,r16,r5
 802d100:	00c00434 	movhi	r3,16
 802d104:	18ffffc4 	addi	r3,r3,-1
 802d108:	81a0983a 	sll	r16,r16,r6
 802d10c:	2101ffcc 	andi	r4,r4,2047
 802d110:	28ca703a 	and	r5,r5,r3
 802d114:	003fed06 	br	802d0cc <__flash_rwdata_start+0xffffd5b0>
 802d118:	0009883a 	mov	r4,zero
 802d11c:	000b883a 	mov	r5,zero
 802d120:	003fea06 	br	802d0cc <__flash_rwdata_start+0xffffd5b0>

0802d124 <__clzsi2>:
 802d124:	00bfffd4 	movui	r2,65535
 802d128:	11000536 	bltu	r2,r4,802d140 <__clzsi2+0x1c>
 802d12c:	00803fc4 	movi	r2,255
 802d130:	11000f36 	bltu	r2,r4,802d170 <__clzsi2+0x4c>
 802d134:	00800804 	movi	r2,32
 802d138:	0007883a 	mov	r3,zero
 802d13c:	00000506 	br	802d154 <__clzsi2+0x30>
 802d140:	00804034 	movhi	r2,256
 802d144:	10bfffc4 	addi	r2,r2,-1
 802d148:	11000c2e 	bgeu	r2,r4,802d17c <__clzsi2+0x58>
 802d14c:	00800204 	movi	r2,8
 802d150:	00c00604 	movi	r3,24
 802d154:	20c8d83a 	srl	r4,r4,r3
 802d158:	00c00034 	movhi	r3,0
 802d15c:	18c07504 	addi	r3,r3,468
 802d160:	1909883a 	add	r4,r3,r4
 802d164:	20c00003 	ldbu	r3,0(r4)
 802d168:	10c5c83a 	sub	r2,r2,r3
 802d16c:	f800283a 	ret
 802d170:	00800604 	movi	r2,24
 802d174:	00c00204 	movi	r3,8
 802d178:	003ff606 	br	802d154 <__flash_rwdata_start+0xffffd638>
 802d17c:	00800404 	movi	r2,16
 802d180:	1007883a 	mov	r3,r2
 802d184:	003ff306 	br	802d154 <__flash_rwdata_start+0xffffd638>

0802d188 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802d188:	defffe04 	addi	sp,sp,-8
 802d18c:	dfc00115 	stw	ra,4(sp)
 802d190:	df000015 	stw	fp,0(sp)
 802d194:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802d198:	d0a00b17 	ldw	r2,-32724(gp)
 802d19c:	10000326 	beq	r2,zero,802d1ac <alt_get_errno+0x24>
 802d1a0:	d0a00b17 	ldw	r2,-32724(gp)
 802d1a4:	103ee83a 	callr	r2
 802d1a8:	00000106 	br	802d1b0 <alt_get_errno+0x28>
 802d1ac:	d0a01604 	addi	r2,gp,-32680
}
 802d1b0:	e037883a 	mov	sp,fp
 802d1b4:	dfc00117 	ldw	ra,4(sp)
 802d1b8:	df000017 	ldw	fp,0(sp)
 802d1bc:	dec00204 	addi	sp,sp,8
 802d1c0:	f800283a 	ret

0802d1c4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
 802d1c4:	defffb04 	addi	sp,sp,-20
 802d1c8:	dfc00415 	stw	ra,16(sp)
 802d1cc:	df000315 	stw	fp,12(sp)
 802d1d0:	df000304 	addi	fp,sp,12
 802d1d4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
 802d1d8:	e0bfff17 	ldw	r2,-4(fp)
 802d1dc:	10000816 	blt	r2,zero,802d200 <close+0x3c>
 802d1e0:	01400304 	movi	r5,12
 802d1e4:	e13fff17 	ldw	r4,-4(fp)
 802d1e8:	802a8bc0 	call	802a8bc <__mulsi3>
 802d1ec:	1007883a 	mov	r3,r2
 802d1f0:	00800034 	movhi	r2,0
 802d1f4:	1082f304 	addi	r2,r2,3020
 802d1f8:	1885883a 	add	r2,r3,r2
 802d1fc:	00000106 	br	802d204 <close+0x40>
 802d200:	0005883a 	mov	r2,zero
 802d204:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
 802d208:	e0bffd17 	ldw	r2,-12(fp)
 802d20c:	10001926 	beq	r2,zero,802d274 <close+0xb0>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
 802d210:	e0bffd17 	ldw	r2,-12(fp)
 802d214:	10800017 	ldw	r2,0(r2)
 802d218:	10800417 	ldw	r2,16(r2)
 802d21c:	10000626 	beq	r2,zero,802d238 <close+0x74>
 802d220:	e0bffd17 	ldw	r2,-12(fp)
 802d224:	10800017 	ldw	r2,0(r2)
 802d228:	10800417 	ldw	r2,16(r2)
 802d22c:	e13ffd17 	ldw	r4,-12(fp)
 802d230:	103ee83a 	callr	r2
 802d234:	00000106 	br	802d23c <close+0x78>
 802d238:	0005883a 	mov	r2,zero
 802d23c:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
 802d240:	e13fff17 	ldw	r4,-4(fp)
 802d244:	802d8ac0 	call	802d8ac <alt_release_fd>
    if (rval < 0)
 802d248:	e0bffe17 	ldw	r2,-8(fp)
 802d24c:	1000070e 	bge	r2,zero,802d26c <close+0xa8>
    {
      ALT_ERRNO = -rval;
 802d250:	802d1880 	call	802d188 <alt_get_errno>
 802d254:	1007883a 	mov	r3,r2
 802d258:	e0bffe17 	ldw	r2,-8(fp)
 802d25c:	0085c83a 	sub	r2,zero,r2
 802d260:	18800015 	stw	r2,0(r3)
      return -1;
 802d264:	00bfffc4 	movi	r2,-1
 802d268:	00000706 	br	802d288 <close+0xc4>
    }
    return 0;
 802d26c:	0005883a 	mov	r2,zero
 802d270:	00000506 	br	802d288 <close+0xc4>
  }
  else
  {
    ALT_ERRNO = EBADFD;
 802d274:	802d1880 	call	802d188 <alt_get_errno>
 802d278:	1007883a 	mov	r3,r2
 802d27c:	00801444 	movi	r2,81
 802d280:	18800015 	stw	r2,0(r3)
    return -1;
 802d284:	00bfffc4 	movi	r2,-1
  }
}
 802d288:	e037883a 	mov	sp,fp
 802d28c:	dfc00117 	ldw	ra,4(sp)
 802d290:	df000017 	ldw	fp,0(sp)
 802d294:	dec00204 	addi	sp,sp,8
 802d298:	f800283a 	ret

0802d29c <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
 802d29c:	defffc04 	addi	sp,sp,-16
 802d2a0:	df000315 	stw	fp,12(sp)
 802d2a4:	df000304 	addi	fp,sp,12
 802d2a8:	e13ffd15 	stw	r4,-12(fp)
 802d2ac:	e17ffe15 	stw	r5,-8(fp)
 802d2b0:	e1bfff15 	stw	r6,-4(fp)
  return len;
 802d2b4:	e0bfff17 	ldw	r2,-4(fp)
}
 802d2b8:	e037883a 	mov	sp,fp
 802d2bc:	df000017 	ldw	fp,0(sp)
 802d2c0:	dec00104 	addi	sp,sp,4
 802d2c4:	f800283a 	ret

0802d2c8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802d2c8:	defffe04 	addi	sp,sp,-8
 802d2cc:	dfc00115 	stw	ra,4(sp)
 802d2d0:	df000015 	stw	fp,0(sp)
 802d2d4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802d2d8:	d0a00b17 	ldw	r2,-32724(gp)
 802d2dc:	10000326 	beq	r2,zero,802d2ec <alt_get_errno+0x24>
 802d2e0:	d0a00b17 	ldw	r2,-32724(gp)
 802d2e4:	103ee83a 	callr	r2
 802d2e8:	00000106 	br	802d2f0 <alt_get_errno+0x28>
 802d2ec:	d0a01604 	addi	r2,gp,-32680
}
 802d2f0:	e037883a 	mov	sp,fp
 802d2f4:	dfc00117 	ldw	ra,4(sp)
 802d2f8:	df000017 	ldw	fp,0(sp)
 802d2fc:	dec00204 	addi	sp,sp,8
 802d300:	f800283a 	ret

0802d304 <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
 802d304:	defffb04 	addi	sp,sp,-20
 802d308:	dfc00415 	stw	ra,16(sp)
 802d30c:	df000315 	stw	fp,12(sp)
 802d310:	df000304 	addi	fp,sp,12
 802d314:	e13ffe15 	stw	r4,-8(fp)
 802d318:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 802d31c:	e0bffe17 	ldw	r2,-8(fp)
 802d320:	10000816 	blt	r2,zero,802d344 <fstat+0x40>
 802d324:	01400304 	movi	r5,12
 802d328:	e13ffe17 	ldw	r4,-8(fp)
 802d32c:	802a8bc0 	call	802a8bc <__mulsi3>
 802d330:	1007883a 	mov	r3,r2
 802d334:	00800034 	movhi	r2,0
 802d338:	1082f304 	addi	r2,r2,3020
 802d33c:	1885883a 	add	r2,r3,r2
 802d340:	00000106 	br	802d348 <fstat+0x44>
 802d344:	0005883a 	mov	r2,zero
 802d348:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
 802d34c:	e0bffd17 	ldw	r2,-12(fp)
 802d350:	10001026 	beq	r2,zero,802d394 <fstat+0x90>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
 802d354:	e0bffd17 	ldw	r2,-12(fp)
 802d358:	10800017 	ldw	r2,0(r2)
 802d35c:	10800817 	ldw	r2,32(r2)
 802d360:	10000726 	beq	r2,zero,802d380 <fstat+0x7c>
    {
      return fd->dev->fstat(fd, st);
 802d364:	e0bffd17 	ldw	r2,-12(fp)
 802d368:	10800017 	ldw	r2,0(r2)
 802d36c:	10800817 	ldw	r2,32(r2)
 802d370:	e17fff17 	ldw	r5,-4(fp)
 802d374:	e13ffd17 	ldw	r4,-12(fp)
 802d378:	103ee83a 	callr	r2
 802d37c:	00000a06 	br	802d3a8 <fstat+0xa4>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
 802d380:	e0bfff17 	ldw	r2,-4(fp)
 802d384:	00c80004 	movi	r3,8192
 802d388:	10c00115 	stw	r3,4(r2)
      return 0;
 802d38c:	0005883a 	mov	r2,zero
 802d390:	00000506 	br	802d3a8 <fstat+0xa4>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 802d394:	802d2c80 	call	802d2c8 <alt_get_errno>
 802d398:	1007883a 	mov	r3,r2
 802d39c:	00801444 	movi	r2,81
 802d3a0:	18800015 	stw	r2,0(r3)
    return -1;
 802d3a4:	00bfffc4 	movi	r2,-1
  }
}
 802d3a8:	e037883a 	mov	sp,fp
 802d3ac:	dfc00117 	ldw	ra,4(sp)
 802d3b0:	df000017 	ldw	fp,0(sp)
 802d3b4:	dec00204 	addi	sp,sp,8
 802d3b8:	f800283a 	ret

0802d3bc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802d3bc:	defffe04 	addi	sp,sp,-8
 802d3c0:	dfc00115 	stw	ra,4(sp)
 802d3c4:	df000015 	stw	fp,0(sp)
 802d3c8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802d3cc:	d0a00b17 	ldw	r2,-32724(gp)
 802d3d0:	10000326 	beq	r2,zero,802d3e0 <alt_get_errno+0x24>
 802d3d4:	d0a00b17 	ldw	r2,-32724(gp)
 802d3d8:	103ee83a 	callr	r2
 802d3dc:	00000106 	br	802d3e4 <alt_get_errno+0x28>
 802d3e0:	d0a01604 	addi	r2,gp,-32680
}
 802d3e4:	e037883a 	mov	sp,fp
 802d3e8:	dfc00117 	ldw	ra,4(sp)
 802d3ec:	df000017 	ldw	fp,0(sp)
 802d3f0:	dec00204 	addi	sp,sp,8
 802d3f4:	f800283a 	ret

0802d3f8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
 802d3f8:	deffed04 	addi	sp,sp,-76
 802d3fc:	dfc01215 	stw	ra,72(sp)
 802d400:	df001115 	stw	fp,68(sp)
 802d404:	df001104 	addi	fp,sp,68
 802d408:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 802d40c:	e0bfff17 	ldw	r2,-4(fp)
 802d410:	10000816 	blt	r2,zero,802d434 <isatty+0x3c>
 802d414:	01400304 	movi	r5,12
 802d418:	e13fff17 	ldw	r4,-4(fp)
 802d41c:	802a8bc0 	call	802a8bc <__mulsi3>
 802d420:	1007883a 	mov	r3,r2
 802d424:	00800034 	movhi	r2,0
 802d428:	1082f304 	addi	r2,r2,3020
 802d42c:	1885883a 	add	r2,r3,r2
 802d430:	00000106 	br	802d438 <isatty+0x40>
 802d434:	0005883a 	mov	r2,zero
 802d438:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
 802d43c:	e0bfef17 	ldw	r2,-68(fp)
 802d440:	10000e26 	beq	r2,zero,802d47c <isatty+0x84>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
 802d444:	e0bfef17 	ldw	r2,-68(fp)
 802d448:	10800017 	ldw	r2,0(r2)
 802d44c:	10800817 	ldw	r2,32(r2)
 802d450:	1000021e 	bne	r2,zero,802d45c <isatty+0x64>
    {
      return 1;
 802d454:	00800044 	movi	r2,1
 802d458:	00000d06 	br	802d490 <isatty+0x98>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
 802d45c:	e0bff004 	addi	r2,fp,-64
 802d460:	100b883a 	mov	r5,r2
 802d464:	e13fff17 	ldw	r4,-4(fp)
 802d468:	802d3040 	call	802d304 <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
 802d46c:	e0bff117 	ldw	r2,-60(fp)
 802d470:	10880020 	cmpeqi	r2,r2,8192
 802d474:	10803fcc 	andi	r2,r2,255
 802d478:	00000506 	br	802d490 <isatty+0x98>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
 802d47c:	802d3bc0 	call	802d3bc <alt_get_errno>
 802d480:	1007883a 	mov	r3,r2
 802d484:	00801444 	movi	r2,81
 802d488:	18800015 	stw	r2,0(r3)
    return 0;
 802d48c:	0005883a 	mov	r2,zero
  }
}
 802d490:	e037883a 	mov	sp,fp
 802d494:	dfc00117 	ldw	ra,4(sp)
 802d498:	df000017 	ldw	fp,0(sp)
 802d49c:	dec00204 	addi	sp,sp,8
 802d4a0:	f800283a 	ret

0802d4a4 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
 802d4a4:	defffc04 	addi	sp,sp,-16
 802d4a8:	df000315 	stw	fp,12(sp)
 802d4ac:	df000304 	addi	fp,sp,12
 802d4b0:	e13ffd15 	stw	r4,-12(fp)
 802d4b4:	e17ffe15 	stw	r5,-8(fp)
 802d4b8:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
 802d4bc:	e0fffe17 	ldw	r3,-8(fp)
 802d4c0:	e0bffd17 	ldw	r2,-12(fp)
 802d4c4:	18800c26 	beq	r3,r2,802d4f8 <alt_load_section+0x54>
  {
    while( to != end )
 802d4c8:	00000806 	br	802d4ec <alt_load_section+0x48>
    {
      *to++ = *from++;
 802d4cc:	e0bffe17 	ldw	r2,-8(fp)
 802d4d0:	10c00104 	addi	r3,r2,4
 802d4d4:	e0fffe15 	stw	r3,-8(fp)
 802d4d8:	e0fffd17 	ldw	r3,-12(fp)
 802d4dc:	19000104 	addi	r4,r3,4
 802d4e0:	e13ffd15 	stw	r4,-12(fp)
 802d4e4:	18c00017 	ldw	r3,0(r3)
 802d4e8:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
 802d4ec:	e0fffe17 	ldw	r3,-8(fp)
 802d4f0:	e0bfff17 	ldw	r2,-4(fp)
 802d4f4:	18bff51e 	bne	r3,r2,802d4cc <__flash_rwdata_start+0xffffd9b0>
    {
      *to++ = *from++;
    }
  }
}
 802d4f8:	0001883a 	nop
 802d4fc:	e037883a 	mov	sp,fp
 802d500:	df000017 	ldw	fp,0(sp)
 802d504:	dec00104 	addi	sp,sp,4
 802d508:	f800283a 	ret

0802d50c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
 802d50c:	defffe04 	addi	sp,sp,-8
 802d510:	dfc00115 	stw	ra,4(sp)
 802d514:	df000015 	stw	fp,0(sp)
 802d518:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
 802d51c:	01800034 	movhi	r6,0
 802d520:	31877b04 	addi	r6,r6,7660
 802d524:	01400034 	movhi	r5,0
 802d528:	2940c004 	addi	r5,r5,768
 802d52c:	010200f4 	movhi	r4,2051
 802d530:	213ec704 	addi	r4,r4,-1252
 802d534:	802d4a40 	call	802d4a4 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
 802d538:	018200b4 	movhi	r6,2050
 802d53c:	31808c04 	addi	r6,r6,560
 802d540:	014200b4 	movhi	r5,2050
 802d544:	29400804 	addi	r5,r5,32
 802d548:	010200b4 	movhi	r4,2050
 802d54c:	21000804 	addi	r4,r4,32
 802d550:	802d4a40 	call	802d4a4 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
 802d554:	01800034 	movhi	r6,0
 802d558:	3180c004 	addi	r6,r6,768
 802d55c:	01400034 	movhi	r5,0
 802d560:	29400004 	addi	r5,r5,0
 802d564:	010200f4 	movhi	r4,2051
 802d568:	213e0704 	addi	r4,r4,-2020
 802d56c:	802d4a40 	call	802d4a4 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
 802d570:	802e7640 	call	802e764 <alt_dcache_flush_all>
  alt_icache_flush_all();
 802d574:	802e9240 	call	802e924 <alt_icache_flush_all>
}
 802d578:	0001883a 	nop
 802d57c:	e037883a 	mov	sp,fp
 802d580:	dfc00117 	ldw	ra,4(sp)
 802d584:	df000017 	ldw	fp,0(sp)
 802d588:	dec00204 	addi	sp,sp,8
 802d58c:	f800283a 	ret

0802d590 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802d590:	defffe04 	addi	sp,sp,-8
 802d594:	dfc00115 	stw	ra,4(sp)
 802d598:	df000015 	stw	fp,0(sp)
 802d59c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802d5a0:	d0a00b17 	ldw	r2,-32724(gp)
 802d5a4:	10000326 	beq	r2,zero,802d5b4 <alt_get_errno+0x24>
 802d5a8:	d0a00b17 	ldw	r2,-32724(gp)
 802d5ac:	103ee83a 	callr	r2
 802d5b0:	00000106 	br	802d5b8 <alt_get_errno+0x28>
 802d5b4:	d0a01604 	addi	r2,gp,-32680
}
 802d5b8:	e037883a 	mov	sp,fp
 802d5bc:	dfc00117 	ldw	ra,4(sp)
 802d5c0:	df000017 	ldw	fp,0(sp)
 802d5c4:	dec00204 	addi	sp,sp,8
 802d5c8:	f800283a 	ret

0802d5cc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
 802d5cc:	defff904 	addi	sp,sp,-28
 802d5d0:	dfc00615 	stw	ra,24(sp)
 802d5d4:	df000515 	stw	fp,20(sp)
 802d5d8:	df000504 	addi	fp,sp,20
 802d5dc:	e13ffd15 	stw	r4,-12(fp)
 802d5e0:	e17ffe15 	stw	r5,-8(fp)
 802d5e4:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
 802d5e8:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 802d5ec:	e0bffd17 	ldw	r2,-12(fp)
 802d5f0:	10000816 	blt	r2,zero,802d614 <lseek+0x48>
 802d5f4:	01400304 	movi	r5,12
 802d5f8:	e13ffd17 	ldw	r4,-12(fp)
 802d5fc:	802a8bc0 	call	802a8bc <__mulsi3>
 802d600:	1007883a 	mov	r3,r2
 802d604:	00800034 	movhi	r2,0
 802d608:	1082f304 	addi	r2,r2,3020
 802d60c:	1885883a 	add	r2,r3,r2
 802d610:	00000106 	br	802d618 <lseek+0x4c>
 802d614:	0005883a 	mov	r2,zero
 802d618:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
 802d61c:	e0bffc17 	ldw	r2,-16(fp)
 802d620:	10001026 	beq	r2,zero,802d664 <lseek+0x98>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
 802d624:	e0bffc17 	ldw	r2,-16(fp)
 802d628:	10800017 	ldw	r2,0(r2)
 802d62c:	10800717 	ldw	r2,28(r2)
 802d630:	10000926 	beq	r2,zero,802d658 <lseek+0x8c>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
 802d634:	e0bffc17 	ldw	r2,-16(fp)
 802d638:	10800017 	ldw	r2,0(r2)
 802d63c:	10800717 	ldw	r2,28(r2)
 802d640:	e1bfff17 	ldw	r6,-4(fp)
 802d644:	e17ffe17 	ldw	r5,-8(fp)
 802d648:	e13ffc17 	ldw	r4,-16(fp)
 802d64c:	103ee83a 	callr	r2
 802d650:	e0bffb15 	stw	r2,-20(fp)
 802d654:	00000506 	br	802d66c <lseek+0xa0>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
 802d658:	00bfde84 	movi	r2,-134
 802d65c:	e0bffb15 	stw	r2,-20(fp)
 802d660:	00000206 	br	802d66c <lseek+0xa0>
    }
  }
  else  
  {
    rc = -EBADFD;
 802d664:	00bfebc4 	movi	r2,-81
 802d668:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
 802d66c:	e0bffb17 	ldw	r2,-20(fp)
 802d670:	1000070e 	bge	r2,zero,802d690 <lseek+0xc4>
  {
    ALT_ERRNO = -rc;
 802d674:	802d5900 	call	802d590 <alt_get_errno>
 802d678:	1007883a 	mov	r3,r2
 802d67c:	e0bffb17 	ldw	r2,-20(fp)
 802d680:	0085c83a 	sub	r2,zero,r2
 802d684:	18800015 	stw	r2,0(r3)
    rc = -1;
 802d688:	00bfffc4 	movi	r2,-1
 802d68c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
 802d690:	e0bffb17 	ldw	r2,-20(fp)
}
 802d694:	e037883a 	mov	sp,fp
 802d698:	dfc00117 	ldw	ra,4(sp)
 802d69c:	df000017 	ldw	fp,0(sp)
 802d6a0:	dec00204 	addi	sp,sp,8
 802d6a4:	f800283a 	ret

0802d6a8 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
 802d6a8:	defffd04 	addi	sp,sp,-12
 802d6ac:	dfc00215 	stw	ra,8(sp)
 802d6b0:	df000115 	stw	fp,4(sp)
 802d6b4:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
 802d6b8:	0009883a 	mov	r4,zero
 802d6bc:	802db500 	call	802db50 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
 802d6c0:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
 802d6c4:	802db880 	call	802db88 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
 802d6c8:	01800034 	movhi	r6,0
 802d6cc:	3180b804 	addi	r6,r6,736
 802d6d0:	01400034 	movhi	r5,0
 802d6d4:	2940b804 	addi	r5,r5,736
 802d6d8:	01000034 	movhi	r4,0
 802d6dc:	2100b804 	addi	r4,r4,736
 802d6e0:	802ecc80 	call	802ecc8 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
 802d6e4:	802e8640 	call	802e864 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
 802d6e8:	010200f4 	movhi	r4,2051
 802d6ec:	213a3104 	addi	r4,r4,-5948
 802d6f0:	802f4880 	call	802f488 <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
 802d6f4:	d0a01717 	ldw	r2,-32676(gp)
 802d6f8:	d0e01817 	ldw	r3,-32672(gp)
 802d6fc:	d1201917 	ldw	r4,-32668(gp)
 802d700:	200d883a 	mov	r6,r4
 802d704:	180b883a 	mov	r5,r3
 802d708:	1009883a 	mov	r4,r2
 802d70c:	802026c0 	call	802026c <main>
 802d710:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
 802d714:	01000044 	movi	r4,1
 802d718:	802d1c40 	call	802d1c4 <close>
  exit (result);
 802d71c:	e13fff17 	ldw	r4,-4(fp)
 802d720:	802f49c0 	call	802f49c <exit>

0802d724 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
 802d724:	defffe04 	addi	sp,sp,-8
 802d728:	df000115 	stw	fp,4(sp)
 802d72c:	df000104 	addi	fp,sp,4
 802d730:	e13fff15 	stw	r4,-4(fp)
}
 802d734:	0001883a 	nop
 802d738:	e037883a 	mov	sp,fp
 802d73c:	df000017 	ldw	fp,0(sp)
 802d740:	dec00104 	addi	sp,sp,4
 802d744:	f800283a 	ret

0802d748 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
 802d748:	defffe04 	addi	sp,sp,-8
 802d74c:	df000115 	stw	fp,4(sp)
 802d750:	df000104 	addi	fp,sp,4
 802d754:	e13fff15 	stw	r4,-4(fp)
}
 802d758:	0001883a 	nop
 802d75c:	e037883a 	mov	sp,fp
 802d760:	df000017 	ldw	fp,0(sp)
 802d764:	dec00104 	addi	sp,sp,4
 802d768:	f800283a 	ret

0802d76c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802d76c:	defffe04 	addi	sp,sp,-8
 802d770:	dfc00115 	stw	ra,4(sp)
 802d774:	df000015 	stw	fp,0(sp)
 802d778:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802d77c:	d0a00b17 	ldw	r2,-32724(gp)
 802d780:	10000326 	beq	r2,zero,802d790 <alt_get_errno+0x24>
 802d784:	d0a00b17 	ldw	r2,-32724(gp)
 802d788:	103ee83a 	callr	r2
 802d78c:	00000106 	br	802d794 <alt_get_errno+0x28>
 802d790:	d0a01604 	addi	r2,gp,-32680
}
 802d794:	e037883a 	mov	sp,fp
 802d798:	dfc00117 	ldw	ra,4(sp)
 802d79c:	df000017 	ldw	fp,0(sp)
 802d7a0:	dec00204 	addi	sp,sp,8
 802d7a4:	f800283a 	ret

0802d7a8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
 802d7a8:	defff904 	addi	sp,sp,-28
 802d7ac:	dfc00615 	stw	ra,24(sp)
 802d7b0:	df000515 	stw	fp,20(sp)
 802d7b4:	df000504 	addi	fp,sp,20
 802d7b8:	e13ffd15 	stw	r4,-12(fp)
 802d7bc:	e17ffe15 	stw	r5,-8(fp)
 802d7c0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 802d7c4:	e0bffd17 	ldw	r2,-12(fp)
 802d7c8:	10000816 	blt	r2,zero,802d7ec <read+0x44>
 802d7cc:	01400304 	movi	r5,12
 802d7d0:	e13ffd17 	ldw	r4,-12(fp)
 802d7d4:	802a8bc0 	call	802a8bc <__mulsi3>
 802d7d8:	1007883a 	mov	r3,r2
 802d7dc:	00800034 	movhi	r2,0
 802d7e0:	1082f304 	addi	r2,r2,3020
 802d7e4:	1885883a 	add	r2,r3,r2
 802d7e8:	00000106 	br	802d7f0 <read+0x48>
 802d7ec:	0005883a 	mov	r2,zero
 802d7f0:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 802d7f4:	e0bffb17 	ldw	r2,-20(fp)
 802d7f8:	10002226 	beq	r2,zero,802d884 <read+0xdc>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 802d7fc:	e0bffb17 	ldw	r2,-20(fp)
 802d800:	10800217 	ldw	r2,8(r2)
 802d804:	108000cc 	andi	r2,r2,3
 802d808:	10800060 	cmpeqi	r2,r2,1
 802d80c:	1000181e 	bne	r2,zero,802d870 <read+0xc8>
        (fd->dev->read))
 802d810:	e0bffb17 	ldw	r2,-20(fp)
 802d814:	10800017 	ldw	r2,0(r2)
 802d818:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
 802d81c:	10001426 	beq	r2,zero,802d870 <read+0xc8>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
 802d820:	e0bffb17 	ldw	r2,-20(fp)
 802d824:	10800017 	ldw	r2,0(r2)
 802d828:	10800517 	ldw	r2,20(r2)
 802d82c:	e0ffff17 	ldw	r3,-4(fp)
 802d830:	180d883a 	mov	r6,r3
 802d834:	e17ffe17 	ldw	r5,-8(fp)
 802d838:	e13ffb17 	ldw	r4,-20(fp)
 802d83c:	103ee83a 	callr	r2
 802d840:	e0bffc15 	stw	r2,-16(fp)
 802d844:	e0bffc17 	ldw	r2,-16(fp)
 802d848:	1000070e 	bge	r2,zero,802d868 <read+0xc0>
        {
          ALT_ERRNO = -rval;
 802d84c:	802d76c0 	call	802d76c <alt_get_errno>
 802d850:	1007883a 	mov	r3,r2
 802d854:	e0bffc17 	ldw	r2,-16(fp)
 802d858:	0085c83a 	sub	r2,zero,r2
 802d85c:	18800015 	stw	r2,0(r3)
          return -1;
 802d860:	00bfffc4 	movi	r2,-1
 802d864:	00000c06 	br	802d898 <read+0xf0>
        }
        return rval;
 802d868:	e0bffc17 	ldw	r2,-16(fp)
 802d86c:	00000a06 	br	802d898 <read+0xf0>
      }
      else
      {
        ALT_ERRNO = EACCES;
 802d870:	802d76c0 	call	802d76c <alt_get_errno>
 802d874:	1007883a 	mov	r3,r2
 802d878:	00800344 	movi	r2,13
 802d87c:	18800015 	stw	r2,0(r3)
 802d880:	00000406 	br	802d894 <read+0xec>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
 802d884:	802d76c0 	call	802d76c <alt_get_errno>
 802d888:	1007883a 	mov	r3,r2
 802d88c:	00801444 	movi	r2,81
 802d890:	18800015 	stw	r2,0(r3)
  }
  return -1;
 802d894:	00bfffc4 	movi	r2,-1
}
 802d898:	e037883a 	mov	sp,fp
 802d89c:	dfc00117 	ldw	ra,4(sp)
 802d8a0:	df000017 	ldw	fp,0(sp)
 802d8a4:	dec00204 	addi	sp,sp,8
 802d8a8:	f800283a 	ret

0802d8ac <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
 802d8ac:	defffc04 	addi	sp,sp,-16
 802d8b0:	dfc00315 	stw	ra,12(sp)
 802d8b4:	df000215 	stw	fp,8(sp)
 802d8b8:	dc000115 	stw	r16,4(sp)
 802d8bc:	df000204 	addi	fp,sp,8
 802d8c0:	e13ffe15 	stw	r4,-8(fp)
  if (fd > 2)
 802d8c4:	e0bffe17 	ldw	r2,-8(fp)
 802d8c8:	108000d0 	cmplti	r2,r2,3
 802d8cc:	1000111e 	bne	r2,zero,802d914 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
 802d8d0:	04000034 	movhi	r16,0
 802d8d4:	8402f304 	addi	r16,r16,3020
 802d8d8:	e0bffe17 	ldw	r2,-8(fp)
 802d8dc:	01400304 	movi	r5,12
 802d8e0:	1009883a 	mov	r4,r2
 802d8e4:	802a8bc0 	call	802a8bc <__mulsi3>
 802d8e8:	8085883a 	add	r2,r16,r2
 802d8ec:	10800204 	addi	r2,r2,8
 802d8f0:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
 802d8f4:	04000034 	movhi	r16,0
 802d8f8:	8402f304 	addi	r16,r16,3020
 802d8fc:	e0bffe17 	ldw	r2,-8(fp)
 802d900:	01400304 	movi	r5,12
 802d904:	1009883a 	mov	r4,r2
 802d908:	802a8bc0 	call	802a8bc <__mulsi3>
 802d90c:	8085883a 	add	r2,r16,r2
 802d910:	10000015 	stw	zero,0(r2)
  }
}
 802d914:	0001883a 	nop
 802d918:	e6ffff04 	addi	sp,fp,-4
 802d91c:	dfc00217 	ldw	ra,8(sp)
 802d920:	df000117 	ldw	fp,4(sp)
 802d924:	dc000017 	ldw	r16,0(sp)
 802d928:	dec00304 	addi	sp,sp,12
 802d92c:	f800283a 	ret

0802d930 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
 802d930:	defff904 	addi	sp,sp,-28
 802d934:	df000615 	stw	fp,24(sp)
 802d938:	df000604 	addi	fp,sp,24
 802d93c:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802d940:	0005303a 	rdctl	r2,status
 802d944:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802d948:	e0fffe17 	ldw	r3,-8(fp)
 802d94c:	00bfff84 	movi	r2,-2
 802d950:	1884703a 	and	r2,r3,r2
 802d954:	1001703a 	wrctl	status,r2
  
  return context;
 802d958:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
 802d95c:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
 802d960:	d0a00c17 	ldw	r2,-32720(gp)
 802d964:	10c000c4 	addi	r3,r2,3
 802d968:	00bfff04 	movi	r2,-4
 802d96c:	1884703a 	and	r2,r3,r2
 802d970:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
 802d974:	d0e00c17 	ldw	r3,-32720(gp)
 802d978:	e0bfff17 	ldw	r2,-4(fp)
 802d97c:	1887883a 	add	r3,r3,r2
 802d980:	00820034 	movhi	r2,2048
 802d984:	10800004 	addi	r2,r2,0
 802d988:	10c0062e 	bgeu	r2,r3,802d9a4 <sbrk+0x74>
 802d98c:	e0bffb17 	ldw	r2,-20(fp)
 802d990:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802d994:	e0bffa17 	ldw	r2,-24(fp)
 802d998:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
 802d99c:	00bfffc4 	movi	r2,-1
 802d9a0:	00000b06 	br	802d9d0 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
 802d9a4:	d0a00c17 	ldw	r2,-32720(gp)
 802d9a8:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
 802d9ac:	d0e00c17 	ldw	r3,-32720(gp)
 802d9b0:	e0bfff17 	ldw	r2,-4(fp)
 802d9b4:	1885883a 	add	r2,r3,r2
 802d9b8:	d0a00c15 	stw	r2,-32720(gp)
 802d9bc:	e0bffb17 	ldw	r2,-20(fp)
 802d9c0:	e0bffc15 	stw	r2,-16(fp)
 802d9c4:	e0bffc17 	ldw	r2,-16(fp)
 802d9c8:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
 802d9cc:	e0bffd17 	ldw	r2,-12(fp)
} 
 802d9d0:	e037883a 	mov	sp,fp
 802d9d4:	df000017 	ldw	fp,0(sp)
 802d9d8:	dec00104 	addi	sp,sp,4
 802d9dc:	f800283a 	ret

0802d9e0 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802d9e0:	defffe04 	addi	sp,sp,-8
 802d9e4:	dfc00115 	stw	ra,4(sp)
 802d9e8:	df000015 	stw	fp,0(sp)
 802d9ec:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802d9f0:	d0a00b17 	ldw	r2,-32724(gp)
 802d9f4:	10000326 	beq	r2,zero,802da04 <alt_get_errno+0x24>
 802d9f8:	d0a00b17 	ldw	r2,-32724(gp)
 802d9fc:	103ee83a 	callr	r2
 802da00:	00000106 	br	802da08 <alt_get_errno+0x28>
 802da04:	d0a01604 	addi	r2,gp,-32680
}
 802da08:	e037883a 	mov	sp,fp
 802da0c:	dfc00117 	ldw	ra,4(sp)
 802da10:	df000017 	ldw	fp,0(sp)
 802da14:	dec00204 	addi	sp,sp,8
 802da18:	f800283a 	ret

0802da1c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
 802da1c:	defff904 	addi	sp,sp,-28
 802da20:	dfc00615 	stw	ra,24(sp)
 802da24:	df000515 	stw	fp,20(sp)
 802da28:	df000504 	addi	fp,sp,20
 802da2c:	e13ffd15 	stw	r4,-12(fp)
 802da30:	e17ffe15 	stw	r5,-8(fp)
 802da34:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
 802da38:	e0bffd17 	ldw	r2,-12(fp)
 802da3c:	10000816 	blt	r2,zero,802da60 <write+0x44>
 802da40:	01400304 	movi	r5,12
 802da44:	e13ffd17 	ldw	r4,-12(fp)
 802da48:	802a8bc0 	call	802a8bc <__mulsi3>
 802da4c:	1007883a 	mov	r3,r2
 802da50:	00800034 	movhi	r2,0
 802da54:	1082f304 	addi	r2,r2,3020
 802da58:	1885883a 	add	r2,r3,r2
 802da5c:	00000106 	br	802da64 <write+0x48>
 802da60:	0005883a 	mov	r2,zero
 802da64:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
 802da68:	e0bffb17 	ldw	r2,-20(fp)
 802da6c:	10002126 	beq	r2,zero,802daf4 <write+0xd8>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
 802da70:	e0bffb17 	ldw	r2,-20(fp)
 802da74:	10800217 	ldw	r2,8(r2)
 802da78:	108000cc 	andi	r2,r2,3
 802da7c:	10001826 	beq	r2,zero,802dae0 <write+0xc4>
 802da80:	e0bffb17 	ldw	r2,-20(fp)
 802da84:	10800017 	ldw	r2,0(r2)
 802da88:	10800617 	ldw	r2,24(r2)
 802da8c:	10001426 	beq	r2,zero,802dae0 <write+0xc4>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
 802da90:	e0bffb17 	ldw	r2,-20(fp)
 802da94:	10800017 	ldw	r2,0(r2)
 802da98:	10800617 	ldw	r2,24(r2)
 802da9c:	e0ffff17 	ldw	r3,-4(fp)
 802daa0:	180d883a 	mov	r6,r3
 802daa4:	e17ffe17 	ldw	r5,-8(fp)
 802daa8:	e13ffb17 	ldw	r4,-20(fp)
 802daac:	103ee83a 	callr	r2
 802dab0:	e0bffc15 	stw	r2,-16(fp)
 802dab4:	e0bffc17 	ldw	r2,-16(fp)
 802dab8:	1000070e 	bge	r2,zero,802dad8 <write+0xbc>
      {
        ALT_ERRNO = -rval;
 802dabc:	802d9e00 	call	802d9e0 <alt_get_errno>
 802dac0:	1007883a 	mov	r3,r2
 802dac4:	e0bffc17 	ldw	r2,-16(fp)
 802dac8:	0085c83a 	sub	r2,zero,r2
 802dacc:	18800015 	stw	r2,0(r3)
        return -1;
 802dad0:	00bfffc4 	movi	r2,-1
 802dad4:	00000c06 	br	802db08 <write+0xec>
      }
      return rval;
 802dad8:	e0bffc17 	ldw	r2,-16(fp)
 802dadc:	00000a06 	br	802db08 <write+0xec>
    }
    else
    {
      ALT_ERRNO = EACCES;
 802dae0:	802d9e00 	call	802d9e0 <alt_get_errno>
 802dae4:	1007883a 	mov	r3,r2
 802dae8:	00800344 	movi	r2,13
 802daec:	18800015 	stw	r2,0(r3)
 802daf0:	00000406 	br	802db04 <write+0xe8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
 802daf4:	802d9e00 	call	802d9e0 <alt_get_errno>
 802daf8:	1007883a 	mov	r3,r2
 802dafc:	00801444 	movi	r2,81
 802db00:	18800015 	stw	r2,0(r3)
  }
  return -1;
 802db04:	00bfffc4 	movi	r2,-1
}
 802db08:	e037883a 	mov	sp,fp
 802db0c:	dfc00117 	ldw	ra,4(sp)
 802db10:	df000017 	ldw	fp,0(sp)
 802db14:	dec00204 	addi	sp,sp,8
 802db18:	f800283a 	ret

0802db1c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
 802db1c:	defffd04 	addi	sp,sp,-12
 802db20:	dfc00215 	stw	ra,8(sp)
 802db24:	df000115 	stw	fp,4(sp)
 802db28:	df000104 	addi	fp,sp,4
 802db2c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
 802db30:	d1600804 	addi	r5,gp,-32736
 802db34:	e13fff17 	ldw	r4,-4(fp)
 802db38:	802e7c00 	call	802e7c0 <alt_dev_llist_insert>
}
 802db3c:	e037883a 	mov	sp,fp
 802db40:	dfc00117 	ldw	ra,4(sp)
 802db44:	df000017 	ldw	fp,0(sp)
 802db48:	dec00204 	addi	sp,sp,8
 802db4c:	f800283a 	ret

0802db50 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
 802db50:	defffd04 	addi	sp,sp,-12
 802db54:	dfc00215 	stw	ra,8(sp)
 802db58:	df000115 	stw	fp,4(sp)
 802db5c:	df000104 	addi	fp,sp,4
 802db60:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2, nios2_gen2);
 802db64:	802f16c0 	call	802f16c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
 802db68:	00800044 	movi	r2,1
 802db6c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
 802db70:	0001883a 	nop
 802db74:	e037883a 	mov	sp,fp
 802db78:	dfc00117 	ldw	ra,4(sp)
 802db7c:	df000017 	ldw	fp,0(sp)
 802db80:	dec00204 	addi	sp,sp,8
 802db84:	f800283a 	ret

0802db88 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
 802db88:	defffe04 	addi	sp,sp,-8
 802db8c:	dfc00115 	stw	ra,4(sp)
 802db90:	df000015 	stw	fp,0(sp)
 802db94:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
 802db98:	000d883a 	mov	r6,zero
 802db9c:	000b883a 	mov	r5,zero
 802dba0:	01000034 	movhi	r4,0
 802dba4:	21035d04 	addi	r4,r4,3444
 802dba8:	802dd340 	call	802dd34 <altera_avalon_jtag_uart_init>
 802dbac:	01000034 	movhi	r4,0
 802dbb0:	21035304 	addi	r4,r4,3404
 802dbb4:	802db1c0 	call	802db1c <alt_dev_reg>
}
 802dbb8:	0001883a 	nop
 802dbbc:	e037883a 	mov	sp,fp
 802dbc0:	dfc00117 	ldw	ra,4(sp)
 802dbc4:	df000017 	ldw	fp,0(sp)
 802dbc8:	dec00204 	addi	sp,sp,8
 802dbcc:	f800283a 	ret

0802dbd0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
 802dbd0:	defffa04 	addi	sp,sp,-24
 802dbd4:	dfc00515 	stw	ra,20(sp)
 802dbd8:	df000415 	stw	fp,16(sp)
 802dbdc:	df000404 	addi	fp,sp,16
 802dbe0:	e13ffd15 	stw	r4,-12(fp)
 802dbe4:	e17ffe15 	stw	r5,-8(fp)
 802dbe8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 802dbec:	e0bffd17 	ldw	r2,-12(fp)
 802dbf0:	10800017 	ldw	r2,0(r2)
 802dbf4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
 802dbf8:	e0bffc17 	ldw	r2,-16(fp)
 802dbfc:	10c00a04 	addi	r3,r2,40
 802dc00:	e0bffd17 	ldw	r2,-12(fp)
 802dc04:	10800217 	ldw	r2,8(r2)
 802dc08:	100f883a 	mov	r7,r2
 802dc0c:	e1bfff17 	ldw	r6,-4(fp)
 802dc10:	e17ffe17 	ldw	r5,-8(fp)
 802dc14:	1809883a 	mov	r4,r3
 802dc18:	802e1f80 	call	802e1f8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
 802dc1c:	e037883a 	mov	sp,fp
 802dc20:	dfc00117 	ldw	ra,4(sp)
 802dc24:	df000017 	ldw	fp,0(sp)
 802dc28:	dec00204 	addi	sp,sp,8
 802dc2c:	f800283a 	ret

0802dc30 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
 802dc30:	defffa04 	addi	sp,sp,-24
 802dc34:	dfc00515 	stw	ra,20(sp)
 802dc38:	df000415 	stw	fp,16(sp)
 802dc3c:	df000404 	addi	fp,sp,16
 802dc40:	e13ffd15 	stw	r4,-12(fp)
 802dc44:	e17ffe15 	stw	r5,-8(fp)
 802dc48:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 802dc4c:	e0bffd17 	ldw	r2,-12(fp)
 802dc50:	10800017 	ldw	r2,0(r2)
 802dc54:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
 802dc58:	e0bffc17 	ldw	r2,-16(fp)
 802dc5c:	10c00a04 	addi	r3,r2,40
 802dc60:	e0bffd17 	ldw	r2,-12(fp)
 802dc64:	10800217 	ldw	r2,8(r2)
 802dc68:	100f883a 	mov	r7,r2
 802dc6c:	e1bfff17 	ldw	r6,-4(fp)
 802dc70:	e17ffe17 	ldw	r5,-8(fp)
 802dc74:	1809883a 	mov	r4,r3
 802dc78:	802e4140 	call	802e414 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
 802dc7c:	e037883a 	mov	sp,fp
 802dc80:	dfc00117 	ldw	ra,4(sp)
 802dc84:	df000017 	ldw	fp,0(sp)
 802dc88:	dec00204 	addi	sp,sp,8
 802dc8c:	f800283a 	ret

0802dc90 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
 802dc90:	defffc04 	addi	sp,sp,-16
 802dc94:	dfc00315 	stw	ra,12(sp)
 802dc98:	df000215 	stw	fp,8(sp)
 802dc9c:	df000204 	addi	fp,sp,8
 802dca0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
 802dca4:	e0bfff17 	ldw	r2,-4(fp)
 802dca8:	10800017 	ldw	r2,0(r2)
 802dcac:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
 802dcb0:	e0bffe17 	ldw	r2,-8(fp)
 802dcb4:	10c00a04 	addi	r3,r2,40
 802dcb8:	e0bfff17 	ldw	r2,-4(fp)
 802dcbc:	10800217 	ldw	r2,8(r2)
 802dcc0:	100b883a 	mov	r5,r2
 802dcc4:	1809883a 	mov	r4,r3
 802dcc8:	802e0a00 	call	802e0a0 <altera_avalon_jtag_uart_close>
}
 802dccc:	e037883a 	mov	sp,fp
 802dcd0:	dfc00117 	ldw	ra,4(sp)
 802dcd4:	df000017 	ldw	fp,0(sp)
 802dcd8:	dec00204 	addi	sp,sp,8
 802dcdc:	f800283a 	ret

0802dce0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
 802dce0:	defffa04 	addi	sp,sp,-24
 802dce4:	dfc00515 	stw	ra,20(sp)
 802dce8:	df000415 	stw	fp,16(sp)
 802dcec:	df000404 	addi	fp,sp,16
 802dcf0:	e13ffd15 	stw	r4,-12(fp)
 802dcf4:	e17ffe15 	stw	r5,-8(fp)
 802dcf8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
 802dcfc:	e0bffd17 	ldw	r2,-12(fp)
 802dd00:	10800017 	ldw	r2,0(r2)
 802dd04:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
 802dd08:	e0bffc17 	ldw	r2,-16(fp)
 802dd0c:	10800a04 	addi	r2,r2,40
 802dd10:	e1bfff17 	ldw	r6,-4(fp)
 802dd14:	e17ffe17 	ldw	r5,-8(fp)
 802dd18:	1009883a 	mov	r4,r2
 802dd1c:	802e1080 	call	802e108 <altera_avalon_jtag_uart_ioctl>
}
 802dd20:	e037883a 	mov	sp,fp
 802dd24:	dfc00117 	ldw	ra,4(sp)
 802dd28:	df000017 	ldw	fp,0(sp)
 802dd2c:	dec00204 	addi	sp,sp,8
 802dd30:	f800283a 	ret

0802dd34 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
 802dd34:	defffa04 	addi	sp,sp,-24
 802dd38:	dfc00515 	stw	ra,20(sp)
 802dd3c:	df000415 	stw	fp,16(sp)
 802dd40:	df000404 	addi	fp,sp,16
 802dd44:	e13ffd15 	stw	r4,-12(fp)
 802dd48:	e17ffe15 	stw	r5,-8(fp)
 802dd4c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 802dd50:	e0bffd17 	ldw	r2,-12(fp)
 802dd54:	00c00044 	movi	r3,1
 802dd58:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
 802dd5c:	e0bffd17 	ldw	r2,-12(fp)
 802dd60:	10800017 	ldw	r2,0(r2)
 802dd64:	10800104 	addi	r2,r2,4
 802dd68:	1007883a 	mov	r3,r2
 802dd6c:	e0bffd17 	ldw	r2,-12(fp)
 802dd70:	10800817 	ldw	r2,32(r2)
 802dd74:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
 802dd78:	e0bffe17 	ldw	r2,-8(fp)
 802dd7c:	e0ffff17 	ldw	r3,-4(fp)
 802dd80:	d8000015 	stw	zero,0(sp)
 802dd84:	e1fffd17 	ldw	r7,-12(fp)
 802dd88:	018200f4 	movhi	r6,2051
 802dd8c:	31b77d04 	addi	r6,r6,-8716
 802dd90:	180b883a 	mov	r5,r3
 802dd94:	1009883a 	mov	r4,r2
 802dd98:	802e9440 	call	802e944 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
 802dd9c:	e0bffd17 	ldw	r2,-12(fp)
 802dda0:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
 802dda4:	e0bffd17 	ldw	r2,-12(fp)
 802dda8:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
 802ddac:	d0e01b17 	ldw	r3,-32660(gp)
 802ddb0:	e1fffd17 	ldw	r7,-12(fp)
 802ddb4:	018200f4 	movhi	r6,2051
 802ddb8:	31b80004 	addi	r6,r6,-8192
 802ddbc:	180b883a 	mov	r5,r3
 802ddc0:	1009883a 	mov	r4,r2
 802ddc4:	802e6380 	call	802e638 <alt_alarm_start>
 802ddc8:	1000040e 	bge	r2,zero,802dddc <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
 802ddcc:	e0fffd17 	ldw	r3,-12(fp)
 802ddd0:	00a00034 	movhi	r2,32768
 802ddd4:	10bfffc4 	addi	r2,r2,-1
 802ddd8:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
 802dddc:	0001883a 	nop
 802dde0:	e037883a 	mov	sp,fp
 802dde4:	dfc00117 	ldw	ra,4(sp)
 802dde8:	df000017 	ldw	fp,0(sp)
 802ddec:	dec00204 	addi	sp,sp,8
 802ddf0:	f800283a 	ret

0802ddf4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
 802ddf4:	defff804 	addi	sp,sp,-32
 802ddf8:	df000715 	stw	fp,28(sp)
 802ddfc:	df000704 	addi	fp,sp,28
 802de00:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
 802de04:	e0bfff17 	ldw	r2,-4(fp)
 802de08:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
 802de0c:	e0bffb17 	ldw	r2,-20(fp)
 802de10:	10800017 	ldw	r2,0(r2)
 802de14:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 802de18:	e0bffc17 	ldw	r2,-16(fp)
 802de1c:	10800104 	addi	r2,r2,4
 802de20:	10800037 	ldwio	r2,0(r2)
 802de24:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
 802de28:	e0bffd17 	ldw	r2,-12(fp)
 802de2c:	1080c00c 	andi	r2,r2,768
 802de30:	10006d26 	beq	r2,zero,802dfe8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
 802de34:	e0bffd17 	ldw	r2,-12(fp)
 802de38:	1080400c 	andi	r2,r2,256
 802de3c:	10003526 	beq	r2,zero,802df14 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
 802de40:	00800074 	movhi	r2,1
 802de44:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 802de48:	e0bffb17 	ldw	r2,-20(fp)
 802de4c:	10800a17 	ldw	r2,40(r2)
 802de50:	10800044 	addi	r2,r2,1
 802de54:	1081ffcc 	andi	r2,r2,2047
 802de58:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
 802de5c:	e0bffb17 	ldw	r2,-20(fp)
 802de60:	10c00b17 	ldw	r3,44(r2)
 802de64:	e0bffe17 	ldw	r2,-8(fp)
 802de68:	18801526 	beq	r3,r2,802dec0 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
 802de6c:	e0bffc17 	ldw	r2,-16(fp)
 802de70:	10800037 	ldwio	r2,0(r2)
 802de74:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
 802de78:	e0bff917 	ldw	r2,-28(fp)
 802de7c:	10a0000c 	andi	r2,r2,32768
 802de80:	10001126 	beq	r2,zero,802dec8 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
 802de84:	e0bffb17 	ldw	r2,-20(fp)
 802de88:	10800a17 	ldw	r2,40(r2)
 802de8c:	e0fff917 	ldw	r3,-28(fp)
 802de90:	1809883a 	mov	r4,r3
 802de94:	e0fffb17 	ldw	r3,-20(fp)
 802de98:	1885883a 	add	r2,r3,r2
 802de9c:	10800e04 	addi	r2,r2,56
 802dea0:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 802dea4:	e0bffb17 	ldw	r2,-20(fp)
 802dea8:	10800a17 	ldw	r2,40(r2)
 802deac:	10800044 	addi	r2,r2,1
 802deb0:	10c1ffcc 	andi	r3,r2,2047
 802deb4:	e0bffb17 	ldw	r2,-20(fp)
 802deb8:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
 802debc:	003fe206 	br	802de48 <__flash_rwdata_start+0xffffe32c>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
 802dec0:	0001883a 	nop
 802dec4:	00000106 	br	802decc <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
 802dec8:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
 802decc:	e0bff917 	ldw	r2,-28(fp)
 802ded0:	10bfffec 	andhi	r2,r2,65535
 802ded4:	10000f26 	beq	r2,zero,802df14 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 802ded8:	e0bffb17 	ldw	r2,-20(fp)
 802dedc:	10c00817 	ldw	r3,32(r2)
 802dee0:	00bfff84 	movi	r2,-2
 802dee4:	1886703a 	and	r3,r3,r2
 802dee8:	e0bffb17 	ldw	r2,-20(fp)
 802deec:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
 802def0:	e0bffc17 	ldw	r2,-16(fp)
 802def4:	10800104 	addi	r2,r2,4
 802def8:	1007883a 	mov	r3,r2
 802defc:	e0bffb17 	ldw	r2,-20(fp)
 802df00:	10800817 	ldw	r2,32(r2)
 802df04:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 802df08:	e0bffc17 	ldw	r2,-16(fp)
 802df0c:	10800104 	addi	r2,r2,4
 802df10:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
 802df14:	e0bffd17 	ldw	r2,-12(fp)
 802df18:	1080800c 	andi	r2,r2,512
 802df1c:	103fbe26 	beq	r2,zero,802de18 <__flash_rwdata_start+0xffffe2fc>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
 802df20:	e0bffd17 	ldw	r2,-12(fp)
 802df24:	1004d43a 	srli	r2,r2,16
 802df28:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
 802df2c:	00001406 	br	802df80 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
 802df30:	e0bffc17 	ldw	r2,-16(fp)
 802df34:	e0fffb17 	ldw	r3,-20(fp)
 802df38:	18c00d17 	ldw	r3,52(r3)
 802df3c:	e13ffb17 	ldw	r4,-20(fp)
 802df40:	20c7883a 	add	r3,r4,r3
 802df44:	18c20e04 	addi	r3,r3,2104
 802df48:	18c00003 	ldbu	r3,0(r3)
 802df4c:	18c03fcc 	andi	r3,r3,255
 802df50:	18c0201c 	xori	r3,r3,128
 802df54:	18ffe004 	addi	r3,r3,-128
 802df58:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 802df5c:	e0bffb17 	ldw	r2,-20(fp)
 802df60:	10800d17 	ldw	r2,52(r2)
 802df64:	10800044 	addi	r2,r2,1
 802df68:	10c1ffcc 	andi	r3,r2,2047
 802df6c:	e0bffb17 	ldw	r2,-20(fp)
 802df70:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
 802df74:	e0bffa17 	ldw	r2,-24(fp)
 802df78:	10bfffc4 	addi	r2,r2,-1
 802df7c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
 802df80:	e0bffa17 	ldw	r2,-24(fp)
 802df84:	10000526 	beq	r2,zero,802df9c <altera_avalon_jtag_uart_irq+0x1a8>
 802df88:	e0bffb17 	ldw	r2,-20(fp)
 802df8c:	10c00d17 	ldw	r3,52(r2)
 802df90:	e0bffb17 	ldw	r2,-20(fp)
 802df94:	10800c17 	ldw	r2,48(r2)
 802df98:	18bfe51e 	bne	r3,r2,802df30 <__flash_rwdata_start+0xffffe414>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
 802df9c:	e0bffa17 	ldw	r2,-24(fp)
 802dfa0:	103f9d26 	beq	r2,zero,802de18 <__flash_rwdata_start+0xffffe2fc>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 802dfa4:	e0bffb17 	ldw	r2,-20(fp)
 802dfa8:	10c00817 	ldw	r3,32(r2)
 802dfac:	00bfff44 	movi	r2,-3
 802dfb0:	1886703a 	and	r3,r3,r2
 802dfb4:	e0bffb17 	ldw	r2,-20(fp)
 802dfb8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 802dfbc:	e0bffb17 	ldw	r2,-20(fp)
 802dfc0:	10800017 	ldw	r2,0(r2)
 802dfc4:	10800104 	addi	r2,r2,4
 802dfc8:	1007883a 	mov	r3,r2
 802dfcc:	e0bffb17 	ldw	r2,-20(fp)
 802dfd0:	10800817 	ldw	r2,32(r2)
 802dfd4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
 802dfd8:	e0bffc17 	ldw	r2,-16(fp)
 802dfdc:	10800104 	addi	r2,r2,4
 802dfe0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
 802dfe4:	003f8c06 	br	802de18 <__flash_rwdata_start+0xffffe2fc>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
 802dfe8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
 802dfec:	0001883a 	nop
 802dff0:	e037883a 	mov	sp,fp
 802dff4:	df000017 	ldw	fp,0(sp)
 802dff8:	dec00104 	addi	sp,sp,4
 802dffc:	f800283a 	ret

0802e000 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
 802e000:	defff804 	addi	sp,sp,-32
 802e004:	df000715 	stw	fp,28(sp)
 802e008:	df000704 	addi	fp,sp,28
 802e00c:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
 802e010:	e0bffb17 	ldw	r2,-20(fp)
 802e014:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
 802e018:	e0bff917 	ldw	r2,-28(fp)
 802e01c:	10800017 	ldw	r2,0(r2)
 802e020:	10800104 	addi	r2,r2,4
 802e024:	10800037 	ldwio	r2,0(r2)
 802e028:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
 802e02c:	e0bffa17 	ldw	r2,-24(fp)
 802e030:	1081000c 	andi	r2,r2,1024
 802e034:	10000b26 	beq	r2,zero,802e064 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
 802e038:	e0bff917 	ldw	r2,-28(fp)
 802e03c:	10800017 	ldw	r2,0(r2)
 802e040:	10800104 	addi	r2,r2,4
 802e044:	1007883a 	mov	r3,r2
 802e048:	e0bff917 	ldw	r2,-28(fp)
 802e04c:	10800817 	ldw	r2,32(r2)
 802e050:	10810014 	ori	r2,r2,1024
 802e054:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
 802e058:	e0bff917 	ldw	r2,-28(fp)
 802e05c:	10000915 	stw	zero,36(r2)
 802e060:	00000a06 	br	802e08c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
 802e064:	e0bff917 	ldw	r2,-28(fp)
 802e068:	10c00917 	ldw	r3,36(r2)
 802e06c:	00a00034 	movhi	r2,32768
 802e070:	10bfff04 	addi	r2,r2,-4
 802e074:	10c00536 	bltu	r2,r3,802e08c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
 802e078:	e0bff917 	ldw	r2,-28(fp)
 802e07c:	10800917 	ldw	r2,36(r2)
 802e080:	10c00044 	addi	r3,r2,1
 802e084:	e0bff917 	ldw	r2,-28(fp)
 802e088:	10c00915 	stw	r3,36(r2)
 802e08c:	d0a01b17 	ldw	r2,-32660(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
 802e090:	e037883a 	mov	sp,fp
 802e094:	df000017 	ldw	fp,0(sp)
 802e098:	dec00104 	addi	sp,sp,4
 802e09c:	f800283a 	ret

0802e0a0 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
 802e0a0:	defffd04 	addi	sp,sp,-12
 802e0a4:	df000215 	stw	fp,8(sp)
 802e0a8:	df000204 	addi	fp,sp,8
 802e0ac:	e13ffe15 	stw	r4,-8(fp)
 802e0b0:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 802e0b4:	00000506 	br	802e0cc <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
 802e0b8:	e0bfff17 	ldw	r2,-4(fp)
 802e0bc:	1090000c 	andi	r2,r2,16384
 802e0c0:	10000226 	beq	r2,zero,802e0cc <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
 802e0c4:	00bffd44 	movi	r2,-11
 802e0c8:	00000b06 	br	802e0f8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
 802e0cc:	e0bffe17 	ldw	r2,-8(fp)
 802e0d0:	10c00d17 	ldw	r3,52(r2)
 802e0d4:	e0bffe17 	ldw	r2,-8(fp)
 802e0d8:	10800c17 	ldw	r2,48(r2)
 802e0dc:	18800526 	beq	r3,r2,802e0f4 <altera_avalon_jtag_uart_close+0x54>
 802e0e0:	e0bffe17 	ldw	r2,-8(fp)
 802e0e4:	10c00917 	ldw	r3,36(r2)
 802e0e8:	e0bffe17 	ldw	r2,-8(fp)
 802e0ec:	10800117 	ldw	r2,4(r2)
 802e0f0:	18bff136 	bltu	r3,r2,802e0b8 <__flash_rwdata_start+0xffffe59c>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
 802e0f4:	0005883a 	mov	r2,zero
}
 802e0f8:	e037883a 	mov	sp,fp
 802e0fc:	df000017 	ldw	fp,0(sp)
 802e100:	dec00104 	addi	sp,sp,4
 802e104:	f800283a 	ret

0802e108 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
 802e108:	defffa04 	addi	sp,sp,-24
 802e10c:	df000515 	stw	fp,20(sp)
 802e110:	df000504 	addi	fp,sp,20
 802e114:	e13ffd15 	stw	r4,-12(fp)
 802e118:	e17ffe15 	stw	r5,-8(fp)
 802e11c:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
 802e120:	00bff9c4 	movi	r2,-25
 802e124:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
 802e128:	e0bffe17 	ldw	r2,-8(fp)
 802e12c:	10da8060 	cmpeqi	r3,r2,27137
 802e130:	1800031e 	bne	r3,zero,802e140 <altera_avalon_jtag_uart_ioctl+0x38>
 802e134:	109a80a0 	cmpeqi	r2,r2,27138
 802e138:	1000181e 	bne	r2,zero,802e19c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
 802e13c:	00002906 	br	802e1e4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
 802e140:	e0bffd17 	ldw	r2,-12(fp)
 802e144:	10c00117 	ldw	r3,4(r2)
 802e148:	00a00034 	movhi	r2,32768
 802e14c:	10bfffc4 	addi	r2,r2,-1
 802e150:	18802126 	beq	r3,r2,802e1d8 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
 802e154:	e0bfff17 	ldw	r2,-4(fp)
 802e158:	10800017 	ldw	r2,0(r2)
 802e15c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
 802e160:	e0bffc17 	ldw	r2,-16(fp)
 802e164:	10800090 	cmplti	r2,r2,2
 802e168:	1000061e 	bne	r2,zero,802e184 <altera_avalon_jtag_uart_ioctl+0x7c>
 802e16c:	e0fffc17 	ldw	r3,-16(fp)
 802e170:	00a00034 	movhi	r2,32768
 802e174:	10bfffc4 	addi	r2,r2,-1
 802e178:	18800226 	beq	r3,r2,802e184 <altera_avalon_jtag_uart_ioctl+0x7c>
 802e17c:	e0bffc17 	ldw	r2,-16(fp)
 802e180:	00000206 	br	802e18c <altera_avalon_jtag_uart_ioctl+0x84>
 802e184:	00a00034 	movhi	r2,32768
 802e188:	10bfff84 	addi	r2,r2,-2
 802e18c:	e0fffd17 	ldw	r3,-12(fp)
 802e190:	18800115 	stw	r2,4(r3)
      rc = 0;
 802e194:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 802e198:	00000f06 	br	802e1d8 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
 802e19c:	e0bffd17 	ldw	r2,-12(fp)
 802e1a0:	10c00117 	ldw	r3,4(r2)
 802e1a4:	00a00034 	movhi	r2,32768
 802e1a8:	10bfffc4 	addi	r2,r2,-1
 802e1ac:	18800c26 	beq	r3,r2,802e1e0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
 802e1b0:	e0bffd17 	ldw	r2,-12(fp)
 802e1b4:	10c00917 	ldw	r3,36(r2)
 802e1b8:	e0bffd17 	ldw	r2,-12(fp)
 802e1bc:	10800117 	ldw	r2,4(r2)
 802e1c0:	1885803a 	cmpltu	r2,r3,r2
 802e1c4:	10c03fcc 	andi	r3,r2,255
 802e1c8:	e0bfff17 	ldw	r2,-4(fp)
 802e1cc:	10c00015 	stw	r3,0(r2)
      rc = 0;
 802e1d0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
 802e1d4:	00000206 	br	802e1e0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
 802e1d8:	0001883a 	nop
 802e1dc:	00000106 	br	802e1e4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
 802e1e0:	0001883a 	nop

  default:
    break;
  }

  return rc;
 802e1e4:	e0bffb17 	ldw	r2,-20(fp)
}
 802e1e8:	e037883a 	mov	sp,fp
 802e1ec:	df000017 	ldw	fp,0(sp)
 802e1f0:	dec00104 	addi	sp,sp,4
 802e1f4:	f800283a 	ret

0802e1f8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
 802e1f8:	defff304 	addi	sp,sp,-52
 802e1fc:	dfc00c15 	stw	ra,48(sp)
 802e200:	df000b15 	stw	fp,44(sp)
 802e204:	df000b04 	addi	fp,sp,44
 802e208:	e13ffc15 	stw	r4,-16(fp)
 802e20c:	e17ffd15 	stw	r5,-12(fp)
 802e210:	e1bffe15 	stw	r6,-8(fp)
 802e214:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
 802e218:	e0bffd17 	ldw	r2,-12(fp)
 802e21c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 802e220:	00004706 	br	802e340 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
 802e224:	e0bffc17 	ldw	r2,-16(fp)
 802e228:	10800a17 	ldw	r2,40(r2)
 802e22c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
 802e230:	e0bffc17 	ldw	r2,-16(fp)
 802e234:	10800b17 	ldw	r2,44(r2)
 802e238:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
 802e23c:	e0fff717 	ldw	r3,-36(fp)
 802e240:	e0bff817 	ldw	r2,-32(fp)
 802e244:	18800536 	bltu	r3,r2,802e25c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
 802e248:	e0fff717 	ldw	r3,-36(fp)
 802e24c:	e0bff817 	ldw	r2,-32(fp)
 802e250:	1885c83a 	sub	r2,r3,r2
 802e254:	e0bff615 	stw	r2,-40(fp)
 802e258:	00000406 	br	802e26c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
 802e25c:	00c20004 	movi	r3,2048
 802e260:	e0bff817 	ldw	r2,-32(fp)
 802e264:	1885c83a 	sub	r2,r3,r2
 802e268:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 802e26c:	e0bff617 	ldw	r2,-40(fp)
 802e270:	10001e26 	beq	r2,zero,802e2ec <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
 802e274:	e0fffe17 	ldw	r3,-8(fp)
 802e278:	e0bff617 	ldw	r2,-40(fp)
 802e27c:	1880022e 	bgeu	r3,r2,802e288 <altera_avalon_jtag_uart_read+0x90>
        n = space;
 802e280:	e0bffe17 	ldw	r2,-8(fp)
 802e284:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
 802e288:	e0bffc17 	ldw	r2,-16(fp)
 802e28c:	10c00e04 	addi	r3,r2,56
 802e290:	e0bff817 	ldw	r2,-32(fp)
 802e294:	1885883a 	add	r2,r3,r2
 802e298:	e1bff617 	ldw	r6,-40(fp)
 802e29c:	100b883a 	mov	r5,r2
 802e2a0:	e13ff517 	ldw	r4,-44(fp)
 802e2a4:	80258dc0 	call	80258dc <memcpy>
      ptr   += n;
 802e2a8:	e0fff517 	ldw	r3,-44(fp)
 802e2ac:	e0bff617 	ldw	r2,-40(fp)
 802e2b0:	1885883a 	add	r2,r3,r2
 802e2b4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
 802e2b8:	e0fffe17 	ldw	r3,-8(fp)
 802e2bc:	e0bff617 	ldw	r2,-40(fp)
 802e2c0:	1885c83a 	sub	r2,r3,r2
 802e2c4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 802e2c8:	e0fff817 	ldw	r3,-32(fp)
 802e2cc:	e0bff617 	ldw	r2,-40(fp)
 802e2d0:	1885883a 	add	r2,r3,r2
 802e2d4:	10c1ffcc 	andi	r3,r2,2047
 802e2d8:	e0bffc17 	ldw	r2,-16(fp)
 802e2dc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
 802e2e0:	e0bffe17 	ldw	r2,-8(fp)
 802e2e4:	00bfcf16 	blt	zero,r2,802e224 <__flash_rwdata_start+0xffffe708>
 802e2e8:	00000106 	br	802e2f0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
 802e2ec:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
 802e2f0:	e0fff517 	ldw	r3,-44(fp)
 802e2f4:	e0bffd17 	ldw	r2,-12(fp)
 802e2f8:	1880141e 	bne	r3,r2,802e34c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
 802e2fc:	e0bfff17 	ldw	r2,-4(fp)
 802e300:	1090000c 	andi	r2,r2,16384
 802e304:	1000131e 	bne	r2,zero,802e354 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
 802e308:	0001883a 	nop
 802e30c:	e0bffc17 	ldw	r2,-16(fp)
 802e310:	10c00a17 	ldw	r3,40(r2)
 802e314:	e0bff717 	ldw	r2,-36(fp)
 802e318:	1880051e 	bne	r3,r2,802e330 <altera_avalon_jtag_uart_read+0x138>
 802e31c:	e0bffc17 	ldw	r2,-16(fp)
 802e320:	10c00917 	ldw	r3,36(r2)
 802e324:	e0bffc17 	ldw	r2,-16(fp)
 802e328:	10800117 	ldw	r2,4(r2)
 802e32c:	18bff736 	bltu	r3,r2,802e30c <__flash_rwdata_start+0xffffe7f0>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
 802e330:	e0bffc17 	ldw	r2,-16(fp)
 802e334:	10c00a17 	ldw	r3,40(r2)
 802e338:	e0bff717 	ldw	r2,-36(fp)
 802e33c:	18800726 	beq	r3,r2,802e35c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
 802e340:	e0bffe17 	ldw	r2,-8(fp)
 802e344:	00bfb716 	blt	zero,r2,802e224 <__flash_rwdata_start+0xffffe708>
 802e348:	00000506 	br	802e360 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
 802e34c:	0001883a 	nop
 802e350:	00000306 	br	802e360 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
 802e354:	0001883a 	nop
 802e358:	00000106 	br	802e360 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
 802e35c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
 802e360:	e0fff517 	ldw	r3,-44(fp)
 802e364:	e0bffd17 	ldw	r2,-12(fp)
 802e368:	18801826 	beq	r3,r2,802e3cc <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802e36c:	0005303a 	rdctl	r2,status
 802e370:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802e374:	e0fffb17 	ldw	r3,-20(fp)
 802e378:	00bfff84 	movi	r2,-2
 802e37c:	1884703a 	and	r2,r3,r2
 802e380:	1001703a 	wrctl	status,r2
  
  return context;
 802e384:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
 802e388:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
 802e38c:	e0bffc17 	ldw	r2,-16(fp)
 802e390:	10800817 	ldw	r2,32(r2)
 802e394:	10c00054 	ori	r3,r2,1
 802e398:	e0bffc17 	ldw	r2,-16(fp)
 802e39c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 802e3a0:	e0bffc17 	ldw	r2,-16(fp)
 802e3a4:	10800017 	ldw	r2,0(r2)
 802e3a8:	10800104 	addi	r2,r2,4
 802e3ac:	1007883a 	mov	r3,r2
 802e3b0:	e0bffc17 	ldw	r2,-16(fp)
 802e3b4:	10800817 	ldw	r2,32(r2)
 802e3b8:	18800035 	stwio	r2,0(r3)
 802e3bc:	e0bffa17 	ldw	r2,-24(fp)
 802e3c0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802e3c4:	e0bff917 	ldw	r2,-28(fp)
 802e3c8:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
 802e3cc:	e0fff517 	ldw	r3,-44(fp)
 802e3d0:	e0bffd17 	ldw	r2,-12(fp)
 802e3d4:	18800426 	beq	r3,r2,802e3e8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
 802e3d8:	e0fff517 	ldw	r3,-44(fp)
 802e3dc:	e0bffd17 	ldw	r2,-12(fp)
 802e3e0:	1885c83a 	sub	r2,r3,r2
 802e3e4:	00000606 	br	802e400 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
 802e3e8:	e0bfff17 	ldw	r2,-4(fp)
 802e3ec:	1090000c 	andi	r2,r2,16384
 802e3f0:	10000226 	beq	r2,zero,802e3fc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
 802e3f4:	00bffd44 	movi	r2,-11
 802e3f8:	00000106 	br	802e400 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
 802e3fc:	00bffec4 	movi	r2,-5
}
 802e400:	e037883a 	mov	sp,fp
 802e404:	dfc00117 	ldw	ra,4(sp)
 802e408:	df000017 	ldw	fp,0(sp)
 802e40c:	dec00204 	addi	sp,sp,8
 802e410:	f800283a 	ret

0802e414 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
 802e414:	defff304 	addi	sp,sp,-52
 802e418:	dfc00c15 	stw	ra,48(sp)
 802e41c:	df000b15 	stw	fp,44(sp)
 802e420:	df000b04 	addi	fp,sp,44
 802e424:	e13ffc15 	stw	r4,-16(fp)
 802e428:	e17ffd15 	stw	r5,-12(fp)
 802e42c:	e1bffe15 	stw	r6,-8(fp)
 802e430:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
 802e434:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
 802e438:	e0bffd17 	ldw	r2,-12(fp)
 802e43c:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 802e440:	00003706 	br	802e520 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
 802e444:	e0bffc17 	ldw	r2,-16(fp)
 802e448:	10800c17 	ldw	r2,48(r2)
 802e44c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
 802e450:	e0bffc17 	ldw	r2,-16(fp)
 802e454:	10800d17 	ldw	r2,52(r2)
 802e458:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
 802e45c:	e0fff917 	ldw	r3,-28(fp)
 802e460:	e0bff517 	ldw	r2,-44(fp)
 802e464:	1880062e 	bgeu	r3,r2,802e480 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
 802e468:	e0fff517 	ldw	r3,-44(fp)
 802e46c:	e0bff917 	ldw	r2,-28(fp)
 802e470:	1885c83a 	sub	r2,r3,r2
 802e474:	10bfffc4 	addi	r2,r2,-1
 802e478:	e0bff615 	stw	r2,-40(fp)
 802e47c:	00000b06 	br	802e4ac <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
 802e480:	e0bff517 	ldw	r2,-44(fp)
 802e484:	10000526 	beq	r2,zero,802e49c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
 802e488:	00c20004 	movi	r3,2048
 802e48c:	e0bff917 	ldw	r2,-28(fp)
 802e490:	1885c83a 	sub	r2,r3,r2
 802e494:	e0bff615 	stw	r2,-40(fp)
 802e498:	00000406 	br	802e4ac <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
 802e49c:	00c1ffc4 	movi	r3,2047
 802e4a0:	e0bff917 	ldw	r2,-28(fp)
 802e4a4:	1885c83a 	sub	r2,r3,r2
 802e4a8:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
 802e4ac:	e0bff617 	ldw	r2,-40(fp)
 802e4b0:	10001e26 	beq	r2,zero,802e52c <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
 802e4b4:	e0fffe17 	ldw	r3,-8(fp)
 802e4b8:	e0bff617 	ldw	r2,-40(fp)
 802e4bc:	1880022e 	bgeu	r3,r2,802e4c8 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
 802e4c0:	e0bffe17 	ldw	r2,-8(fp)
 802e4c4:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
 802e4c8:	e0bffc17 	ldw	r2,-16(fp)
 802e4cc:	10c20e04 	addi	r3,r2,2104
 802e4d0:	e0bff917 	ldw	r2,-28(fp)
 802e4d4:	1885883a 	add	r2,r3,r2
 802e4d8:	e1bff617 	ldw	r6,-40(fp)
 802e4dc:	e17ffd17 	ldw	r5,-12(fp)
 802e4e0:	1009883a 	mov	r4,r2
 802e4e4:	80258dc0 	call	80258dc <memcpy>
      ptr   += n;
 802e4e8:	e0fffd17 	ldw	r3,-12(fp)
 802e4ec:	e0bff617 	ldw	r2,-40(fp)
 802e4f0:	1885883a 	add	r2,r3,r2
 802e4f4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
 802e4f8:	e0fffe17 	ldw	r3,-8(fp)
 802e4fc:	e0bff617 	ldw	r2,-40(fp)
 802e500:	1885c83a 	sub	r2,r3,r2
 802e504:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
 802e508:	e0fff917 	ldw	r3,-28(fp)
 802e50c:	e0bff617 	ldw	r2,-40(fp)
 802e510:	1885883a 	add	r2,r3,r2
 802e514:	10c1ffcc 	andi	r3,r2,2047
 802e518:	e0bffc17 	ldw	r2,-16(fp)
 802e51c:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
 802e520:	e0bffe17 	ldw	r2,-8(fp)
 802e524:	00bfc716 	blt	zero,r2,802e444 <__flash_rwdata_start+0xffffe928>
 802e528:	00000106 	br	802e530 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
 802e52c:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802e530:	0005303a 	rdctl	r2,status
 802e534:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802e538:	e0fffb17 	ldw	r3,-20(fp)
 802e53c:	00bfff84 	movi	r2,-2
 802e540:	1884703a 	and	r2,r3,r2
 802e544:	1001703a 	wrctl	status,r2
  
  return context;
 802e548:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
 802e54c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
 802e550:	e0bffc17 	ldw	r2,-16(fp)
 802e554:	10800817 	ldw	r2,32(r2)
 802e558:	10c00094 	ori	r3,r2,2
 802e55c:	e0bffc17 	ldw	r2,-16(fp)
 802e560:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
 802e564:	e0bffc17 	ldw	r2,-16(fp)
 802e568:	10800017 	ldw	r2,0(r2)
 802e56c:	10800104 	addi	r2,r2,4
 802e570:	1007883a 	mov	r3,r2
 802e574:	e0bffc17 	ldw	r2,-16(fp)
 802e578:	10800817 	ldw	r2,32(r2)
 802e57c:	18800035 	stwio	r2,0(r3)
 802e580:	e0bffa17 	ldw	r2,-24(fp)
 802e584:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802e588:	e0bff817 	ldw	r2,-32(fp)
 802e58c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
 802e590:	e0bffe17 	ldw	r2,-8(fp)
 802e594:	0080100e 	bge	zero,r2,802e5d8 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
 802e598:	e0bfff17 	ldw	r2,-4(fp)
 802e59c:	1090000c 	andi	r2,r2,16384
 802e5a0:	1000101e 	bne	r2,zero,802e5e4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
 802e5a4:	0001883a 	nop
 802e5a8:	e0bffc17 	ldw	r2,-16(fp)
 802e5ac:	10c00d17 	ldw	r3,52(r2)
 802e5b0:	e0bff517 	ldw	r2,-44(fp)
 802e5b4:	1880051e 	bne	r3,r2,802e5cc <altera_avalon_jtag_uart_write+0x1b8>
 802e5b8:	e0bffc17 	ldw	r2,-16(fp)
 802e5bc:	10c00917 	ldw	r3,36(r2)
 802e5c0:	e0bffc17 	ldw	r2,-16(fp)
 802e5c4:	10800117 	ldw	r2,4(r2)
 802e5c8:	18bff736 	bltu	r3,r2,802e5a8 <__flash_rwdata_start+0xffffea8c>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
 802e5cc:	e0bffc17 	ldw	r2,-16(fp)
 802e5d0:	10800917 	ldw	r2,36(r2)
 802e5d4:	1000051e 	bne	r2,zero,802e5ec <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
 802e5d8:	e0bffe17 	ldw	r2,-8(fp)
 802e5dc:	00bfd016 	blt	zero,r2,802e520 <__flash_rwdata_start+0xffffea04>
 802e5e0:	00000306 	br	802e5f0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
 802e5e4:	0001883a 	nop
 802e5e8:	00000106 	br	802e5f0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
 802e5ec:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
 802e5f0:	e0fffd17 	ldw	r3,-12(fp)
 802e5f4:	e0bff717 	ldw	r2,-36(fp)
 802e5f8:	18800426 	beq	r3,r2,802e60c <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
 802e5fc:	e0fffd17 	ldw	r3,-12(fp)
 802e600:	e0bff717 	ldw	r2,-36(fp)
 802e604:	1885c83a 	sub	r2,r3,r2
 802e608:	00000606 	br	802e624 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
 802e60c:	e0bfff17 	ldw	r2,-4(fp)
 802e610:	1090000c 	andi	r2,r2,16384
 802e614:	10000226 	beq	r2,zero,802e620 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
 802e618:	00bffd44 	movi	r2,-11
 802e61c:	00000106 	br	802e624 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
 802e620:	00bffec4 	movi	r2,-5
}
 802e624:	e037883a 	mov	sp,fp
 802e628:	dfc00117 	ldw	ra,4(sp)
 802e62c:	df000017 	ldw	fp,0(sp)
 802e630:	dec00204 	addi	sp,sp,8
 802e634:	f800283a 	ret

0802e638 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
 802e638:	defff504 	addi	sp,sp,-44
 802e63c:	df000a15 	stw	fp,40(sp)
 802e640:	df000a04 	addi	fp,sp,40
 802e644:	e13ffc15 	stw	r4,-16(fp)
 802e648:	e17ffd15 	stw	r5,-12(fp)
 802e64c:	e1bffe15 	stw	r6,-8(fp)
 802e650:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
 802e654:	e03ff615 	stw	zero,-40(fp)
 802e658:	d0a01b17 	ldw	r2,-32660(gp)
  
  if (alt_ticks_per_second ())
 802e65c:	10003c26 	beq	r2,zero,802e750 <alt_alarm_start+0x118>
  {
    if (alarm)
 802e660:	e0bffc17 	ldw	r2,-16(fp)
 802e664:	10003826 	beq	r2,zero,802e748 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
 802e668:	e0bffc17 	ldw	r2,-16(fp)
 802e66c:	e0fffe17 	ldw	r3,-8(fp)
 802e670:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
 802e674:	e0bffc17 	ldw	r2,-16(fp)
 802e678:	e0ffff17 	ldw	r3,-4(fp)
 802e67c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802e680:	0005303a 	rdctl	r2,status
 802e684:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802e688:	e0fff917 	ldw	r3,-28(fp)
 802e68c:	00bfff84 	movi	r2,-2
 802e690:	1884703a 	and	r2,r3,r2
 802e694:	1001703a 	wrctl	status,r2
  
  return context;
 802e698:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
 802e69c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
 802e6a0:	d0a01c17 	ldw	r2,-32656(gp)
      
      current_nticks = alt_nticks();
 802e6a4:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
 802e6a8:	e0fffd17 	ldw	r3,-12(fp)
 802e6ac:	e0bff617 	ldw	r2,-40(fp)
 802e6b0:	1885883a 	add	r2,r3,r2
 802e6b4:	10c00044 	addi	r3,r2,1
 802e6b8:	e0bffc17 	ldw	r2,-16(fp)
 802e6bc:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
 802e6c0:	e0bffc17 	ldw	r2,-16(fp)
 802e6c4:	10c00217 	ldw	r3,8(r2)
 802e6c8:	e0bff617 	ldw	r2,-40(fp)
 802e6cc:	1880042e 	bgeu	r3,r2,802e6e0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
 802e6d0:	e0bffc17 	ldw	r2,-16(fp)
 802e6d4:	00c00044 	movi	r3,1
 802e6d8:	10c00405 	stb	r3,16(r2)
 802e6dc:	00000206 	br	802e6e8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
 802e6e0:	e0bffc17 	ldw	r2,-16(fp)
 802e6e4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
 802e6e8:	e0bffc17 	ldw	r2,-16(fp)
 802e6ec:	d0e00e04 	addi	r3,gp,-32712
 802e6f0:	e0fffa15 	stw	r3,-24(fp)
 802e6f4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 802e6f8:	e0bffb17 	ldw	r2,-20(fp)
 802e6fc:	e0fffa17 	ldw	r3,-24(fp)
 802e700:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 802e704:	e0bffa17 	ldw	r2,-24(fp)
 802e708:	10c00017 	ldw	r3,0(r2)
 802e70c:	e0bffb17 	ldw	r2,-20(fp)
 802e710:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 802e714:	e0bffa17 	ldw	r2,-24(fp)
 802e718:	10800017 	ldw	r2,0(r2)
 802e71c:	e0fffb17 	ldw	r3,-20(fp)
 802e720:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 802e724:	e0bffa17 	ldw	r2,-24(fp)
 802e728:	e0fffb17 	ldw	r3,-20(fp)
 802e72c:	10c00015 	stw	r3,0(r2)
 802e730:	e0bff817 	ldw	r2,-32(fp)
 802e734:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802e738:	e0bff717 	ldw	r2,-36(fp)
 802e73c:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
 802e740:	0005883a 	mov	r2,zero
 802e744:	00000306 	br	802e754 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
 802e748:	00bffa84 	movi	r2,-22
 802e74c:	00000106 	br	802e754 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
 802e750:	00bfde84 	movi	r2,-134
  }
}
 802e754:	e037883a 	mov	sp,fp
 802e758:	df000017 	ldw	fp,0(sp)
 802e75c:	dec00104 	addi	sp,sp,4
 802e760:	f800283a 	ret

0802e764 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
 802e764:	deffff04 	addi	sp,sp,-4
 802e768:	df000015 	stw	fp,0(sp)
 802e76c:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
 802e770:	0001883a 	nop
 802e774:	e037883a 	mov	sp,fp
 802e778:	df000017 	ldw	fp,0(sp)
 802e77c:	dec00104 	addi	sp,sp,4
 802e780:	f800283a 	ret

0802e784 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802e784:	defffe04 	addi	sp,sp,-8
 802e788:	dfc00115 	stw	ra,4(sp)
 802e78c:	df000015 	stw	fp,0(sp)
 802e790:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802e794:	d0a00b17 	ldw	r2,-32724(gp)
 802e798:	10000326 	beq	r2,zero,802e7a8 <alt_get_errno+0x24>
 802e79c:	d0a00b17 	ldw	r2,-32724(gp)
 802e7a0:	103ee83a 	callr	r2
 802e7a4:	00000106 	br	802e7ac <alt_get_errno+0x28>
 802e7a8:	d0a01604 	addi	r2,gp,-32680
}
 802e7ac:	e037883a 	mov	sp,fp
 802e7b0:	dfc00117 	ldw	ra,4(sp)
 802e7b4:	df000017 	ldw	fp,0(sp)
 802e7b8:	dec00204 	addi	sp,sp,8
 802e7bc:	f800283a 	ret

0802e7c0 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
 802e7c0:	defffa04 	addi	sp,sp,-24
 802e7c4:	dfc00515 	stw	ra,20(sp)
 802e7c8:	df000415 	stw	fp,16(sp)
 802e7cc:	df000404 	addi	fp,sp,16
 802e7d0:	e13ffe15 	stw	r4,-8(fp)
 802e7d4:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
 802e7d8:	e0bffe17 	ldw	r2,-8(fp)
 802e7dc:	10000326 	beq	r2,zero,802e7ec <alt_dev_llist_insert+0x2c>
 802e7e0:	e0bffe17 	ldw	r2,-8(fp)
 802e7e4:	10800217 	ldw	r2,8(r2)
 802e7e8:	1000061e 	bne	r2,zero,802e804 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
 802e7ec:	802e7840 	call	802e784 <alt_get_errno>
 802e7f0:	1007883a 	mov	r3,r2
 802e7f4:	00800584 	movi	r2,22
 802e7f8:	18800015 	stw	r2,0(r3)
    return -EINVAL;
 802e7fc:	00bffa84 	movi	r2,-22
 802e800:	00001306 	br	802e850 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
 802e804:	e0bffe17 	ldw	r2,-8(fp)
 802e808:	e0ffff17 	ldw	r3,-4(fp)
 802e80c:	e0fffc15 	stw	r3,-16(fp)
 802e810:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
 802e814:	e0bffd17 	ldw	r2,-12(fp)
 802e818:	e0fffc17 	ldw	r3,-16(fp)
 802e81c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
 802e820:	e0bffc17 	ldw	r2,-16(fp)
 802e824:	10c00017 	ldw	r3,0(r2)
 802e828:	e0bffd17 	ldw	r2,-12(fp)
 802e82c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
 802e830:	e0bffc17 	ldw	r2,-16(fp)
 802e834:	10800017 	ldw	r2,0(r2)
 802e838:	e0fffd17 	ldw	r3,-12(fp)
 802e83c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
 802e840:	e0bffc17 	ldw	r2,-16(fp)
 802e844:	e0fffd17 	ldw	r3,-12(fp)
 802e848:	10c00015 	stw	r3,0(r2)

  return 0;  
 802e84c:	0005883a 	mov	r2,zero
}
 802e850:	e037883a 	mov	sp,fp
 802e854:	dfc00117 	ldw	ra,4(sp)
 802e858:	df000017 	ldw	fp,0(sp)
 802e85c:	dec00204 	addi	sp,sp,8
 802e860:	f800283a 	ret

0802e864 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
 802e864:	defffd04 	addi	sp,sp,-12
 802e868:	dfc00215 	stw	ra,8(sp)
 802e86c:	df000115 	stw	fp,4(sp)
 802e870:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 802e874:	008200f4 	movhi	r2,2051
 802e878:	10be0604 	addi	r2,r2,-2024
 802e87c:	e0bfff15 	stw	r2,-4(fp)
 802e880:	00000606 	br	802e89c <_do_ctors+0x38>
        (*ctor) (); 
 802e884:	e0bfff17 	ldw	r2,-4(fp)
 802e888:	10800017 	ldw	r2,0(r2)
 802e88c:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
 802e890:	e0bfff17 	ldw	r2,-4(fp)
 802e894:	10bfff04 	addi	r2,r2,-4
 802e898:	e0bfff15 	stw	r2,-4(fp)
 802e89c:	e0ffff17 	ldw	r3,-4(fp)
 802e8a0:	008200f4 	movhi	r2,2051
 802e8a4:	10be0704 	addi	r2,r2,-2020
 802e8a8:	18bff62e 	bgeu	r3,r2,802e884 <__flash_rwdata_start+0xffffed68>
        (*ctor) (); 
}
 802e8ac:	0001883a 	nop
 802e8b0:	e037883a 	mov	sp,fp
 802e8b4:	dfc00117 	ldw	ra,4(sp)
 802e8b8:	df000017 	ldw	fp,0(sp)
 802e8bc:	dec00204 	addi	sp,sp,8
 802e8c0:	f800283a 	ret

0802e8c4 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
 802e8c4:	defffd04 	addi	sp,sp,-12
 802e8c8:	dfc00215 	stw	ra,8(sp)
 802e8cc:	df000115 	stw	fp,4(sp)
 802e8d0:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 802e8d4:	008200f4 	movhi	r2,2051
 802e8d8:	10be0604 	addi	r2,r2,-2024
 802e8dc:	e0bfff15 	stw	r2,-4(fp)
 802e8e0:	00000606 	br	802e8fc <_do_dtors+0x38>
        (*dtor) (); 
 802e8e4:	e0bfff17 	ldw	r2,-4(fp)
 802e8e8:	10800017 	ldw	r2,0(r2)
 802e8ec:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
 802e8f0:	e0bfff17 	ldw	r2,-4(fp)
 802e8f4:	10bfff04 	addi	r2,r2,-4
 802e8f8:	e0bfff15 	stw	r2,-4(fp)
 802e8fc:	e0ffff17 	ldw	r3,-4(fp)
 802e900:	008200f4 	movhi	r2,2051
 802e904:	10be0704 	addi	r2,r2,-2020
 802e908:	18bff62e 	bgeu	r3,r2,802e8e4 <__flash_rwdata_start+0xffffedc8>
        (*dtor) (); 
}
 802e90c:	0001883a 	nop
 802e910:	e037883a 	mov	sp,fp
 802e914:	dfc00117 	ldw	ra,4(sp)
 802e918:	df000017 	ldw	fp,0(sp)
 802e91c:	dec00204 	addi	sp,sp,8
 802e920:	f800283a 	ret

0802e924 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
 802e924:	deffff04 	addi	sp,sp,-4
 802e928:	df000015 	stw	fp,0(sp)
 802e92c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
 802e930:	0001883a 	nop
 802e934:	e037883a 	mov	sp,fp
 802e938:	df000017 	ldw	fp,0(sp)
 802e93c:	dec00104 	addi	sp,sp,4
 802e940:	f800283a 	ret

0802e944 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 802e944:	defff904 	addi	sp,sp,-28
 802e948:	dfc00615 	stw	ra,24(sp)
 802e94c:	df000515 	stw	fp,20(sp)
 802e950:	df000504 	addi	fp,sp,20
 802e954:	e13ffc15 	stw	r4,-16(fp)
 802e958:	e17ffd15 	stw	r5,-12(fp)
 802e95c:	e1bffe15 	stw	r6,-8(fp)
 802e960:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
 802e964:	e0800217 	ldw	r2,8(fp)
 802e968:	d8800015 	stw	r2,0(sp)
 802e96c:	e1ffff17 	ldw	r7,-4(fp)
 802e970:	e1bffe17 	ldw	r6,-8(fp)
 802e974:	e17ffd17 	ldw	r5,-12(fp)
 802e978:	e13ffc17 	ldw	r4,-16(fp)
 802e97c:	802eaf40 	call	802eaf4 <alt_iic_isr_register>
}  
 802e980:	e037883a 	mov	sp,fp
 802e984:	dfc00117 	ldw	ra,4(sp)
 802e988:	df000017 	ldw	fp,0(sp)
 802e98c:	dec00204 	addi	sp,sp,8
 802e990:	f800283a 	ret

0802e994 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
 802e994:	defff904 	addi	sp,sp,-28
 802e998:	df000615 	stw	fp,24(sp)
 802e99c:	df000604 	addi	fp,sp,24
 802e9a0:	e13ffe15 	stw	r4,-8(fp)
 802e9a4:	e17fff15 	stw	r5,-4(fp)
 802e9a8:	e0bfff17 	ldw	r2,-4(fp)
 802e9ac:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802e9b0:	0005303a 	rdctl	r2,status
 802e9b4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802e9b8:	e0fffb17 	ldw	r3,-20(fp)
 802e9bc:	00bfff84 	movi	r2,-2
 802e9c0:	1884703a 	and	r2,r3,r2
 802e9c4:	1001703a 	wrctl	status,r2
  
  return context;
 802e9c8:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 802e9cc:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
 802e9d0:	00c00044 	movi	r3,1
 802e9d4:	e0bffa17 	ldw	r2,-24(fp)
 802e9d8:	1884983a 	sll	r2,r3,r2
 802e9dc:	1007883a 	mov	r3,r2
 802e9e0:	d0a01a17 	ldw	r2,-32664(gp)
 802e9e4:	1884b03a 	or	r2,r3,r2
 802e9e8:	d0a01a15 	stw	r2,-32664(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 802e9ec:	d0a01a17 	ldw	r2,-32664(gp)
 802e9f0:	100170fa 	wrctl	ienable,r2
 802e9f4:	e0bffc17 	ldw	r2,-16(fp)
 802e9f8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802e9fc:	e0bffd17 	ldw	r2,-12(fp)
 802ea00:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 802ea04:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
 802ea08:	0001883a 	nop
}
 802ea0c:	e037883a 	mov	sp,fp
 802ea10:	df000017 	ldw	fp,0(sp)
 802ea14:	dec00104 	addi	sp,sp,4
 802ea18:	f800283a 	ret

0802ea1c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
 802ea1c:	defff904 	addi	sp,sp,-28
 802ea20:	df000615 	stw	fp,24(sp)
 802ea24:	df000604 	addi	fp,sp,24
 802ea28:	e13ffe15 	stw	r4,-8(fp)
 802ea2c:	e17fff15 	stw	r5,-4(fp)
 802ea30:	e0bfff17 	ldw	r2,-4(fp)
 802ea34:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802ea38:	0005303a 	rdctl	r2,status
 802ea3c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802ea40:	e0fffb17 	ldw	r3,-20(fp)
 802ea44:	00bfff84 	movi	r2,-2
 802ea48:	1884703a 	and	r2,r3,r2
 802ea4c:	1001703a 	wrctl	status,r2
  
  return context;
 802ea50:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
 802ea54:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
 802ea58:	00c00044 	movi	r3,1
 802ea5c:	e0bffa17 	ldw	r2,-24(fp)
 802ea60:	1884983a 	sll	r2,r3,r2
 802ea64:	0084303a 	nor	r2,zero,r2
 802ea68:	1007883a 	mov	r3,r2
 802ea6c:	d0a01a17 	ldw	r2,-32664(gp)
 802ea70:	1884703a 	and	r2,r3,r2
 802ea74:	d0a01a15 	stw	r2,-32664(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
 802ea78:	d0a01a17 	ldw	r2,-32664(gp)
 802ea7c:	100170fa 	wrctl	ienable,r2
 802ea80:	e0bffc17 	ldw	r2,-16(fp)
 802ea84:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802ea88:	e0bffd17 	ldw	r2,-12(fp)
 802ea8c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
 802ea90:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
 802ea94:	0001883a 	nop
}
 802ea98:	e037883a 	mov	sp,fp
 802ea9c:	df000017 	ldw	fp,0(sp)
 802eaa0:	dec00104 	addi	sp,sp,4
 802eaa4:	f800283a 	ret

0802eaa8 <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
 802eaa8:	defffc04 	addi	sp,sp,-16
 802eaac:	df000315 	stw	fp,12(sp)
 802eab0:	df000304 	addi	fp,sp,12
 802eab4:	e13ffe15 	stw	r4,-8(fp)
 802eab8:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
 802eabc:	000530fa 	rdctl	r2,ienable
 802eac0:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
 802eac4:	00c00044 	movi	r3,1
 802eac8:	e0bfff17 	ldw	r2,-4(fp)
 802eacc:	1884983a 	sll	r2,r3,r2
 802ead0:	1007883a 	mov	r3,r2
 802ead4:	e0bffd17 	ldw	r2,-12(fp)
 802ead8:	1884703a 	and	r2,r3,r2
 802eadc:	1004c03a 	cmpne	r2,r2,zero
 802eae0:	10803fcc 	andi	r2,r2,255
}
 802eae4:	e037883a 	mov	sp,fp
 802eae8:	df000017 	ldw	fp,0(sp)
 802eaec:	dec00104 	addi	sp,sp,4
 802eaf0:	f800283a 	ret

0802eaf4 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
 802eaf4:	defff504 	addi	sp,sp,-44
 802eaf8:	dfc00a15 	stw	ra,40(sp)
 802eafc:	df000915 	stw	fp,36(sp)
 802eb00:	df000904 	addi	fp,sp,36
 802eb04:	e13ffc15 	stw	r4,-16(fp)
 802eb08:	e17ffd15 	stw	r5,-12(fp)
 802eb0c:	e1bffe15 	stw	r6,-8(fp)
 802eb10:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
 802eb14:	00bffa84 	movi	r2,-22
 802eb18:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
 802eb1c:	e0bffd17 	ldw	r2,-12(fp)
 802eb20:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
 802eb24:	e0bff817 	ldw	r2,-32(fp)
 802eb28:	10800808 	cmpgei	r2,r2,32
 802eb2c:	1000271e 	bne	r2,zero,802ebcc <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802eb30:	0005303a 	rdctl	r2,status
 802eb34:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802eb38:	e0fffb17 	ldw	r3,-20(fp)
 802eb3c:	00bfff84 	movi	r2,-2
 802eb40:	1884703a 	and	r2,r3,r2
 802eb44:	1001703a 	wrctl	status,r2
  
  return context;
 802eb48:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
 802eb4c:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
 802eb50:	00800034 	movhi	r2,0
 802eb54:	10879304 	addi	r2,r2,7756
 802eb58:	e0fff817 	ldw	r3,-32(fp)
 802eb5c:	180690fa 	slli	r3,r3,3
 802eb60:	10c5883a 	add	r2,r2,r3
 802eb64:	e0fffe17 	ldw	r3,-8(fp)
 802eb68:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
 802eb6c:	00800034 	movhi	r2,0
 802eb70:	10879304 	addi	r2,r2,7756
 802eb74:	e0fff817 	ldw	r3,-32(fp)
 802eb78:	180690fa 	slli	r3,r3,3
 802eb7c:	10c5883a 	add	r2,r2,r3
 802eb80:	10800104 	addi	r2,r2,4
 802eb84:	e0ffff17 	ldw	r3,-4(fp)
 802eb88:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
 802eb8c:	e0bffe17 	ldw	r2,-8(fp)
 802eb90:	10000526 	beq	r2,zero,802eba8 <alt_iic_isr_register+0xb4>
 802eb94:	e0bff817 	ldw	r2,-32(fp)
 802eb98:	100b883a 	mov	r5,r2
 802eb9c:	e13ffc17 	ldw	r4,-16(fp)
 802eba0:	802e9940 	call	802e994 <alt_ic_irq_enable>
 802eba4:	00000406 	br	802ebb8 <alt_iic_isr_register+0xc4>
 802eba8:	e0bff817 	ldw	r2,-32(fp)
 802ebac:	100b883a 	mov	r5,r2
 802ebb0:	e13ffc17 	ldw	r4,-16(fp)
 802ebb4:	802ea1c0 	call	802ea1c <alt_ic_irq_disable>
 802ebb8:	e0bff715 	stw	r2,-36(fp)
 802ebbc:	e0bffa17 	ldw	r2,-24(fp)
 802ebc0:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802ebc4:	e0bff917 	ldw	r2,-28(fp)
 802ebc8:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
 802ebcc:	e0bff717 	ldw	r2,-36(fp)
}
 802ebd0:	e037883a 	mov	sp,fp
 802ebd4:	dfc00117 	ldw	ra,4(sp)
 802ebd8:	df000017 	ldw	fp,0(sp)
 802ebdc:	dec00204 	addi	sp,sp,8
 802ebe0:	f800283a 	ret

0802ebe4 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
 802ebe4:	defff804 	addi	sp,sp,-32
 802ebe8:	dfc00715 	stw	ra,28(sp)
 802ebec:	df000615 	stw	fp,24(sp)
 802ebf0:	dc000515 	stw	r16,20(sp)
 802ebf4:	df000604 	addi	fp,sp,24
 802ebf8:	e13ffb15 	stw	r4,-20(fp)
 802ebfc:	e17ffc15 	stw	r5,-16(fp)
 802ec00:	e1bffd15 	stw	r6,-12(fp)
 802ec04:	e1fffe15 	stw	r7,-8(fp)
  int old;

  old = open (name, flags, mode);
 802ec08:	e1bffe17 	ldw	r6,-8(fp)
 802ec0c:	e17ffd17 	ldw	r5,-12(fp)
 802ec10:	e13ffc17 	ldw	r4,-16(fp)
 802ec14:	802ee6c0 	call	802ee6c <open>
 802ec18:	e0bffa15 	stw	r2,-24(fp)

  if (old >= 0)
 802ec1c:	e0bffa17 	ldw	r2,-24(fp)
 802ec20:	10002216 	blt	r2,zero,802ecac <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
 802ec24:	04000034 	movhi	r16,0
 802ec28:	8402f304 	addi	r16,r16,3020
 802ec2c:	e0bffa17 	ldw	r2,-24(fp)
 802ec30:	01400304 	movi	r5,12
 802ec34:	1009883a 	mov	r4,r2
 802ec38:	802a8bc0 	call	802a8bc <__mulsi3>
 802ec3c:	8085883a 	add	r2,r16,r2
 802ec40:	10c00017 	ldw	r3,0(r2)
 802ec44:	e0bffb17 	ldw	r2,-20(fp)
 802ec48:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
 802ec4c:	04000034 	movhi	r16,0
 802ec50:	8402f304 	addi	r16,r16,3020
 802ec54:	e0bffa17 	ldw	r2,-24(fp)
 802ec58:	01400304 	movi	r5,12
 802ec5c:	1009883a 	mov	r4,r2
 802ec60:	802a8bc0 	call	802a8bc <__mulsi3>
 802ec64:	8085883a 	add	r2,r16,r2
 802ec68:	10800104 	addi	r2,r2,4
 802ec6c:	10c00017 	ldw	r3,0(r2)
 802ec70:	e0bffb17 	ldw	r2,-20(fp)
 802ec74:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
 802ec78:	04000034 	movhi	r16,0
 802ec7c:	8402f304 	addi	r16,r16,3020
 802ec80:	e0bffa17 	ldw	r2,-24(fp)
 802ec84:	01400304 	movi	r5,12
 802ec88:	1009883a 	mov	r4,r2
 802ec8c:	802a8bc0 	call	802a8bc <__mulsi3>
 802ec90:	8085883a 	add	r2,r16,r2
 802ec94:	10800204 	addi	r2,r2,8
 802ec98:	10c00017 	ldw	r3,0(r2)
 802ec9c:	e0bffb17 	ldw	r2,-20(fp)
 802eca0:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
 802eca4:	e13ffa17 	ldw	r4,-24(fp)
 802eca8:	802d8ac0 	call	802d8ac <alt_release_fd>
  }
} 
 802ecac:	0001883a 	nop
 802ecb0:	e6ffff04 	addi	sp,fp,-4
 802ecb4:	dfc00217 	ldw	ra,8(sp)
 802ecb8:	df000117 	ldw	fp,4(sp)
 802ecbc:	dc000017 	ldw	r16,0(sp)
 802ecc0:	dec00304 	addi	sp,sp,12
 802ecc4:	f800283a 	ret

0802ecc8 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
 802ecc8:	defffb04 	addi	sp,sp,-20
 802eccc:	dfc00415 	stw	ra,16(sp)
 802ecd0:	df000315 	stw	fp,12(sp)
 802ecd4:	df000304 	addi	fp,sp,12
 802ecd8:	e13ffd15 	stw	r4,-12(fp)
 802ecdc:	e17ffe15 	stw	r5,-8(fp)
 802ece0:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
 802ece4:	01c07fc4 	movi	r7,511
 802ece8:	01800044 	movi	r6,1
 802ecec:	e17ffd17 	ldw	r5,-12(fp)
 802ecf0:	01000034 	movhi	r4,0
 802ecf4:	2102f604 	addi	r4,r4,3032
 802ecf8:	802ebe40 	call	802ebe4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
 802ecfc:	01c07fc4 	movi	r7,511
 802ed00:	000d883a 	mov	r6,zero
 802ed04:	e17ffe17 	ldw	r5,-8(fp)
 802ed08:	01000034 	movhi	r4,0
 802ed0c:	2102f304 	addi	r4,r4,3020
 802ed10:	802ebe40 	call	802ebe4 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
 802ed14:	01c07fc4 	movi	r7,511
 802ed18:	01800044 	movi	r6,1
 802ed1c:	e17fff17 	ldw	r5,-4(fp)
 802ed20:	01000034 	movhi	r4,0
 802ed24:	2102f904 	addi	r4,r4,3044
 802ed28:	802ebe40 	call	802ebe4 <alt_open_fd>
}  
 802ed2c:	0001883a 	nop
 802ed30:	e037883a 	mov	sp,fp
 802ed34:	dfc00117 	ldw	ra,4(sp)
 802ed38:	df000017 	ldw	fp,0(sp)
 802ed3c:	dec00204 	addi	sp,sp,8
 802ed40:	f800283a 	ret

0802ed44 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
 802ed44:	defffe04 	addi	sp,sp,-8
 802ed48:	dfc00115 	stw	ra,4(sp)
 802ed4c:	df000015 	stw	fp,0(sp)
 802ed50:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
 802ed54:	d0a00b17 	ldw	r2,-32724(gp)
 802ed58:	10000326 	beq	r2,zero,802ed68 <alt_get_errno+0x24>
 802ed5c:	d0a00b17 	ldw	r2,-32724(gp)
 802ed60:	103ee83a 	callr	r2
 802ed64:	00000106 	br	802ed6c <alt_get_errno+0x28>
 802ed68:	d0a01604 	addi	r2,gp,-32680
}
 802ed6c:	e037883a 	mov	sp,fp
 802ed70:	dfc00117 	ldw	ra,4(sp)
 802ed74:	df000017 	ldw	fp,0(sp)
 802ed78:	dec00204 	addi	sp,sp,8
 802ed7c:	f800283a 	ret

0802ed80 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
 802ed80:	defffb04 	addi	sp,sp,-20
 802ed84:	dfc00415 	stw	ra,16(sp)
 802ed88:	df000315 	stw	fp,12(sp)
 802ed8c:	dc000215 	stw	r16,8(sp)
 802ed90:	df000304 	addi	fp,sp,12
 802ed94:	e13ffe15 	stw	r4,-8(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
 802ed98:	e0bffe17 	ldw	r2,-8(fp)
 802ed9c:	10800217 	ldw	r2,8(r2)
 802eda0:	10d00034 	orhi	r3,r2,16384
 802eda4:	e0bffe17 	ldw	r2,-8(fp)
 802eda8:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 802edac:	e03ffd15 	stw	zero,-12(fp)
 802edb0:	00002306 	br	802ee40 <alt_file_locked+0xc0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 802edb4:	04000034 	movhi	r16,0
 802edb8:	8402f304 	addi	r16,r16,3020
 802edbc:	e0bffd17 	ldw	r2,-12(fp)
 802edc0:	01400304 	movi	r5,12
 802edc4:	1009883a 	mov	r4,r2
 802edc8:	802a8bc0 	call	802a8bc <__mulsi3>
 802edcc:	8085883a 	add	r2,r16,r2
 802edd0:	10c00017 	ldw	r3,0(r2)
 802edd4:	e0bffe17 	ldw	r2,-8(fp)
 802edd8:	10800017 	ldw	r2,0(r2)
 802eddc:	1880151e 	bne	r3,r2,802ee34 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 802ede0:	04000034 	movhi	r16,0
 802ede4:	8402f304 	addi	r16,r16,3020
 802ede8:	e0bffd17 	ldw	r2,-12(fp)
 802edec:	01400304 	movi	r5,12
 802edf0:	1009883a 	mov	r4,r2
 802edf4:	802a8bc0 	call	802a8bc <__mulsi3>
 802edf8:	8085883a 	add	r2,r16,r2
 802edfc:	10800204 	addi	r2,r2,8
 802ee00:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
 802ee04:	10000b0e 	bge	r2,zero,802ee34 <alt_file_locked+0xb4>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
 802ee08:	01400304 	movi	r5,12
 802ee0c:	e13ffd17 	ldw	r4,-12(fp)
 802ee10:	802a8bc0 	call	802a8bc <__mulsi3>
 802ee14:	1007883a 	mov	r3,r2
 802ee18:	00800034 	movhi	r2,0
 802ee1c:	1082f304 	addi	r2,r2,3020
 802ee20:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
 802ee24:	e0bffe17 	ldw	r2,-8(fp)
 802ee28:	18800226 	beq	r3,r2,802ee34 <alt_file_locked+0xb4>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
 802ee2c:	00bffcc4 	movi	r2,-13
 802ee30:	00000806 	br	802ee54 <alt_file_locked+0xd4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
 802ee34:	e0bffd17 	ldw	r2,-12(fp)
 802ee38:	10800044 	addi	r2,r2,1
 802ee3c:	e0bffd15 	stw	r2,-12(fp)
 802ee40:	d0a00a17 	ldw	r2,-32728(gp)
 802ee44:	1007883a 	mov	r3,r2
 802ee48:	e0bffd17 	ldw	r2,-12(fp)
 802ee4c:	18bfd92e 	bgeu	r3,r2,802edb4 <__flash_rwdata_start+0xfffff298>
    }
  }
  
  /* The device is not locked */
 
  return 0;
 802ee50:	0005883a 	mov	r2,zero
}
 802ee54:	e6ffff04 	addi	sp,fp,-4
 802ee58:	dfc00217 	ldw	ra,8(sp)
 802ee5c:	df000117 	ldw	fp,4(sp)
 802ee60:	dc000017 	ldw	r16,0(sp)
 802ee64:	dec00304 	addi	sp,sp,12
 802ee68:	f800283a 	ret

0802ee6c <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
 802ee6c:	defff604 	addi	sp,sp,-40
 802ee70:	dfc00915 	stw	ra,36(sp)
 802ee74:	df000815 	stw	fp,32(sp)
 802ee78:	df000804 	addi	fp,sp,32
 802ee7c:	e13ffd15 	stw	r4,-12(fp)
 802ee80:	e17ffe15 	stw	r5,-8(fp)
 802ee84:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
 802ee88:	00bfffc4 	movi	r2,-1
 802ee8c:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
 802ee90:	00bffb44 	movi	r2,-19
 802ee94:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
 802ee98:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
 802ee9c:	d1600804 	addi	r5,gp,-32736
 802eea0:	e13ffd17 	ldw	r4,-12(fp)
 802eea4:	802f1900 	call	802f190 <alt_find_dev>
 802eea8:	e0bff815 	stw	r2,-32(fp)
 802eeac:	e0bff817 	ldw	r2,-32(fp)
 802eeb0:	1000051e 	bne	r2,zero,802eec8 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
 802eeb4:	e13ffd17 	ldw	r4,-12(fp)
 802eeb8:	802f2200 	call	802f220 <alt_find_file>
 802eebc:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
 802eec0:	00800044 	movi	r2,1
 802eec4:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
 802eec8:	e0bff817 	ldw	r2,-32(fp)
 802eecc:	10002b26 	beq	r2,zero,802ef7c <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
 802eed0:	e13ff817 	ldw	r4,-32(fp)
 802eed4:	802f3280 	call	802f328 <alt_get_fd>
 802eed8:	e0bff915 	stw	r2,-28(fp)
 802eedc:	e0bff917 	ldw	r2,-28(fp)
 802eee0:	1000030e 	bge	r2,zero,802eef0 <open+0x84>
    {
      status = index;
 802eee4:	e0bff917 	ldw	r2,-28(fp)
 802eee8:	e0bffa15 	stw	r2,-24(fp)
 802eeec:	00002506 	br	802ef84 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
 802eef0:	01400304 	movi	r5,12
 802eef4:	e13ff917 	ldw	r4,-28(fp)
 802eef8:	802a8bc0 	call	802a8bc <__mulsi3>
 802eefc:	1007883a 	mov	r3,r2
 802ef00:	00800034 	movhi	r2,0
 802ef04:	1082f304 	addi	r2,r2,3020
 802ef08:	1885883a 	add	r2,r3,r2
 802ef0c:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
 802ef10:	e0fffe17 	ldw	r3,-8(fp)
 802ef14:	00900034 	movhi	r2,16384
 802ef18:	10bfffc4 	addi	r2,r2,-1
 802ef1c:	1886703a 	and	r3,r3,r2
 802ef20:	e0bffc17 	ldw	r2,-16(fp)
 802ef24:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
 802ef28:	e0bffb17 	ldw	r2,-20(fp)
 802ef2c:	1000051e 	bne	r2,zero,802ef44 <open+0xd8>
 802ef30:	e13ffc17 	ldw	r4,-16(fp)
 802ef34:	802ed800 	call	802ed80 <alt_file_locked>
 802ef38:	e0bffa15 	stw	r2,-24(fp)
 802ef3c:	e0bffa17 	ldw	r2,-24(fp)
 802ef40:	10001016 	blt	r2,zero,802ef84 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
 802ef44:	e0bff817 	ldw	r2,-32(fp)
 802ef48:	10800317 	ldw	r2,12(r2)
 802ef4c:	10000826 	beq	r2,zero,802ef70 <open+0x104>
 802ef50:	e0bff817 	ldw	r2,-32(fp)
 802ef54:	10800317 	ldw	r2,12(r2)
 802ef58:	e1ffff17 	ldw	r7,-4(fp)
 802ef5c:	e1bffe17 	ldw	r6,-8(fp)
 802ef60:	e17ffd17 	ldw	r5,-12(fp)
 802ef64:	e13ffc17 	ldw	r4,-16(fp)
 802ef68:	103ee83a 	callr	r2
 802ef6c:	00000106 	br	802ef74 <open+0x108>
 802ef70:	0005883a 	mov	r2,zero
 802ef74:	e0bffa15 	stw	r2,-24(fp)
 802ef78:	00000206 	br	802ef84 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
 802ef7c:	00bffb44 	movi	r2,-19
 802ef80:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
 802ef84:	e0bffa17 	ldw	r2,-24(fp)
 802ef88:	1000090e 	bge	r2,zero,802efb0 <open+0x144>
  {
    alt_release_fd (index);  
 802ef8c:	e13ff917 	ldw	r4,-28(fp)
 802ef90:	802d8ac0 	call	802d8ac <alt_release_fd>
    ALT_ERRNO = -status;
 802ef94:	802ed440 	call	802ed44 <alt_get_errno>
 802ef98:	1007883a 	mov	r3,r2
 802ef9c:	e0bffa17 	ldw	r2,-24(fp)
 802efa0:	0085c83a 	sub	r2,zero,r2
 802efa4:	18800015 	stw	r2,0(r3)
    return -1;
 802efa8:	00bfffc4 	movi	r2,-1
 802efac:	00000106 	br	802efb4 <open+0x148>
  }
  
  /* return the reference upon success */

  return index;
 802efb0:	e0bff917 	ldw	r2,-28(fp)
}
 802efb4:	e037883a 	mov	sp,fp
 802efb8:	dfc00117 	ldw	ra,4(sp)
 802efbc:	df000017 	ldw	fp,0(sp)
 802efc0:	dec00204 	addi	sp,sp,8
 802efc4:	f800283a 	ret

0802efc8 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
 802efc8:	defffa04 	addi	sp,sp,-24
 802efcc:	df000515 	stw	fp,20(sp)
 802efd0:	df000504 	addi	fp,sp,20
 802efd4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
 802efd8:	0005303a 	rdctl	r2,status
 802efdc:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
 802efe0:	e0fffc17 	ldw	r3,-16(fp)
 802efe4:	00bfff84 	movi	r2,-2
 802efe8:	1884703a 	and	r2,r3,r2
 802efec:	1001703a 	wrctl	status,r2
  
  return context;
 802eff0:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
 802eff4:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
 802eff8:	e0bfff17 	ldw	r2,-4(fp)
 802effc:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
 802f000:	e0bffd17 	ldw	r2,-12(fp)
 802f004:	10800017 	ldw	r2,0(r2)
 802f008:	e0fffd17 	ldw	r3,-12(fp)
 802f00c:	18c00117 	ldw	r3,4(r3)
 802f010:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
 802f014:	e0bffd17 	ldw	r2,-12(fp)
 802f018:	10800117 	ldw	r2,4(r2)
 802f01c:	e0fffd17 	ldw	r3,-12(fp)
 802f020:	18c00017 	ldw	r3,0(r3)
 802f024:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
 802f028:	e0bffd17 	ldw	r2,-12(fp)
 802f02c:	e0fffd17 	ldw	r3,-12(fp)
 802f030:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
 802f034:	e0bffd17 	ldw	r2,-12(fp)
 802f038:	e0fffd17 	ldw	r3,-12(fp)
 802f03c:	10c00015 	stw	r3,0(r2)
 802f040:	e0bffb17 	ldw	r2,-20(fp)
 802f044:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
 802f048:	e0bffe17 	ldw	r2,-8(fp)
 802f04c:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
 802f050:	0001883a 	nop
 802f054:	e037883a 	mov	sp,fp
 802f058:	df000017 	ldw	fp,0(sp)
 802f05c:	dec00104 	addi	sp,sp,4
 802f060:	f800283a 	ret

0802f064 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
 802f064:	defffb04 	addi	sp,sp,-20
 802f068:	dfc00415 	stw	ra,16(sp)
 802f06c:	df000315 	stw	fp,12(sp)
 802f070:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
 802f074:	d0a00e17 	ldw	r2,-32712(gp)
 802f078:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
 802f07c:	d0a01c17 	ldw	r2,-32656(gp)
 802f080:	10800044 	addi	r2,r2,1
 802f084:	d0a01c15 	stw	r2,-32656(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 802f088:	00002e06 	br	802f144 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
 802f08c:	e0bffd17 	ldw	r2,-12(fp)
 802f090:	10800017 	ldw	r2,0(r2)
 802f094:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
 802f098:	e0bffd17 	ldw	r2,-12(fp)
 802f09c:	10800403 	ldbu	r2,16(r2)
 802f0a0:	10803fcc 	andi	r2,r2,255
 802f0a4:	10000426 	beq	r2,zero,802f0b8 <alt_tick+0x54>
 802f0a8:	d0a01c17 	ldw	r2,-32656(gp)
 802f0ac:	1000021e 	bne	r2,zero,802f0b8 <alt_tick+0x54>
    {
      alarm->rollover = 0;
 802f0b0:	e0bffd17 	ldw	r2,-12(fp)
 802f0b4:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
 802f0b8:	e0bffd17 	ldw	r2,-12(fp)
 802f0bc:	10800217 	ldw	r2,8(r2)
 802f0c0:	d0e01c17 	ldw	r3,-32656(gp)
 802f0c4:	18801d36 	bltu	r3,r2,802f13c <alt_tick+0xd8>
 802f0c8:	e0bffd17 	ldw	r2,-12(fp)
 802f0cc:	10800403 	ldbu	r2,16(r2)
 802f0d0:	10803fcc 	andi	r2,r2,255
 802f0d4:	1000191e 	bne	r2,zero,802f13c <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
 802f0d8:	e0bffd17 	ldw	r2,-12(fp)
 802f0dc:	10800317 	ldw	r2,12(r2)
 802f0e0:	e0fffd17 	ldw	r3,-12(fp)
 802f0e4:	18c00517 	ldw	r3,20(r3)
 802f0e8:	1809883a 	mov	r4,r3
 802f0ec:	103ee83a 	callr	r2
 802f0f0:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
 802f0f4:	e0bfff17 	ldw	r2,-4(fp)
 802f0f8:	1000031e 	bne	r2,zero,802f108 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
 802f0fc:	e13ffd17 	ldw	r4,-12(fp)
 802f100:	802efc80 	call	802efc8 <alt_alarm_stop>
 802f104:	00000d06 	br	802f13c <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
 802f108:	e0bffd17 	ldw	r2,-12(fp)
 802f10c:	10c00217 	ldw	r3,8(r2)
 802f110:	e0bfff17 	ldw	r2,-4(fp)
 802f114:	1887883a 	add	r3,r3,r2
 802f118:	e0bffd17 	ldw	r2,-12(fp)
 802f11c:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
 802f120:	e0bffd17 	ldw	r2,-12(fp)
 802f124:	10c00217 	ldw	r3,8(r2)
 802f128:	d0a01c17 	ldw	r2,-32656(gp)
 802f12c:	1880032e 	bgeu	r3,r2,802f13c <alt_tick+0xd8>
        {
          alarm->rollover = 1;
 802f130:	e0bffd17 	ldw	r2,-12(fp)
 802f134:	00c00044 	movi	r3,1
 802f138:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
 802f13c:	e0bffe17 	ldw	r2,-8(fp)
 802f140:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
 802f144:	e0fffd17 	ldw	r3,-12(fp)
 802f148:	d0a00e04 	addi	r2,gp,-32712
 802f14c:	18bfcf1e 	bne	r3,r2,802f08c <__flash_rwdata_start+0xfffff570>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
 802f150:	0001883a 	nop
}
 802f154:	0001883a 	nop
 802f158:	e037883a 	mov	sp,fp
 802f15c:	dfc00117 	ldw	ra,4(sp)
 802f160:	df000017 	ldw	fp,0(sp)
 802f164:	dec00204 	addi	sp,sp,8
 802f168:	f800283a 	ret

0802f16c <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
 802f16c:	deffff04 	addi	sp,sp,-4
 802f170:	df000015 	stw	fp,0(sp)
 802f174:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
 802f178:	000170fa 	wrctl	ienable,zero
}
 802f17c:	0001883a 	nop
 802f180:	e037883a 	mov	sp,fp
 802f184:	df000017 	ldw	fp,0(sp)
 802f188:	dec00104 	addi	sp,sp,4
 802f18c:	f800283a 	ret

0802f190 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
 802f190:	defffa04 	addi	sp,sp,-24
 802f194:	dfc00515 	stw	ra,20(sp)
 802f198:	df000415 	stw	fp,16(sp)
 802f19c:	df000404 	addi	fp,sp,16
 802f1a0:	e13ffe15 	stw	r4,-8(fp)
 802f1a4:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
 802f1a8:	e0bfff17 	ldw	r2,-4(fp)
 802f1ac:	10800017 	ldw	r2,0(r2)
 802f1b0:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
 802f1b4:	e13ffe17 	ldw	r4,-8(fp)
 802f1b8:	8026ee40 	call	8026ee4 <strlen>
 802f1bc:	10800044 	addi	r2,r2,1
 802f1c0:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 802f1c4:	00000d06 	br	802f1fc <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
 802f1c8:	e0bffc17 	ldw	r2,-16(fp)
 802f1cc:	10800217 	ldw	r2,8(r2)
 802f1d0:	e0fffd17 	ldw	r3,-12(fp)
 802f1d4:	180d883a 	mov	r6,r3
 802f1d8:	e17ffe17 	ldw	r5,-8(fp)
 802f1dc:	1009883a 	mov	r4,r2
 802f1e0:	802f4d40 	call	802f4d4 <memcmp>
 802f1e4:	1000021e 	bne	r2,zero,802f1f0 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
 802f1e8:	e0bffc17 	ldw	r2,-16(fp)
 802f1ec:	00000706 	br	802f20c <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
 802f1f0:	e0bffc17 	ldw	r2,-16(fp)
 802f1f4:	10800017 	ldw	r2,0(r2)
 802f1f8:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
 802f1fc:	e0fffc17 	ldw	r3,-16(fp)
 802f200:	e0bfff17 	ldw	r2,-4(fp)
 802f204:	18bff01e 	bne	r3,r2,802f1c8 <__flash_rwdata_start+0xfffff6ac>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
 802f208:	0005883a 	mov	r2,zero
}
 802f20c:	e037883a 	mov	sp,fp
 802f210:	dfc00117 	ldw	ra,4(sp)
 802f214:	df000017 	ldw	fp,0(sp)
 802f218:	dec00204 	addi	sp,sp,8
 802f21c:	f800283a 	ret

0802f220 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
 802f220:	defffb04 	addi	sp,sp,-20
 802f224:	dfc00415 	stw	ra,16(sp)
 802f228:	df000315 	stw	fp,12(sp)
 802f22c:	df000304 	addi	fp,sp,12
 802f230:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
 802f234:	d0a00617 	ldw	r2,-32744(gp)
 802f238:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 802f23c:	00003106 	br	802f304 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
 802f240:	e0bffd17 	ldw	r2,-12(fp)
 802f244:	10800217 	ldw	r2,8(r2)
 802f248:	1009883a 	mov	r4,r2
 802f24c:	8026ee40 	call	8026ee4 <strlen>
 802f250:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
 802f254:	e0bffd17 	ldw	r2,-12(fp)
 802f258:	10c00217 	ldw	r3,8(r2)
 802f25c:	e0bffe17 	ldw	r2,-8(fp)
 802f260:	10bfffc4 	addi	r2,r2,-1
 802f264:	1885883a 	add	r2,r3,r2
 802f268:	10800003 	ldbu	r2,0(r2)
 802f26c:	10803fcc 	andi	r2,r2,255
 802f270:	1080201c 	xori	r2,r2,128
 802f274:	10bfe004 	addi	r2,r2,-128
 802f278:	10800bd8 	cmpnei	r2,r2,47
 802f27c:	1000031e 	bne	r2,zero,802f28c <alt_find_file+0x6c>
    {
      len -= 1;
 802f280:	e0bffe17 	ldw	r2,-8(fp)
 802f284:	10bfffc4 	addi	r2,r2,-1
 802f288:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 802f28c:	e0bffe17 	ldw	r2,-8(fp)
 802f290:	e0ffff17 	ldw	r3,-4(fp)
 802f294:	1885883a 	add	r2,r3,r2
 802f298:	10800003 	ldbu	r2,0(r2)
 802f29c:	10803fcc 	andi	r2,r2,255
 802f2a0:	1080201c 	xori	r2,r2,128
 802f2a4:	10bfe004 	addi	r2,r2,-128
 802f2a8:	10800be0 	cmpeqi	r2,r2,47
 802f2ac:	1000081e 	bne	r2,zero,802f2d0 <alt_find_file+0xb0>
 802f2b0:	e0bffe17 	ldw	r2,-8(fp)
 802f2b4:	e0ffff17 	ldw	r3,-4(fp)
 802f2b8:	1885883a 	add	r2,r3,r2
 802f2bc:	10800003 	ldbu	r2,0(r2)
 802f2c0:	10803fcc 	andi	r2,r2,255
 802f2c4:	1080201c 	xori	r2,r2,128
 802f2c8:	10bfe004 	addi	r2,r2,-128
 802f2cc:	10000a1e 	bne	r2,zero,802f2f8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
 802f2d0:	e0bffd17 	ldw	r2,-12(fp)
 802f2d4:	10800217 	ldw	r2,8(r2)
 802f2d8:	e0fffe17 	ldw	r3,-8(fp)
 802f2dc:	180d883a 	mov	r6,r3
 802f2e0:	e17fff17 	ldw	r5,-4(fp)
 802f2e4:	1009883a 	mov	r4,r2
 802f2e8:	802f4d40 	call	802f4d4 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
 802f2ec:	1000021e 	bne	r2,zero,802f2f8 <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
 802f2f0:	e0bffd17 	ldw	r2,-12(fp)
 802f2f4:	00000706 	br	802f314 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
 802f2f8:	e0bffd17 	ldw	r2,-12(fp)
 802f2fc:	10800017 	ldw	r2,0(r2)
 802f300:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
 802f304:	e0fffd17 	ldw	r3,-12(fp)
 802f308:	d0a00604 	addi	r2,gp,-32744
 802f30c:	18bfcc1e 	bne	r3,r2,802f240 <__flash_rwdata_start+0xfffff724>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
 802f310:	0005883a 	mov	r2,zero
}
 802f314:	e037883a 	mov	sp,fp
 802f318:	dfc00117 	ldw	ra,4(sp)
 802f31c:	df000017 	ldw	fp,0(sp)
 802f320:	dec00204 	addi	sp,sp,8
 802f324:	f800283a 	ret

0802f328 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
 802f328:	defffa04 	addi	sp,sp,-24
 802f32c:	dfc00515 	stw	ra,20(sp)
 802f330:	df000415 	stw	fp,16(sp)
 802f334:	dc000315 	stw	r16,12(sp)
 802f338:	df000404 	addi	fp,sp,16
 802f33c:	e13ffe15 	stw	r4,-8(fp)
  alt_32 i;
  int rc = -EMFILE;
 802f340:	00bffa04 	movi	r2,-24
 802f344:	e0bffd15 	stw	r2,-12(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 802f348:	e03ffc15 	stw	zero,-16(fp)
 802f34c:	00001d06 	br	802f3c4 <alt_get_fd+0x9c>
  {
    if (!alt_fd_list[i].dev)
 802f350:	04000034 	movhi	r16,0
 802f354:	8402f304 	addi	r16,r16,3020
 802f358:	e0bffc17 	ldw	r2,-16(fp)
 802f35c:	01400304 	movi	r5,12
 802f360:	1009883a 	mov	r4,r2
 802f364:	802a8bc0 	call	802a8bc <__mulsi3>
 802f368:	8085883a 	add	r2,r16,r2
 802f36c:	10800017 	ldw	r2,0(r2)
 802f370:	1000111e 	bne	r2,zero,802f3b8 <alt_get_fd+0x90>
    {
      alt_fd_list[i].dev = dev;
 802f374:	04000034 	movhi	r16,0
 802f378:	8402f304 	addi	r16,r16,3020
 802f37c:	e0bffc17 	ldw	r2,-16(fp)
 802f380:	01400304 	movi	r5,12
 802f384:	1009883a 	mov	r4,r2
 802f388:	802a8bc0 	call	802a8bc <__mulsi3>
 802f38c:	8085883a 	add	r2,r16,r2
 802f390:	e0fffe17 	ldw	r3,-8(fp)
 802f394:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
 802f398:	d0e00a17 	ldw	r3,-32728(gp)
 802f39c:	e0bffc17 	ldw	r2,-16(fp)
 802f3a0:	1880020e 	bge	r3,r2,802f3ac <alt_get_fd+0x84>
      {
        alt_max_fd = i;
 802f3a4:	e0bffc17 	ldw	r2,-16(fp)
 802f3a8:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
 802f3ac:	e0bffc17 	ldw	r2,-16(fp)
 802f3b0:	e0bffd15 	stw	r2,-12(fp)
      goto alt_get_fd_exit;
 802f3b4:	00000606 	br	802f3d0 <alt_get_fd+0xa8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
 802f3b8:	e0bffc17 	ldw	r2,-16(fp)
 802f3bc:	10800044 	addi	r2,r2,1
 802f3c0:	e0bffc15 	stw	r2,-16(fp)
 802f3c4:	e0bffc17 	ldw	r2,-16(fp)
 802f3c8:	10800810 	cmplti	r2,r2,32
 802f3cc:	103fe01e 	bne	r2,zero,802f350 <__flash_rwdata_start+0xfffff834>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
 802f3d0:	e0bffd17 	ldw	r2,-12(fp)
}
 802f3d4:	e6ffff04 	addi	sp,fp,-4
 802f3d8:	dfc00217 	ldw	ra,8(sp)
 802f3dc:	df000117 	ldw	fp,4(sp)
 802f3e0:	dc000017 	ldw	r16,0(sp)
 802f3e4:	dec00304 	addi	sp,sp,12
 802f3e8:	f800283a 	ret

0802f3ec <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
 802f3ec:	defffe04 	addi	sp,sp,-8
 802f3f0:	df000115 	stw	fp,4(sp)
 802f3f4:	df000104 	addi	fp,sp,4
 802f3f8:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
 802f3fc:	e0bfff17 	ldw	r2,-4(fp)
 802f400:	10bffe84 	addi	r2,r2,-6
 802f404:	10c00428 	cmpgeui	r3,r2,16
 802f408:	18001a1e 	bne	r3,zero,802f474 <alt_exception_cause_generated_bad_addr+0x88>
 802f40c:	100690ba 	slli	r3,r2,2
 802f410:	008200f4 	movhi	r2,2051
 802f414:	10bd0904 	addi	r2,r2,-3036
 802f418:	1885883a 	add	r2,r3,r2
 802f41c:	10800017 	ldw	r2,0(r2)
 802f420:	1000683a 	jmp	r2
 802f424:	0802f464 	muli	zero,at,3025
 802f428:	0802f464 	muli	zero,at,3025
 802f42c:	0802f474 	orhi	zero,at,3025
 802f430:	0802f474 	orhi	zero,at,3025
 802f434:	0802f474 	orhi	zero,at,3025
 802f438:	0802f464 	muli	zero,at,3025
 802f43c:	0802f46c 	andhi	zero,at,3025
 802f440:	0802f474 	orhi	zero,at,3025
 802f444:	0802f464 	muli	zero,at,3025
 802f448:	0802f464 	muli	zero,at,3025
 802f44c:	0802f474 	orhi	zero,at,3025
 802f450:	0802f464 	muli	zero,at,3025
 802f454:	0802f46c 	andhi	zero,at,3025
 802f458:	0802f474 	orhi	zero,at,3025
 802f45c:	0802f474 	orhi	zero,at,3025
 802f460:	0802f464 	muli	zero,at,3025
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
 802f464:	00800044 	movi	r2,1
 802f468:	00000306 	br	802f478 <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
 802f46c:	0005883a 	mov	r2,zero
 802f470:	00000106 	br	802f478 <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
 802f474:	0005883a 	mov	r2,zero
  }
}
 802f478:	e037883a 	mov	sp,fp
 802f47c:	df000017 	ldw	fp,0(sp)
 802f480:	dec00104 	addi	sp,sp,4
 802f484:	f800283a 	ret

0802f488 <atexit>:
 802f488:	200b883a 	mov	r5,r4
 802f48c:	000f883a 	mov	r7,zero
 802f490:	000d883a 	mov	r6,zero
 802f494:	0009883a 	mov	r4,zero
 802f498:	802f5501 	jmpi	802f550 <__register_exitproc>

0802f49c <exit>:
 802f49c:	defffe04 	addi	sp,sp,-8
 802f4a0:	000b883a 	mov	r5,zero
 802f4a4:	dc000015 	stw	r16,0(sp)
 802f4a8:	dfc00115 	stw	ra,4(sp)
 802f4ac:	2021883a 	mov	r16,r4
 802f4b0:	802f6680 	call	802f668 <__call_exitprocs>
 802f4b4:	00800034 	movhi	r2,0
 802f4b8:	10876b04 	addi	r2,r2,7596
 802f4bc:	11000017 	ldw	r4,0(r2)
 802f4c0:	20800f17 	ldw	r2,60(r4)
 802f4c4:	10000126 	beq	r2,zero,802f4cc <exit+0x30>
 802f4c8:	103ee83a 	callr	r2
 802f4cc:	8009883a 	mov	r4,r16
 802f4d0:	802f7e80 	call	802f7e8 <_exit>

0802f4d4 <memcmp>:
 802f4d4:	01c000c4 	movi	r7,3
 802f4d8:	3980192e 	bgeu	r7,r6,802f540 <memcmp+0x6c>
 802f4dc:	2144b03a 	or	r2,r4,r5
 802f4e0:	11c4703a 	and	r2,r2,r7
 802f4e4:	10000f26 	beq	r2,zero,802f524 <memcmp+0x50>
 802f4e8:	20800003 	ldbu	r2,0(r4)
 802f4ec:	28c00003 	ldbu	r3,0(r5)
 802f4f0:	10c0151e 	bne	r2,r3,802f548 <memcmp+0x74>
 802f4f4:	31bfff84 	addi	r6,r6,-2
 802f4f8:	01ffffc4 	movi	r7,-1
 802f4fc:	00000406 	br	802f510 <memcmp+0x3c>
 802f500:	20800003 	ldbu	r2,0(r4)
 802f504:	28c00003 	ldbu	r3,0(r5)
 802f508:	31bfffc4 	addi	r6,r6,-1
 802f50c:	10c00e1e 	bne	r2,r3,802f548 <memcmp+0x74>
 802f510:	21000044 	addi	r4,r4,1
 802f514:	29400044 	addi	r5,r5,1
 802f518:	31fff91e 	bne	r6,r7,802f500 <__flash_rwdata_start+0xfffff9e4>
 802f51c:	0005883a 	mov	r2,zero
 802f520:	f800283a 	ret
 802f524:	20c00017 	ldw	r3,0(r4)
 802f528:	28800017 	ldw	r2,0(r5)
 802f52c:	18bfee1e 	bne	r3,r2,802f4e8 <__flash_rwdata_start+0xfffff9cc>
 802f530:	31bfff04 	addi	r6,r6,-4
 802f534:	21000104 	addi	r4,r4,4
 802f538:	29400104 	addi	r5,r5,4
 802f53c:	39bff936 	bltu	r7,r6,802f524 <__flash_rwdata_start+0xfffffa08>
 802f540:	303fe91e 	bne	r6,zero,802f4e8 <__flash_rwdata_start+0xfffff9cc>
 802f544:	003ff506 	br	802f51c <__flash_rwdata_start+0xfffffa00>
 802f548:	10c5c83a 	sub	r2,r2,r3
 802f54c:	f800283a 	ret

0802f550 <__register_exitproc>:
 802f550:	defffa04 	addi	sp,sp,-24
 802f554:	dc000315 	stw	r16,12(sp)
 802f558:	04000034 	movhi	r16,0
 802f55c:	84076b04 	addi	r16,r16,7596
 802f560:	80c00017 	ldw	r3,0(r16)
 802f564:	dc400415 	stw	r17,16(sp)
 802f568:	dfc00515 	stw	ra,20(sp)
 802f56c:	18805217 	ldw	r2,328(r3)
 802f570:	2023883a 	mov	r17,r4
 802f574:	10003726 	beq	r2,zero,802f654 <__register_exitproc+0x104>
 802f578:	10c00117 	ldw	r3,4(r2)
 802f57c:	010007c4 	movi	r4,31
 802f580:	20c00e16 	blt	r4,r3,802f5bc <__register_exitproc+0x6c>
 802f584:	1a000044 	addi	r8,r3,1
 802f588:	8800221e 	bne	r17,zero,802f614 <__register_exitproc+0xc4>
 802f58c:	18c00084 	addi	r3,r3,2
 802f590:	18c7883a 	add	r3,r3,r3
 802f594:	18c7883a 	add	r3,r3,r3
 802f598:	12000115 	stw	r8,4(r2)
 802f59c:	10c7883a 	add	r3,r2,r3
 802f5a0:	19400015 	stw	r5,0(r3)
 802f5a4:	0005883a 	mov	r2,zero
 802f5a8:	dfc00517 	ldw	ra,20(sp)
 802f5ac:	dc400417 	ldw	r17,16(sp)
 802f5b0:	dc000317 	ldw	r16,12(sp)
 802f5b4:	dec00604 	addi	sp,sp,24
 802f5b8:	f800283a 	ret
 802f5bc:	00800034 	movhi	r2,0
 802f5c0:	10800004 	addi	r2,r2,0
 802f5c4:	10002626 	beq	r2,zero,802f660 <__register_exitproc+0x110>
 802f5c8:	01006404 	movi	r4,400
 802f5cc:	d9400015 	stw	r5,0(sp)
 802f5d0:	d9800115 	stw	r6,4(sp)
 802f5d4:	d9c00215 	stw	r7,8(sp)
 802f5d8:	00000000 	call	0 <__alt_mem_sdram>
 802f5dc:	d9400017 	ldw	r5,0(sp)
 802f5e0:	d9800117 	ldw	r6,4(sp)
 802f5e4:	d9c00217 	ldw	r7,8(sp)
 802f5e8:	10001d26 	beq	r2,zero,802f660 <__register_exitproc+0x110>
 802f5ec:	81000017 	ldw	r4,0(r16)
 802f5f0:	10000115 	stw	zero,4(r2)
 802f5f4:	02000044 	movi	r8,1
 802f5f8:	22405217 	ldw	r9,328(r4)
 802f5fc:	0007883a 	mov	r3,zero
 802f600:	12400015 	stw	r9,0(r2)
 802f604:	20805215 	stw	r2,328(r4)
 802f608:	10006215 	stw	zero,392(r2)
 802f60c:	10006315 	stw	zero,396(r2)
 802f610:	883fde26 	beq	r17,zero,802f58c <__flash_rwdata_start+0xfffffa70>
 802f614:	18c9883a 	add	r4,r3,r3
 802f618:	2109883a 	add	r4,r4,r4
 802f61c:	1109883a 	add	r4,r2,r4
 802f620:	21802215 	stw	r6,136(r4)
 802f624:	01800044 	movi	r6,1
 802f628:	12406217 	ldw	r9,392(r2)
 802f62c:	30cc983a 	sll	r6,r6,r3
 802f630:	4992b03a 	or	r9,r9,r6
 802f634:	12406215 	stw	r9,392(r2)
 802f638:	21c04215 	stw	r7,264(r4)
 802f63c:	01000084 	movi	r4,2
 802f640:	893fd21e 	bne	r17,r4,802f58c <__flash_rwdata_start+0xfffffa70>
 802f644:	11006317 	ldw	r4,396(r2)
 802f648:	218cb03a 	or	r6,r4,r6
 802f64c:	11806315 	stw	r6,396(r2)
 802f650:	003fce06 	br	802f58c <__flash_rwdata_start+0xfffffa70>
 802f654:	18805304 	addi	r2,r3,332
 802f658:	18805215 	stw	r2,328(r3)
 802f65c:	003fc606 	br	802f578 <__flash_rwdata_start+0xfffffa5c>
 802f660:	00bfffc4 	movi	r2,-1
 802f664:	003fd006 	br	802f5a8 <__flash_rwdata_start+0xfffffa8c>

0802f668 <__call_exitprocs>:
 802f668:	defff504 	addi	sp,sp,-44
 802f66c:	df000915 	stw	fp,36(sp)
 802f670:	dd400615 	stw	r21,24(sp)
 802f674:	dc800315 	stw	r18,12(sp)
 802f678:	dfc00a15 	stw	ra,40(sp)
 802f67c:	ddc00815 	stw	r23,32(sp)
 802f680:	dd800715 	stw	r22,28(sp)
 802f684:	dd000515 	stw	r20,20(sp)
 802f688:	dcc00415 	stw	r19,16(sp)
 802f68c:	dc400215 	stw	r17,8(sp)
 802f690:	dc000115 	stw	r16,4(sp)
 802f694:	d9000015 	stw	r4,0(sp)
 802f698:	2839883a 	mov	fp,r5
 802f69c:	04800044 	movi	r18,1
 802f6a0:	057fffc4 	movi	r21,-1
 802f6a4:	00800034 	movhi	r2,0
 802f6a8:	10876b04 	addi	r2,r2,7596
 802f6ac:	12000017 	ldw	r8,0(r2)
 802f6b0:	45005217 	ldw	r20,328(r8)
 802f6b4:	44c05204 	addi	r19,r8,328
 802f6b8:	a0001c26 	beq	r20,zero,802f72c <__call_exitprocs+0xc4>
 802f6bc:	a0800117 	ldw	r2,4(r20)
 802f6c0:	15ffffc4 	addi	r23,r2,-1
 802f6c4:	b8000d16 	blt	r23,zero,802f6fc <__call_exitprocs+0x94>
 802f6c8:	14000044 	addi	r16,r2,1
 802f6cc:	8421883a 	add	r16,r16,r16
 802f6d0:	8421883a 	add	r16,r16,r16
 802f6d4:	84402004 	addi	r17,r16,128
 802f6d8:	a463883a 	add	r17,r20,r17
 802f6dc:	a421883a 	add	r16,r20,r16
 802f6e0:	e0001e26 	beq	fp,zero,802f75c <__call_exitprocs+0xf4>
 802f6e4:	80804017 	ldw	r2,256(r16)
 802f6e8:	e0801c26 	beq	fp,r2,802f75c <__call_exitprocs+0xf4>
 802f6ec:	bdffffc4 	addi	r23,r23,-1
 802f6f0:	843fff04 	addi	r16,r16,-4
 802f6f4:	8c7fff04 	addi	r17,r17,-4
 802f6f8:	bd7ff91e 	bne	r23,r21,802f6e0 <__flash_rwdata_start+0xfffffbc4>
 802f6fc:	00800034 	movhi	r2,0
 802f700:	10800004 	addi	r2,r2,0
 802f704:	10000926 	beq	r2,zero,802f72c <__call_exitprocs+0xc4>
 802f708:	a0800117 	ldw	r2,4(r20)
 802f70c:	1000301e 	bne	r2,zero,802f7d0 <__call_exitprocs+0x168>
 802f710:	a0800017 	ldw	r2,0(r20)
 802f714:	10003226 	beq	r2,zero,802f7e0 <__call_exitprocs+0x178>
 802f718:	a009883a 	mov	r4,r20
 802f71c:	98800015 	stw	r2,0(r19)
 802f720:	00000000 	call	0 <__alt_mem_sdram>
 802f724:	9d000017 	ldw	r20,0(r19)
 802f728:	a03fe41e 	bne	r20,zero,802f6bc <__flash_rwdata_start+0xfffffba0>
 802f72c:	dfc00a17 	ldw	ra,40(sp)
 802f730:	df000917 	ldw	fp,36(sp)
 802f734:	ddc00817 	ldw	r23,32(sp)
 802f738:	dd800717 	ldw	r22,28(sp)
 802f73c:	dd400617 	ldw	r21,24(sp)
 802f740:	dd000517 	ldw	r20,20(sp)
 802f744:	dcc00417 	ldw	r19,16(sp)
 802f748:	dc800317 	ldw	r18,12(sp)
 802f74c:	dc400217 	ldw	r17,8(sp)
 802f750:	dc000117 	ldw	r16,4(sp)
 802f754:	dec00b04 	addi	sp,sp,44
 802f758:	f800283a 	ret
 802f75c:	a0800117 	ldw	r2,4(r20)
 802f760:	80c00017 	ldw	r3,0(r16)
 802f764:	10bfffc4 	addi	r2,r2,-1
 802f768:	15c01426 	beq	r2,r23,802f7bc <__call_exitprocs+0x154>
 802f76c:	80000015 	stw	zero,0(r16)
 802f770:	183fde26 	beq	r3,zero,802f6ec <__flash_rwdata_start+0xfffffbd0>
 802f774:	95c8983a 	sll	r4,r18,r23
 802f778:	a0806217 	ldw	r2,392(r20)
 802f77c:	a5800117 	ldw	r22,4(r20)
 802f780:	2084703a 	and	r2,r4,r2
 802f784:	10000b26 	beq	r2,zero,802f7b4 <__call_exitprocs+0x14c>
 802f788:	a0806317 	ldw	r2,396(r20)
 802f78c:	2088703a 	and	r4,r4,r2
 802f790:	20000c1e 	bne	r4,zero,802f7c4 <__call_exitprocs+0x15c>
 802f794:	89400017 	ldw	r5,0(r17)
 802f798:	d9000017 	ldw	r4,0(sp)
 802f79c:	183ee83a 	callr	r3
 802f7a0:	a0800117 	ldw	r2,4(r20)
 802f7a4:	15bfbf1e 	bne	r2,r22,802f6a4 <__flash_rwdata_start+0xfffffb88>
 802f7a8:	98800017 	ldw	r2,0(r19)
 802f7ac:	153fcf26 	beq	r2,r20,802f6ec <__flash_rwdata_start+0xfffffbd0>
 802f7b0:	003fbc06 	br	802f6a4 <__flash_rwdata_start+0xfffffb88>
 802f7b4:	183ee83a 	callr	r3
 802f7b8:	003ff906 	br	802f7a0 <__flash_rwdata_start+0xfffffc84>
 802f7bc:	a5c00115 	stw	r23,4(r20)
 802f7c0:	003feb06 	br	802f770 <__flash_rwdata_start+0xfffffc54>
 802f7c4:	89000017 	ldw	r4,0(r17)
 802f7c8:	183ee83a 	callr	r3
 802f7cc:	003ff406 	br	802f7a0 <__flash_rwdata_start+0xfffffc84>
 802f7d0:	a0800017 	ldw	r2,0(r20)
 802f7d4:	a027883a 	mov	r19,r20
 802f7d8:	1029883a 	mov	r20,r2
 802f7dc:	003fb606 	br	802f6b8 <__flash_rwdata_start+0xfffffb9c>
 802f7e0:	0005883a 	mov	r2,zero
 802f7e4:	003ffb06 	br	802f7d4 <__flash_rwdata_start+0xfffffcb8>

0802f7e8 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
 802f7e8:	defffd04 	addi	sp,sp,-12
 802f7ec:	df000215 	stw	fp,8(sp)
 802f7f0:	df000204 	addi	fp,sp,8
 802f7f4:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
 802f7f8:	0001883a 	nop
 802f7fc:	e0bfff17 	ldw	r2,-4(fp)
 802f800:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
 802f804:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
 802f808:	10000226 	beq	r2,zero,802f814 <_exit+0x2c>
    ALT_SIM_FAIL();
 802f80c:	002af070 	cmpltui	zero,zero,43969
 802f810:	00000106 	br	802f818 <_exit+0x30>
  } else {
    ALT_SIM_PASS();
 802f814:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
 802f818:	003fff06 	br	802f818 <__flash_rwdata_start+0xfffffcfc>
